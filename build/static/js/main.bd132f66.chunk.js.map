{"version":3,"sources":["components/SideNavigation.js","Redux/actions/permission.js","components/TopNavigation.js","Redux/actions/authentication.js","components/Footer.js","config.js","pages/Statistics/Users.js","pages/Statistics/AppStatistics.js","pages/Statistics/AvailableWarehouseGraph.js","pages/Statistics/AvailableWarehouse.js","pages/Statistics/Commissions.js","pages/Statistics/Transactions.js","pages/Statistics/TransactionsGraph.js","pages/Statistics/UsersByOs.js","pages/Statistics/UsersGraph.js","pages/Dashboard.js","pages/EmailNotifications.js","pages/SingleUser.js","pages/InventoryLog/DispatchOrderLog.js","pages/InventoryLog/RejectedStockLog.js","pages/InventoryLog/StockReceiptLog.js","pages/Settings/EditPassword.js","pages/Settings/EmailSettings.js","pages/Settings/SmsSettings.js","pages/StaffManagement/AddNewStaff.js","pages/StaffManagement/AllStaff.js","pages/StaffManagement/RoleManagement.js","pages/TransactionLog/ExpiredRentLog.js","pages/TransactionLog/MerchantPayoutLog.js","pages/TransactionLog/ReferralLog.js","pages/TransactionLog/WareHousersPaymentLog.js","pages/TransactionLog/WithdrawalLog.js","pages/UserManagement/AllMerchants.js","pages/UserManagement/AllUsers.js","pages/UserManagement/AllWarehouser.js","pages/UserManagement/BannedUsers.js","pages/ListingManagement/AllListings.js","pages/ListingManagement/AvailableListings.js","pages/ListingManagement/AllRequisitions.js","pages/ListingManagement/ExpiredListings.js","components/Routes.js","components/RoutesWithNavigation.js","pages/auth/Login.js","pages/auth/PasswordReset.js","components/AuthRoutes.js","App.js","serviceWorker.js","Redux/reducers/isLoggedReducer.js","Redux/reducers/permissionReducer.js","Redux/reducers/usersReducer.js","Redux/reducers/index.js","index.js","assets/ginjabox.png"],"names":["SideNavigation","React","Component","componentWillMount","this","props","permission","rSNL","to","text","icon","onClick","onLinkClick","render","permit","className","logo","Logo","bg","mask","fixed","breakWidth","triggerOpening","style","transition","exact","topLevel","name","id","connect","state","dispatch","type","TopNavigation","useDispatch","navStyle","paddingLeft","toggle","light","expand","scrolling","zIndex","onSideNavToggleClick","key","lineHeight","marginleft","verticalAlign","cursor","color","size","href","routeName","right","flexDirection","nav","caret","minWidth","localStorage","clear","window","location","reload","Copyrights","date","Date","getFullYear","apiUrl","Users","useState","totalUsers","setTotalUsers","loadTotalUsers","a","axios","get","headers","getItem","then","res","data","catch","err","useEffect","xl","md","cascade","value","barClassName","height","wrapperStyle","opacity","AppStatistics","lg","sm","availableWarehouseStatistics","labels","datasets","label","backgroundColor","borderColor","borderWidth","pointBorderColor","pointBorderWidth","AvailableWarehouseGraph","LineOptions","narrow","selected","disabled","options","AvailableWarehouse","totalCommissions","setTotalCommissions","loadTotalCommissions","Commissions","Transactions","totalTransactions","setTotalTransactions","loadTotalTransactions","transactionStatistics","TransactionGraph","UsersByOs","loading","setLoading","android","setAndroid","ios","setIos","loadUsersOs","mobileChartData","hoverBackgroundColor","responsive","maintainAspectRatio","legend","fontColor","role","userStatistics","pointBackgroundColor","UsersGraph","marginBottom","fontSize","scales","xAxes","gridLines","display","ticks","yAxes","Dashboard","fluid","TransactionsGraph","EmailNotifications","col","multiple","iconClass","SingleUser","match","user","setUser","loadUser","params","transactions","columns","field","rows","map","tr","sn","indexOf","transactionId","desc","description","commission","fees","status","createdAt","listings","listing","price","discount","ratingHistory","ratings","rating","listingId","rate","ratingId","userId","ErrorLoading","count","firstName","lastName","email","phoneNumber","dob","wallet","availableBalance","ledgerBalance","length","striped","bordered","small","hover","DispatchOrderLog","orders","setOrders","agentName","agentPhone","agentIdNo","agentIdentification","pickupDateFrom","pickupDateTo","loadOrders","order","row","pickupAgentIdNumber","pickupAgentName","pickupAgentPhone","pickupAgentIdentification","pickupDate","min","max","console","log","RejectedStockLog","stocks","setStocks","products","requisition","diapatch","loadStocks","stock","StockReceiptLog","EditPassword","EmailSettings","SmsSettings","AddNewStaff","roles","setRoles","feedback","setFeedback","success","setSuccess","roleId","password","form","setForm","loadRoles","items","handleSubmit","test","String","toLowerCase","post","cnt","onChange","e","target","getValue","val","AllStaff","staff","setStaff","phone","action","loadUsers","RoleManagement","openModal","setOpenModal","openEdit","setOpenEdit","setRole","roleName","setRoleName","toggleModal","toggleEdit","dateCreated","dateUpdated","updatedAt","handleDeleteRole","confirm","delete","filter","r","handleRoleName","isOpen","inline","backdrop","cascading","disableFocusTrap","createRole","dat","put","find","editRole","amount","datePurchased","dateExpired","ExpiredRentLog","userName","userEmail","MerchantPayoutLog","ReferralLog","referrals","setReferrals","refId","refCode","loadReferrals","ref","refs","WareHousersPaymentLog","payments","setPayments","paymentId","channel","info","customerEmail","expires","loadPayments","payment","customer","WithdrawalLog","trans","setTrans","loadTransactions","tran","AllWarehouser","users","setUsers","accountStatus","AllUsers","BannedUsers","AllListings","setListings","availability","loadListings","now","AvailableListings","AllRequisitions","requisitions","setRequisitions","cost","duration","space","baseCost","ExpiredListings","FourToFour","Routes","isLogged","requiresAuth","Comp","path","management","AllMerchants","pathname","App","constructor","super","handleResize","setState","windowWidth","innerWidth","toggleSideNav","sideNavToggled","assessLocation","locationString","currentPage","componentDidUpdate","prevProps","nextProps","snapshot","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","dynamicLeftPadding","margin","position","width","Login","setEmail","setPassword","loader","setLoader","authenticate","message","payload","response","goToDashboard","validateEmail","src","alt","AuthRoutes","component","PasswordReset","useSelector","RoutesWithNavigation","Boolean","hostname","isLoggedReducer","token","setItem","permissionReducer","superAdmin","teamLead","support","userReducer","allReducers","combineReducers","usersReducer","store","createStore","customHistory","createBrowserHistory","ReactDOM","history","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.bd132f66.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  MDBSideNavLink,\r\n  MDBSideNavCat,\r\n  MDBSideNavNav,\r\n  MDBSideNav,\r\n  MDBIcon\r\n} from \"mdbreact\";\r\nimport Logo from \"../assets/ginjabox.png\";\r\nimport { connect } from \"react-redux\";\r\nimport { getPermission } from \"../Redux/actions/permission\";\r\n\r\n// const permission = useSelector(state => state.permission);\r\n// const dispatch = useDispatch();\r\n\r\nconst mapStateToProps = state => ({\r\n  permit: state.permission\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    permission: () => dispatch(getPermission())\r\n  }\r\n}\r\n\r\nclass SideNavigation extends React.Component {\r\n\r\n  componentWillMount() {\r\n    this.props.permission();\r\n  }\r\n\r\n  rSNL(to, text, icon) {\r\n    return (\r\n      <MDBSideNavLink to={to} onClick={this.props.onLinkClick}>\r\n        <MDBIcon icon={`${icon} mr-2`} />\r\n        {text}\r\n      </MDBSideNavLink>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { onLinkClick, permit } = this.props;\r\n    return (\r\n      <div className=\"white-skin\">\r\n        <MDBSideNav\r\n          logo={Logo}\r\n          bg=\"https://mdbootstrap.com/img/Photos/Others/sidenav4.jpg\"\r\n          mask=\"strong\"\r\n          fixed\r\n          breakWidth={this.props.breakWidth}\r\n          triggerOpening={this.props.triggerOpening}\r\n          style={{ transition: \"padding-left .3s\" }}\r\n        >\r\n          <MDBSideNavNav>\r\n            <MDBSideNavLink exact topLevel to=\"/\" onClick={onLinkClick}>\r\n              <MDBIcon icon=\"tachometer-alt mr-2\" />\r\n              Dashboard\r\n            </MDBSideNavLink>\r\n\r\n            <MDBSideNavCat name=\"Listing Management\" id=\"user-cat\" icon=\"list\">\r\n              {this.rSNL(\"/listings\", \"All Lisitngs\", \"list\")}\r\n              {this.rSNL(\"/listings/available-listings\", \"Available Listings\", \"list\")}\r\n              {this.rSNL(\"/listings/requisitions\", \"All Requisitions\", \"list\")}\r\n              {this.rSNL(\"/listings/expired-listings\", \"Expired Listings\", \"list\")}\r\n            </MDBSideNavCat>\r\n\r\n            <MDBSideNavCat name=\"User Management\" id=\"user-cat\" icon=\"users\">\r\n              {this.rSNL(\"/users/all-users\", \"All Users\", \"users\")}\r\n              {this.rSNL(\"/users/merchants\", \"All Merchants\", \"users\")}\r\n              {this.rSNL(\"/users/warehousers\", \"All Warehousers\", \"users\")}\r\n              {this.rSNL(\"/users/banned-users\", \"Banned Users\", \"ban\")}\r\n            </MDBSideNavCat>\r\n\r\n            <MDBSideNavCat\r\n              name=\"Transaction Log\"\r\n              id=\"transaction-cat\"\r\n              icon=\"filter\"\r\n            >\r\n              {this.rSNL(\r\n                \"/logs/merchant-payout-log\",\r\n                \"Merchant Payout Log\",\r\n                \"history\"\r\n              )}\r\n              {this.rSNL(\r\n                \"/logs/warehousers-payment-log\",\r\n                \"Warehouse Payment Log\",\r\n                \"history\"\r\n              )}\r\n              {this.rSNL(\"/logs/withdrawal-log\", \"Withdrawal Log\", \"history\")}\r\n              {this.rSNL(\r\n                \"/logs/expired-rent-log\",\r\n                \"Expired Rent Log\",\r\n                \"history\"\r\n              )}\r\n              {this.rSNL(\"/logs/referral-log\", \"Referral Log\", \"history\")}\r\n            </MDBSideNavCat>\r\n\r\n            <MDBSideNavCat name=\"Inventory Log\" id=\"inventory-cat\" icon=\"sort\">\r\n              {this.rSNL(\r\n                \"/logs/dispatch-order-log\",\r\n                \"Dispatch Order Log\",\r\n                \"history\"\r\n              )}\r\n              {this.rSNL(\r\n                \"/logs/rejected-stock-log\",\r\n                \"Rejected Stock Log\",\r\n                \"history\"\r\n              )}\r\n              {this.rSNL(\r\n                \"/logs/stock-receipt-log\",\r\n                \"Stock Receipt Log\",\r\n                \"history\"\r\n              )}\r\n            </MDBSideNavCat>\r\n\r\n            <MDBSideNavCat name=\"Staff Management\" id=\"staff-cat\" icon=\"tasks\">\r\n              {this.rSNL(\"/staff/add-staff\", \"Add Staff\", \"plus\")}\r\n              {this.rSNL(\"/staff/all-staff\", \"All Staff\", \"users\")}\r\n              {this.rSNL(\"/staff/role-management\", \"Role Management\", \"tasks\")}\r\n            </MDBSideNavCat>\r\n\r\n            <MDBSideNavLink exact topLevel to=\"/email-notification\">\r\n              <MDBIcon icon=\"envelope mr-2\" />\r\n              Email Notification\r\n            </MDBSideNavLink>\r\n\r\n            <MDBSideNavCat name=\"Settings\" id=\"settings-cat\" icon=\"cog\">\r\n              {this.rSNL(\r\n                \"/settings/email-settings\",\r\n                \"Email Setting\",\r\n                \"envelope\"\r\n              )}\r\n              {this.rSNL(\"/settings/sms-settings\", \"SMS Setting\", \"sms\")}\r\n              {this.rSNL(\"/settings/edit-password\", \"Edit Password\", \"lock\")}\r\n            </MDBSideNavCat>\r\n\r\n          </MDBSideNavNav>\r\n        </MDBSideNav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideNavigation);\r\n","export const getPermission = () => {\r\n  return {\r\n    type: \"GET_PERMISSION\"\r\n  }\r\n}","import React from \"react\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport {\r\n  MDBNavbar,\r\n  MDBNavbarBrand,\r\n  MDBNavbarNav,\r\n  MDBIcon,\r\n  MDBDropdown,\r\n  MDBDropdownToggle,\r\n  MDBDropdownMenu,\r\n  MDBDropdownItem,\r\n  MDBBadge\r\n} from \"mdbreact\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { LogOut } from \"../Redux/actions/authentication\";\r\nimport { Redirect } from \"react-router\"\r\n\r\nconst TopNavigation = (props) => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const navStyle = {\r\n    paddingLeft: props.toggle ? \"16px\" : \"240px\",\r\n    transition: \"padding-left .3s\"\r\n  };\r\n\r\n  const handleToggleClickA = () => {\r\n    props.onSideNavToggleClick();\r\n  }\r\n\r\n  const logout = () => {\r\n    localStorage.clear();\r\n    dispatch(LogOut());\r\n    window.location.reload();\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <MDBNavbar\r\n        className=\"flexible-MDBNavbar\"\r\n        light\r\n        expand=\"md\"\r\n        scrolling\r\n        fixed=\"top\"\r\n        style={{ zIndex: 3 }}\r\n      >\r\n        <div\r\n          onClick={() => handleToggleClickA()}\r\n          key=\"sideNavToggleA\"\r\n          style={{\r\n            lineHeight: \"32px\",\r\n            marginleft: \"1em\",\r\n            verticalAlign: \"middle\",\r\n            cursor: \"pointer\"\r\n          }}\r\n        >\r\n          <MDBIcon icon=\"bars\" color=\"white\" size=\"lg\" />\r\n        </div>\r\n\r\n        <MDBNavbarBrand href=\"/\" style={navStyle}>\r\n          <strong>{props.routeName}</strong>\r\n        </MDBNavbarBrand>\r\n\r\n        <MDBNavbarNav expand=\"sm\" right style={{ flexDirection: \"row\" }}>\r\n          <MDBDropdown>\r\n            <MDBDropdownToggle nav caret>\r\n              <MDBBadge color=\"red\" className=\"mr-2\">\r\n                3\r\n                </MDBBadge>\r\n              <MDBIcon icon=\"bell\" />{\" \"}\r\n              <span className=\"d-none d-md-inline\">Notifications</span>\r\n            </MDBDropdownToggle>\r\n            <MDBDropdownMenu right style={{ minWidth: \"400px\" }}>\r\n              <MDBDropdownItem href=\"#!\">\r\n                <MDBIcon icon=\"money-bill-alt\" className=\"mr-2\" />\r\n                  New order received\r\n                  <span className=\"float-right\">\r\n                  <MDBIcon icon=\"clock\" /> 13 min\r\n                  </span>\r\n              </MDBDropdownItem>\r\n              <MDBDropdownItem href=\"#!\">\r\n                <MDBIcon icon=\"money-bill-alt\" className=\"mr-2\" />\r\n                  New order received\r\n                  <span className=\"float-right\">\r\n                  <MDBIcon icon=\"clock\" /> 33 min\r\n                  </span>\r\n              </MDBDropdownItem>\r\n              <MDBDropdownItem href=\"#!\">\r\n                <MDBIcon icon=\"chart-line\" className=\"mr-2\" />\r\n                  Your campaign is about to end\r\n                  <span className=\"float-right\">\r\n                  <MDBIcon icon=\"clock\" /> 53 min\r\n                  </span>\r\n              </MDBDropdownItem>\r\n            </MDBDropdownMenu>\r\n          </MDBDropdown>\r\n          <MDBDropdown>\r\n            <MDBDropdownToggle nav caret>\r\n              <MDBIcon icon=\"user\" />{\" \"}\r\n              <span className=\"d-none d-md-inline\">Profile</span>\r\n            </MDBDropdownToggle>\r\n            <MDBDropdownMenu right style={{ minWidth: \"200px\" }}>\r\n              <MDBDropdownItem onClick={() => logout()}>Log Out</MDBDropdownItem>\r\n              <MDBDropdownItem>My Account</MDBDropdownItem>\r\n            </MDBDropdownMenu>\r\n          </MDBDropdown>\r\n        </MDBNavbarNav>\r\n      </MDBNavbar>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default TopNavigation;\r\n","export const LogIn = (payload) => {\r\n  return {\r\n    type: \"LOGIN\",\r\n    payload: payload\r\n  }\r\n}\r\n\r\nexport const LogOut = () => {\r\n  return {\r\n    type: \"LOGOUT\"\r\n  }\r\n}","import React from 'react';\r\nimport { MDBFooter } from 'mdbreact';\r\n\r\nconst Copyrights = props => {\r\n  const date = new Date().getFullYear();\r\n  return (\r\n    <MDBFooter\r\n      className={props.className}\r\n      style={{ ...props.style, zIndex: 2 }}\r\n    >\r\n      <p className='footer-copyright mb-0 py-3 text-center'>\r\n        &copy; {date} Copyright:{' '}\r\n        <a href='/'> GinjaBox.com </a>\r\n      </p>\r\n    </MDBFooter>\r\n  );\r\n};\r\nexport default Copyrights;\r\n","export const apiUrl = \"http://167.71.135.109:9800/api/admin\";\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport {\r\n  MDBCol,\r\n  MDBCardBody,\r\n  MDBCard,\r\n  MDBIcon,\r\n  MDBProgress\r\n} from \"mdbreact\"\r\n\r\nconst Users = () => {\r\n  const [totalUsers, setTotalUsers] = useState(0);\r\n\r\n  const loadTotalUsers = async () => {\r\n    axios.get(`${apiUrl}/statistics/total-users`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        setTotalUsers(res.data.data);\r\n      })\r\n      .catch(err => {\r\n        return 0;\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadTotalUsers();\r\n  }, []);\r\n\r\n  return (\r\n    <MDBCol xl=\"3\" md=\"6\" className=\"mb-4\">\r\n      <MDBCard cascade className=\"cascading-admin-card\">\r\n        <div className=\"admin-up\">\r\n          <MDBIcon icon=\"users\" className=\"teal accent-4\" />\r\n          <div className=\"data\">\r\n            <p>Total Users</p>\r\n            <h5 className=\"font-weight-bold dark-grey-text\">\r\n              {totalUsers || <Skeleton />}\r\n            </h5>\r\n          </div>\r\n        </div>\r\n        <MDBCardBody cascade>\r\n          <MDBProgress\r\n            value={100}\r\n            barClassName=\"teal accent-3\"\r\n            height=\"6px\"\r\n            wrapperStyle={{ opacity: \".7\" }}\r\n            className=\"mb-3\"\r\n          />\r\n          <p className=\"card-text\">Total Number of registered users</p>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBCol>\r\n  );\r\n}\r\n\r\nexport default Users;","import React from 'react';\r\nimport {\r\n  MDBCol,\r\n  MDBCardBody,\r\n  MDBCard,\r\n  MDBRow,\r\n  MDBCardHeader\r\n} from \"mdbreact\"\r\n\r\nconst AppStatistics = () => {\r\n  return (\r\n    <MDBCol lg=\"6\" md=\"12\">\r\n      <MDBCard className=\"mb-4\">\r\n        <MDBCardHeader className=\"teal accent-4 text-white\">\r\n          App Statistics\r\n              </MDBCardHeader>\r\n        <MDBCardBody>\r\n          <MDBRow className=\"mb-1\">\r\n            <MDBCol lg=\"4\" md=\"4\" sm=\"6\">\r\n              <small className=\"grey-text\">Total Signups</small>\r\n              <h5>365k</h5>\r\n            </MDBCol>\r\n            <MDBCol lg=\"2\" md=\"2\" sm=\"6\">\r\n              <small className=\"grey-text\">Today</small>\r\n              <h5>67</h5>\r\n            </MDBCol>\r\n            <MDBCol lg=\"3\" md=\"3\" sm=\"6\">\r\n              <small className=\"grey-text\">Last week</small>\r\n              <h5>103</h5>\r\n            </MDBCol>\r\n            <MDBCol lg=\"3\" md=\"3\" sm=\"6\">\r\n              <small className=\"grey-text\">Last Month</small>\r\n              <h5>745</h5>\r\n            </MDBCol>\r\n          </MDBRow>\r\n\r\n          <MDBRow className=\"mb-1\">\r\n            <MDBCol lg=\"4\" md=\"4\" sm=\"6\">\r\n              <small className=\"grey-text\">Available Warehouse</small>\r\n              <h5>95</h5>\r\n            </MDBCol>\r\n            <MDBCol lg=\"2\" md=\"2\" sm=\"6\">\r\n              <small className=\"grey-text\">Today</small>\r\n              <h5>95</h5>\r\n            </MDBCol>\r\n            <MDBCol lg=\"3\" md=\"3\" sm=\"6\">\r\n              <small className=\"grey-text\">Last week</small>\r\n              <h5>127</h5>\r\n            </MDBCol>\r\n            <MDBCol lg=\"3\" md=\"3\" sm=\"6\">\r\n              <small className=\"grey-text\">Last Month</small>\r\n              <h5>374</h5>\r\n            </MDBCol>\r\n          </MDBRow>\r\n\r\n          <MDBRow className=\"mb-1\">\r\n            <MDBCol lg=\"4\" md=\"4\" sm=\"6\">\r\n              <small className=\"grey-text\">\r\n                Total Commissions(&#8358;)\r\n                    </small>\r\n              <h5>365m</h5>\r\n            </MDBCol>\r\n            <MDBCol lg=\"2\" md=\"2\" sm=\"6\">\r\n              <small className=\"grey-text\">Today</small>\r\n              <h5>273k</h5>\r\n            </MDBCol>\r\n            <MDBCol lg=\"3\" md=\"3\" sm=\"6\">\r\n              <small className=\"grey-text\">Last week</small>\r\n              <h5>1.5m</h5>\r\n            </MDBCol>\r\n            <MDBCol lg=\"3\" md=\"3\" sm=\"6\">\r\n              <small className=\"grey-text\">Last Month</small>\r\n              <h5>22m</h5>\r\n            </MDBCol>\r\n          </MDBRow>\r\n\r\n          <MDBRow className=\"mb-1\">\r\n            <MDBCol lg=\"4\" md=\"4\" sm=\"6\">\r\n              <small className=\"grey-text\">\r\n                Total Transactions(&#8358;)\r\n                    </small>\r\n              <h5>365m</h5>\r\n            </MDBCol>\r\n            <MDBCol lg=\"2\" md=\"2\" sm=\"6\">\r\n              <small className=\"grey-text\">Today</small>\r\n              <h5>273k</h5>\r\n            </MDBCol>\r\n            <MDBCol lg=\"3\" md=\"3\" sm=\"6\">\r\n              <small className=\"grey-text\">Last week</small>\r\n              <h5>1.5m</h5>\r\n            </MDBCol>\r\n            <MDBCol lg=\"3\" md=\"3\" sm=\"6\">\r\n              <small className=\"grey-text\">Last Month</small>\r\n              <h5>22m</h5>\r\n            </MDBCol>\r\n          </MDBRow>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBCol>\r\n  );\r\n}\r\n\r\nexport default AppStatistics;","import React from 'react';\r\nimport {\r\n  MDBCol,\r\n  MDBCardBody,\r\n  MDBCard,\r\n  MDBSelectOptions,\r\n  MDBSelectOption,\r\n  MDBSelectInput,\r\n  MDBSelect,\r\n  MDBView,\r\n  MDBCardHeader\r\n} from \"mdbreact\"\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\n\r\nconst availableWarehouseStatistics = {\r\n  labels: ['Mar 24th', 'Mar 25th', 'Mar 26th', 'Mar 27th', 'Mar 28th', 'Mar 29th', 'Mar 30th'],\r\n  datasets: [\r\n    {\r\n      label: 'Available Warehouses',\r\n      data: [655, 302, 735, 127, 22, 13, 46],\r\n      backgroundColor: '#0900',\r\n      borderColor: ['rgba(200,200,200)'],\r\n      borderWidth: 2,\r\n      pointBorderColor: '#fff',\r\n      pointBorderWidth: 2,\r\n    }\r\n  ]\r\n};\r\n\r\nconst AvailableWarehouseGraph = ({ LineOptions }) => {\r\n  return (\r\n    <MDBCol md='12' lg='6'>\r\n      <MDBCard narrow className='mb-4'>\r\n        <MDBCardHeader className=\"teal accent-4 text-white\">\r\n          Available Warehouse Statistics\r\n              </MDBCardHeader>\r\n        <MDBCardBody>\r\n          <MDBCol md='12'>\r\n            <p className='lead'>\r\n              <span className='badge teal accent-4 p-2'>Data range</span>\r\n            </p>\r\n            <MDBSelect>\r\n              <MDBSelectInput selected='Choose time period' />\r\n              <MDBSelectOptions>\r\n                <MDBSelectOption disabled>Choose time period</MDBSelectOption>\r\n                <MDBSelectOption value='1'>Today</MDBSelectOption>\r\n                <MDBSelectOption value='2'>Yesterday</MDBSelectOption>\r\n                <MDBSelectOption value='3'>Last 7 days</MDBSelectOption>\r\n                <MDBSelectOption value='3'>Last 30 days</MDBSelectOption>\r\n              </MDBSelectOptions>\r\n            </MDBSelect>\r\n          </MDBCol>\r\n          <MDBView className='gradient-card-header teal accent-4 px-3'>\r\n            <Line\r\n              data={availableWarehouseStatistics}\r\n              options={LineOptions}\r\n              height={150}\r\n            />\r\n          </MDBView>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBCol>\r\n  );\r\n}\r\n\r\nexport default AvailableWarehouseGraph;","import React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport {\r\n  MDBCol,\r\n  MDBCardBody,\r\n  MDBCard,\r\n  MDBIcon,\r\n  MDBProgress\r\n} from \"mdbreact\"\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst AvailableWarehouse = () => {\r\n  const [totalCommissions, setTotalCommissions] = useState(0);\r\n\r\n  const loadTotalCommissions = async () => {\r\n    axios.get(`${apiUrl}/statistics/total-available-warehouses`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        setTotalCommissions(res.data.data);\r\n      })\r\n      .catch(err => {\r\n        return 0;\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadTotalCommissions();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <MDBCol xl=\"3\" md=\"6\" className=\"mb-4\">\r\n      <MDBCard cascade className=\"cascading-admin-card\">\r\n        <div className=\"admin-up\">\r\n          <MDBIcon icon=\"home\" className=\"teal accent-4\" />\r\n          <div className=\"data\">\r\n            <p>Available Warehouse</p>\r\n            <h5 className=\"font-weight-bold dark-grey-text\">\r\n              {totalCommissions || <Skeleton />}\r\n            </h5>\r\n          </div>\r\n        </div>\r\n        <MDBCardBody cascade>\r\n          <MDBProgress\r\n            value={100}\r\n            barClassName=\"teal accent-3\"\r\n            height=\"6px\"\r\n            wrapperStyle={{ opacity: \".7\" }}\r\n            className=\"mb-3\"\r\n          />\r\n          <p className=\"card-text\">Total available Warehouses</p>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBCol>\r\n  );\r\n}\r\n\r\nexport default AvailableWarehouse;","import React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport {\r\n  MDBCol,\r\n  MDBCardBody,\r\n  MDBCard,\r\n  MDBIcon,\r\n  MDBProgress\r\n} from \"mdbreact\"\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst Commissions = () => {\r\n  const [totalCommissions, setTotalCommissions] = useState(0);\r\n\r\n\r\n  const loadTotalCommissions = async () => {\r\n    axios.get(`${apiUrl}/statistics/total-commissions`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        setTotalCommissions(res.data.data);\r\n      })\r\n      .catch(err => {\r\n        return 0;\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadTotalCommissions();\r\n  }, []);\r\n\r\n  return (\r\n    <MDBCol xl=\"3\" md=\"6\" className=\"mb-4\">\r\n      <MDBCard cascade className=\"cascading-admin-card\">\r\n        <div className=\"admin-up\">\r\n          <MDBIcon icon=\"dollar-sign\" className=\"teal accent-4\" />\r\n          <div className=\"data\">\r\n            <p>Total Commissions</p>\r\n            <h5 className=\"font-weight-bold dark-grey-text\">\r\n              &#8358; {totalCommissions || <Skeleton />}\r\n              {/* {loading && <div className=\"spinner-border spinner-border-sm teal-text\" role=\"status\" ><span className=\"sr-only\">Loading...</span></div >} */}\r\n            </h5>\r\n          </div>\r\n        </div>\r\n        <MDBCardBody cascade>\r\n          <MDBProgress\r\n            value={100}\r\n            barClassName=\"teal accent-3\"\r\n            height=\"6px\"\r\n            wrapperStyle={{ opacity: \".7\" }}\r\n            className=\"mb-3\"\r\n          />\r\n          <p className=\"card-text\">Total commissions earned</p>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBCol>\r\n  );\r\n}\r\n\r\nexport default Commissions;","import React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport {\r\n  MDBCol,\r\n  MDBCardBody,\r\n  MDBCard,\r\n  MDBIcon,\r\n  MDBProgress\r\n} from \"mdbreact\"\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst Transactions = () => {\r\n  const [totalTransactions, setTotalTransactions] = useState(0);\r\n\r\n  const loadTotalTransactions = async () => {\r\n    axios.get(`${apiUrl}/statistics/total-transactions`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        setTotalTransactions(res.data.data);\r\n      })\r\n      .catch(err => {\r\n        return 0;\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadTotalTransactions();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <MDBCol xl=\"3\" md=\"6\" className=\"mb-4\">\r\n      <MDBCard cascade className=\"cascading-admin-card\">\r\n        <div className=\"admin-up\">\r\n          <MDBIcon icon=\"exchange-alt\" className=\"teal accent-4\" />\r\n          <div className=\"data\">\r\n            <p>Total Transactions</p>\r\n            <h5 className=\"font-weight-bold dark-grey-text\">\r\n              {totalTransactions || <Skeleton />}\r\n              {/* {loading && <div className=\"spinner-border spinner-border-sm teal-text\" role=\"status\" ><span className=\"sr-only\">Loading...</span></div >} */}\r\n            </h5>\r\n          </div>\r\n        </div>\r\n        <MDBCardBody cascade>\r\n          <MDBProgress\r\n            value={100}\r\n            barClassName=\"teal accent-3\"\r\n            height=\"6px\"\r\n            wrapperStyle={{ opacity: \".7\" }}\r\n            className=\"mb-3\"\r\n          />\r\n          <p className=\"card-text\">Total number of transactions</p>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBCol>\r\n  );\r\n}\r\n\r\nexport default Transactions;","import React from 'react';\r\nimport {\r\n  MDBCol,\r\n  MDBCardBody,\r\n  MDBCard,\r\n  MDBSelect,\r\n  MDBSelectInput,\r\n  MDBSelectOption,\r\n  MDBSelectOptions,\r\n  MDBCardHeader,\r\n  MDBView\r\n} from \"mdbreact\"\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nconst transactionStatistics = {\r\n  labels: ['Mar 24th', 'Mar 25th', 'Mar 26th', 'Mar 27th', 'Mar 28th', 'Mar 29th', 'Mar 30th',],\r\n  datasets: [\r\n    {\r\n      label: 'Transactions',\r\n      data: [33, 43, 302, 235, 127, 22, 13],\r\n      backgroundColor: '#0900',\r\n      borderColor: ['rgba(0,230,0)'],\r\n      borderWidth: 2,\r\n      pointBorderColor: '#fff',\r\n      pointBorderWidth: 2,\r\n    }\r\n  ]\r\n};\r\n\r\nconst TransactionGraph = ({ LineOptions }) => {\r\n  return (\r\n    <MDBCol md='12' lg='6'>\r\n      <MDBCard narrow className='mb-4'>\r\n        <MDBCardHeader className=\"teal accent-4 text-white\">\r\n          Transactions Statistics\r\n              </MDBCardHeader>\r\n        <MDBCardBody>\r\n          <MDBCol md='12'>\r\n            <p className='lead'>\r\n              <span className='badge teal accent-4 p-2'>Data range</span>\r\n            </p>\r\n            <MDBSelect>\r\n              <MDBSelectInput selected='Choose time period' />\r\n              <MDBSelectOptions>\r\n                <MDBSelectOption disabled>Choose time period</MDBSelectOption>\r\n                <MDBSelectOption value='1'>Today</MDBSelectOption>\r\n                <MDBSelectOption value='2'>Yesterday</MDBSelectOption>\r\n                <MDBSelectOption value='3'>Last 7 days</MDBSelectOption>\r\n                <MDBSelectOption value='3'>Last 30 days</MDBSelectOption>\r\n              </MDBSelectOptions>\r\n            </MDBSelect>\r\n          </MDBCol>\r\n          <MDBView className='gradient-card-header teal accent-4 px-3'>\r\n            <Line\r\n              data={transactionStatistics}\r\n              options={LineOptions}\r\n              height={150}\r\n            />\r\n          </MDBView>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBCol>\r\n  );\r\n}\r\n\r\nexport default TransactionGraph;","import React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport {\r\n  MDBCol,\r\n  MDBCardBody,\r\n  MDBCard,\r\n  MDBCardHeader\r\n} from \"mdbreact\"\r\nimport { Doughnut } from \"react-chartjs-2\";\r\n\r\nconst UsersByOs = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [android, setAndroid] = useState(0);\r\n  const [ios, setIos] = useState(0);\r\n\r\n  const loadUsersOs = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/statistics/users-os`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        setAndroid(res.data.data.android);\r\n        setIos(res.data.data.ios);\r\n        setLoading(false);\r\n      })\r\n      .catch(err => {\r\n        return 0;\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadUsersOs();\r\n  }, []);\r\n\r\n\r\n  const mobileChartData = {\r\n    labels: [\"Android\", \"IOS\"],\r\n    datasets: [\r\n      {\r\n        data: [android, ios],\r\n        backgroundColor: [\"#F7464A\", \"#46BFBD\"],\r\n        hoverBackgroundColor: [\"#FF5A5E\", \"#5AD3D1\"]\r\n      }\r\n    ]\r\n  };\r\n\r\n  const mobileChartOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: true,\r\n    legend: {\r\n      labels: {\r\n        fontColor: \"black\"\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MDBCol lg=\"6\" md=\"12\">\r\n      <MDBCard className=\"mb-4\">\r\n        <MDBCardHeader className=\"teal accent-4 text-white\">\r\n          Users By OS\r\n              </MDBCardHeader>\r\n        <MDBCardBody>\r\n          <Doughnut\r\n            data={mobileChartData}\r\n            options={mobileChartOptions}\r\n            height={135}\r\n          />\r\n          {loading && <div className=\"spinner-border spinner-border-lg teal-text\" role=\"status\" ><span className=\"sr-only\">Loading...</span></div>}\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBCol>\r\n  );\r\n}\r\n\r\nexport default UsersByOs;","import React from 'react';\r\nimport {\r\n  MDBCol,\r\n  MDBCardBody,\r\n  MDBCard,\r\n  MDBSelectOptions,\r\n  MDBSelectOption,\r\n  MDBSelectInput,\r\n  MDBSelect,\r\n  MDBView,\r\n  MDBCardHeader,\r\n  MDBRow,\r\n  MDBTooltip,\r\n  MDBIcon,\r\n  MDBBtn\r\n} from \"mdbreact\"\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\n\r\nconst userStatistics = {\r\n  labels: ['Mar 24th', 'Mar 25th', 'Mar 26th', 'Mar 27th', 'Mar 28th', 'Mar 29th', 'Mar 30th'],\r\n  datasets: [\r\n    {\r\n      label: 'Active Users',\r\n      backgroundColor: 'rgba(0,255,0,0)',\r\n      borderColor: 'rgba(0,230,0)',\r\n      pointBackgroundColor: 'transparent',\r\n      borderWidth: 2,\r\n      pointBorderColor: '#fff',\r\n      pointBorderWidth: 2,\r\n      data: [540, 231, 513, 224, 113, 196, 110]\r\n    },\r\n    {\r\n      label: 'Inactive Users',\r\n      backgroundColor: 'rgba(200,200,200,0)',\r\n      borderColor: 'rgba(200,200,200)',\r\n      pointBackgroundColor: 'transparent',\r\n      borderWidth: 2,\r\n      pointBorderColor: '#fff',\r\n      pointBorderWidth: 2,\r\n      data: [300, 454, 223, 104, 193, 332, 150]\r\n    }\r\n  ]\r\n};\r\n\r\nconst UsersGraph = ({ LineOptions }) => {\r\n  return (\r\n    <MDBCol lg='12' md=\"12\">\r\n      <MDBCard cascade narrow className=\"mb-4\">\r\n        <MDBCardHeader className=\"teal accent-4 text-white\">\r\n          Users Statistics\r\n              </MDBCardHeader>\r\n        <MDBRow>\r\n          <MDBCol className='mr-0'>\r\n            <MDBCardBody cascade className='pb-0'>\r\n              <MDBCardBody className='row pt-3'>\r\n                <MDBCol md='12'>\r\n                  <p className='lead'>\r\n                    <span className='badge teal accent-4 p-2'>Data range</span>\r\n                  </p>\r\n                  <MDBSelect>\r\n                    <MDBSelectInput selected='Choose time period' />\r\n                    <MDBSelectOptions>\r\n                      <MDBSelectOption disabled>Choose time period</MDBSelectOption>\r\n                      <MDBSelectOption value='1'>Today</MDBSelectOption>\r\n                      <MDBSelectOption value='2'>Yesterday</MDBSelectOption>\r\n                      <MDBSelectOption value='3'>Last 7 days</MDBSelectOption>\r\n                      <MDBSelectOption value='3'>Last 30 days</MDBSelectOption>\r\n                    </MDBSelectOptions>\r\n                  </MDBSelect>\r\n                </MDBCol>\r\n\r\n                <MDBCol md='12' className='text-center'>\r\n                  <div style={{ marginBottom: '0.5rem' }}>\r\n                    Today: <strong>14</strong>\r\n                    <MDBTooltip>\r\n                      <MDBBtn className='teal accent-4 btn-sm p-2 d-inline'>\r\n                        <MDBIcon icon='question' />\r\n                      </MDBBtn>\r\n                      <div>Registered users today</div>\r\n                    </MDBTooltip>\r\n                  </div>\r\n                  <br />\r\n\r\n                  <div>\r\n                    Daily Average: <strong>11</strong>\r\n                    <MDBTooltip>\r\n                      <MDBBtn className='teal accent-4 btn-sm p-2 d-inline'>\r\n                        <MDBIcon icon='question' />\r\n                      </MDBBtn>\r\n                      <div>Daily User Registeration Average</div>\r\n                    </MDBTooltip>\r\n                  </div>\r\n                  <br />\r\n                </MDBCol>\r\n              </MDBCardBody>\r\n            </MDBCardBody>\r\n          </MDBCol>\r\n\r\n          <MDBCol xl='7' lg='12' className='my-4 mr-4'>\r\n            <MDBView className='gradient-card-header teal accent-4 px-3'>\r\n              <Line\r\n                data={userStatistics}\r\n                options={LineOptions}\r\n                height={150}\r\n              />\r\n            </MDBView>\r\n          </MDBCol>\r\n        </MDBRow>\r\n      </MDBCard>\r\n    </MDBCol>\r\n  );\r\n}\r\n\r\nexport default UsersGraph;","import React from \"react\";\r\nimport Users from \"./Statistics/Users\";\r\nimport AppStatistics from \"./Statistics/AppStatistics\";\r\nimport AvailableWarehouseGraph from \"./Statistics/AvailableWarehouseGraph\";\r\nimport AvailableWarehouse from \"./Statistics/AvailableWarehouse\";\r\nimport Commissions from \"./Statistics/Commissions\";\r\nimport Transactions from \"./Statistics/Transactions\";\r\nimport TransactionsGraph from \"./Statistics/TransactionsGraph\";\r\nimport UsersByOs from \"./Statistics/UsersByOs\";\r\nimport UsersGraph from \"./Statistics/UsersGraph\";\r\n\r\nimport {\r\n  MDBContainer,\r\n  MDBRow\r\n} from \"mdbreact\";\r\n\r\nconst LineOptions = {\r\n  responsive: true,\r\n  maintainAspectRatio: true,\r\n  legend: {\r\n    labels: {\r\n      fontColor: 'white',\r\n      fontSize: 18\r\n    }\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false,\r\n          color: 'rgba(255, 255, 255, 0.2)'\r\n        },\r\n        ticks: {\r\n          fontColor: '#fff',\r\n          fontSize: 10\r\n        }\r\n      }\r\n    ],\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: true,\r\n          color: 'rgba(255, 255, 255, 0.2)'\r\n        },\r\n        ticks: {\r\n          fontColor: '#fff'\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nconst Dashboard = (props) => {\r\n  return (\r\n    <MDBContainer fluid className=\"mb-5\">\r\n      <section>\r\n        <MDBRow>\r\n          <Users />\r\n          <Transactions />\r\n          <Commissions />\r\n          <AvailableWarehouse />\r\n        </MDBRow>\r\n      </section >\r\n\r\n      <section>\r\n        <MDBRow>\r\n          <AppStatistics />\r\n          <UsersByOs />\r\n          <TransactionsGraph LineOptions={LineOptions} />\r\n          <AvailableWarehouseGraph LineOptions={LineOptions} />\r\n          <UsersGraph LineOptions={LineOptions} />\r\n        </MDBRow>\r\n      </section>\r\n    </MDBContainer >\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nimport {\r\n  MDBContainer,\r\n  MDBCol,\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBIcon,\r\n  MDBInput,\r\n  MDBSelect,\r\n  MDBSelectOptions,\r\n  MDBSelectInput,\r\n  MDBSelectOption,\r\n  MDBBtn,\r\n  MDBRow\r\n} from \"mdbreact\";\r\n\r\nconst EmailNotifications = () => {\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCol className='mb-4'>\r\n        <MDBCard col=\"3\">\r\n          <MDBCardBody>\r\n            <div className='form-header teal accent-4'>\r\n              <h3>\r\n                <MDBIcon icon='envelope' /> Send An Email:\r\n              </h3>\r\n            </div>\r\n\r\n            <MDBInput label='Subject' />\r\n            <MDBRow>\r\n              <MDBCol>\r\n                <MDBSelect label=\"To\" >\r\n                  <MDBSelectInput />\r\n                  <MDBSelectOptions>\r\n                    <MDBSelectOption disabled>Select Receipient</MDBSelectOption>\r\n                    <MDBSelectOption value=\"1\">All Users</MDBSelectOption>\r\n                    <MDBSelectOption value=\"2\">Banned Users</MDBSelectOption>\r\n                    <MDBSelectOption value=\"3\">Select Users</MDBSelectOption>\r\n                  </MDBSelectOptions>\r\n                </MDBSelect>\r\n              </MDBCol>\r\n              <MDBCol>\r\n                <MDBSelect multiple label=\"If Select Users\" >\r\n                  <MDBSelectInput />\r\n                  <MDBSelectOptions>\r\n                    <MDBSelectOption disabled>Select  Users</MDBSelectOption>\r\n                    <MDBSelectOption value=\"1\">email1@email.com</MDBSelectOption>\r\n                    <MDBSelectOption value=\"2\">email2@email.com</MDBSelectOption>\r\n                    <MDBSelectOption value=\"3\">email3@email.com</MDBSelectOption>\r\n                  </MDBSelectOptions>\r\n                </MDBSelect>\r\n              </MDBCol>\r\n            </MDBRow>\r\n            <MDBInput\r\n              type='textarea'\r\n              icon='pencil-alt'\r\n              iconClass='grey-text'\r\n              label='Message'\r\n            />\r\n            <div className='text-center'>\r\n              <MDBBtn color='green' className=\"teal \">SEND</MDBBtn>\r\n            </div>\r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </MDBCol>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default EmailNotifications;\r\n","/*\r\n* A Page that displays the users information including; Listings Log,\r\n* transactions Log, and other necessary information. \r\n*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../config\";\r\nimport axios from \"axios\";\r\nimport {\r\n  MDBContainer,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBCard,\r\n  MDBCardTitle,\r\n  MDBCardBody,\r\n  MDBBadge,\r\n  MDBDataTable,\r\n  MDBCardHeader\r\n} from 'mdbreact';\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\n\r\nconst SingleUser = ({ match }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const loadUser = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/users/${match.params.id}`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        setUser(res.data.data)\r\n        setLoading(false);\r\n      })\r\n      .catch(err => {\r\n        setLoading(null);\r\n        return [];\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadUser()\r\n  }, [])\r\n\r\n\r\n\r\n  const transactions = {\r\n    columns: [\r\n      {\r\n        label: \"S/N\",\r\n        field: \"sn\",\r\n      },\r\n      {\r\n        label: \"Transaction ID\",\r\n        field: \"transactionId\",\r\n      },\r\n      {\r\n        label: \"Type\",\r\n        field: \"type\",\r\n      },\r\n      {\r\n        label: \"Description\",\r\n        field: \"desc\",\r\n      },\r\n      {\r\n        label: \"Commission\",\r\n        field: \"commission\",\r\n      },\r\n      {\r\n        label: \"Status\",\r\n        field: \"status\",\r\n      },\r\n      {\r\n        label: \"Date\",\r\n        field: \"date\",\r\n      }\r\n    ],\r\n    rows: user ? user.transactions.map(tr => {\r\n      let sn = user.transactions.indexOf(tr);\r\n      const row = {\r\n        sn: sn + 1,\r\n        transactionId: tr.id,\r\n        type: tr.type,\r\n        desc: tr.description,\r\n        commission: tr.fees,\r\n        status: tr.status === 2 ? <MDBBadge color=\"success\">Success</MDBBadge> : <MDBBadge className=\"danger-color\">Failed</MDBBadge>,\r\n        date: tr.createdAt\r\n      }\r\n      return row;\r\n    }) : []\r\n  };\r\n\r\n\r\n\r\n  const listings = {\r\n    columns: [\r\n      {\r\n        label: \"S/N\",\r\n        field: \"sn\",\r\n      },\r\n      {\r\n        label: \"Listing ID\",\r\n        field: \"id\"\r\n      },\r\n      {\r\n        label: \"Name\",\r\n        field: \"name\",\r\n      },\r\n      {\r\n        label: \"Description\",\r\n        field: \"description\",\r\n      },\r\n      {\r\n        label: <span>Price &#8358;</span>,\r\n        field: \"price\",\r\n      },\r\n      {\r\n        label: \"Discount\",\r\n        field: \"discount\",\r\n      }\r\n    ],\r\n    rows: user ? user.listings.map(listing => {\r\n      let sn = user.listings.indexOf(listing);\r\n      const row = {\r\n        sn: sn + 1,\r\n        id: listing.id,\r\n        name: listing.name,\r\n        description: listing.description,\r\n        price: listing.price,\r\n        discount: listing.discount\r\n      }\r\n      return row;\r\n    }) : []\r\n  };\r\n\r\n  const ratingHistory = {\r\n    columns: [\r\n      {\r\n        label: \"S/N\",\r\n        field: \"sn\",\r\n      },\r\n      {\r\n        label: \"Rating ID\",\r\n        field: \"ratingId\"\r\n      },\r\n      {\r\n        label: \"Rate\",\r\n        field: \"rate\",\r\n      },\r\n      {\r\n        label: \"User\",\r\n        field: \"user\",\r\n      },\r\n      {\r\n        label: \"Listing\",\r\n        field: \"listingId\",\r\n      }\r\n    ],\r\n    rows: user ? user.ratings.map(rating => {\r\n      let sn = user.ratings.indexOf(rating);\r\n      const row = {\r\n        sn: sn + 1,\r\n        listingId: rating.listingId,\r\n        rate: rating.rate,\r\n        ratingId: rating.ratingId,\r\n        user: rating.userId\r\n      }\r\n      return row;\r\n    }) : []\r\n  };\r\n\r\n  const ErrorLoading = () => {\r\n    return (\r\n      <MDBContainer className=\"d-flex justify-content-center\">\r\n        <div className=\"mt-5\">\r\n          <h1>NETWORK ERROR!</h1><br />\r\n          <p>Please Check your Internet and reload the page.</p>\r\n        </div>\r\n      </MDBContainer>\r\n    );\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div id='profile-ex' className='mb-5'>\r\n        <MDBContainer fluid>\r\n          <MDBRow>\r\n            <MDBCol lg='4' md='12'>\r\n              <MDBCard className='profile-card text-center mb-4'>\r\n                <MDBCardHeader className=\"teal accent-4 text-white\">\r\n                  <Skeleton />\r\n                </MDBCardHeader>\r\n                <MDBCardBody>\r\n                  <Skeleton count={4} />\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n              <MDBCard className='mb-4'>\r\n                <MDBCardHeader className=\"teal accent-4 text-white\">\r\n                  <Skeleton />\r\n                </MDBCardHeader>\r\n                <MDBCardBody>\r\n                  <Skeleton count={4} />\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n            </MDBCol>\r\n            <MDBCol lg='8' md='12' className='text-center'>\r\n              <MDBCard className=\"mb-4\">\r\n                <MDBCardHeader className=\"teal accent-4 text-white\">\r\n                  <Skeleton />\r\n                </MDBCardHeader>\r\n                <MDBCardBody>\r\n                  <Skeleton count={8} />\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n              <MDBCard className=\"mb-4\">\r\n                <MDBCardHeader className=\"teal accent-4 text-white\">\r\n                  <Skeleton />\r\n                </MDBCardHeader>\r\n                <MDBCardBody>\r\n                  <Skeleton count={8} />\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n              <MDBCard className=\"mb-4\">\r\n                <MDBCardHeader className=\"teal accent-4 text-white\">\r\n                  <Skeleton />\r\n                </MDBCardHeader>\r\n                <MDBCardBody>\r\n                  <Skeleton count={8} />\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n            </MDBCol>\r\n          </MDBRow>\r\n        </MDBContainer>\r\n      </div>\r\n    );\r\n  } else if (loading === null) {\r\n    return <ErrorLoading />\r\n  } else {\r\n    return (\r\n      <div id='profile-ex' className='mb-5'>\r\n        <MDBContainer fluid>\r\n          <MDBRow>\r\n            <MDBCol lg='4' md='12'>\r\n              <MDBCard className='profile-card text-center mb-4'>\r\n                <MDBCardBody>\r\n                  <MDBCardTitle>\r\n                    <strong>{user.firstName} {user.lastName}</strong>\r\n                  </MDBCardTitle>\r\n                  <span>\r\n                    <span className=\"teal-text\">{user.email}</span>\r\n                    {' | '}\r\n                    <span className=\"teal-text\">{user.phoneNumber}</span>\r\n                  </span>\r\n                  <ul className='list-unstyled pt-4 text-left'>\r\n\r\n                    <hr />\r\n                    <li>\r\n                      <p>\r\n                        Date of Birth{' '}\r\n                        <span className='float-right'>\r\n                          {user.dob}\r\n                        </span>\r\n                      </p>\r\n                    </li>\r\n                    <hr />\r\n                    <li>\r\n                      <p>\r\n                        Available Balance (&#8358;){' '}\r\n                        <span className='float-right'>\r\n                          {user.wallet.availableBalance}\r\n                        </span>\r\n                      </p>\r\n                    </li>\r\n                    <hr />\r\n                    <li>\r\n                      <p>\r\n                        Ledger Balance (&#8358;){' '}\r\n                        <span className='float-right'>\r\n                          {user.wallet.ledgerBalance}\r\n                        </span>\r\n                      </p>\r\n                    </li>\r\n                    <hr />\r\n                  </ul>\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n\r\n\r\n              <MDBCard className='mb-4'>\r\n                <MDBCardBody>\r\n                  <h5 className='text-center mb-4'>\r\n                    <strong>{user.firstName}'s Statistics </strong>\r\n                  </h5>\r\n                  <ul className='list-unstyled pt-4'>\r\n                    <li>\r\n                      <p>\r\n                        Total Listings{' '}\r\n                        <MDBBadge className='teal accent-4 float-right'>\r\n                          {user.listings.length}\r\n                        </MDBBadge>\r\n                      </p>\r\n                    </li>\r\n                    <hr />\r\n                    <li>\r\n                      <p>\r\n                        Total Transactions{' '}\r\n                        <MDBBadge className='teal accent-4 float-right'>\r\n                          {user.transactions.length}\r\n                        </MDBBadge>\r\n                      </p>\r\n                    </li>\r\n                  </ul>\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n            </MDBCol>\r\n            <MDBCol lg='8' md='12' className='text-center'>\r\n              <MDBCard className=\"mb-4\">\r\n                <MDBCardHeader className=\"teal accent-4 text-white\">\r\n                  {user.firstName}'s Transactions Log\r\n                </MDBCardHeader>\r\n                <MDBCardBody>\r\n                  <MDBDataTable striped responsive bordered small hover data={transactions} />\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n\r\n              <MDBCard className=\"mb-4\">\r\n                <MDBCardHeader className=\"teal accent-4 text-white\">\r\n                  {user.firstName}'s Listings Log\r\n                </MDBCardHeader>\r\n                <MDBCardBody>\r\n                  <MDBDataTable striped responsive bordered small hover data={listings} />\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n\r\n              <MDBCard className=\"mb-4\">\r\n                <MDBCardHeader className=\"teal accent-4 text-white\">\r\n                  {user.firstName}'s Rating History\r\n                </MDBCardHeader>\r\n                <MDBCardBody>\r\n                  <MDBDataTable striped responsive bordered small hover data={ratingHistory} />\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n\r\n            </MDBCol>\r\n          </MDBRow>\r\n        </MDBContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SingleUser;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBContainer,\r\n  MDBDataTable,\r\n  MDBView,\r\n  MDBBadge\r\n} from \"mdbreact\";\r\n\r\nconst DispatchOrderLog = () => {\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [orders, setOrders] = useState([]);\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"S/N\",\r\n        field: \"sn\",\r\n      },\r\n      {\r\n        label: \"Order ID\",\r\n        field: \"id\",\r\n      },\r\n      {\r\n        label: \"Agent ID Number\",\r\n        field: \"agentIdNo\",\r\n      },\r\n      {\r\n        label: \"Agent Name\",\r\n        field: \"agentName\",\r\n      },\r\n      {\r\n        label: \"Agent Phone\",\r\n        field: \"agentPhone\",\r\n      },\r\n      {\r\n        label: \"Agent Identification\",\r\n        field: \"agentIdentification\",\r\n      },\r\n      {\r\n        label: \"Pickup Date From\",\r\n        field: \"pickupDateFrom\",\r\n      },\r\n      {\r\n        label: \"Pickup Date To\",\r\n        field: \"pickupDateTo\",\r\n      },\r\n      {\r\n        label: \"Order Status\",\r\n        field: \"status\",\r\n      },\r\n    ],\r\n    rows: !loading ? orders : [{\r\n      sn: <Skeleton />,\r\n      id: <Skeleton />,\r\n      agentName: <Skeleton />,\r\n      agentPhone: <Skeleton />,\r\n      agentIdNo: <Skeleton />,\r\n      agentIdentification: <Skeleton />,\r\n      pickupDateFrom: <Skeleton />,\r\n      pickupDateTo: <Skeleton />,\r\n      status: <Skeleton />\r\n    }]\r\n  };\r\n\r\n  const loadOrders = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/dispatch-orders`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        let sn = orders.length;\r\n        const rows = res.data.data.map(order => {\r\n          const row = {\r\n            sn: sn + 1,\r\n            id: order.id,\r\n            agentIdNo: order.pickupAgentIdNumber,\r\n            agentName: order.pickupAgentName,\r\n            agentPhone: order.pickupAgentPhone,\r\n            agentIdentification: order.pickupAgentIdentification,\r\n            pickupDateFrom: order.pickupDate.min,\r\n            pickupDateTo: order.pickupDate.max,\r\n            status: order.status === 1 ? <MDBBadge color=\"primary\">Sent</MDBBadge> : order.status === 2 ? <MDBBadge className=\"warning-color\">Released</MDBBadge> : order.status === 3 ? <MDBBadge className=\"success-color\">Dispatched</MDBBadge> : <MDBBadge className=\"danger-color\">Rejected</MDBBadge>,\r\n          };\r\n          sn++;\r\n          return row;\r\n        })\r\n        setLoading(false);\r\n        setOrders(rows);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        return [];\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadOrders();\r\n  }, []);\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCard>\r\n        <MDBCard narrow className=\"z-depth-0\">\r\n          <MDBView\r\n            cascade\r\n            className=\"teal accent-4 narrower py-2 my-3 d-flex justify-content-between align-items-center\"\r\n          >\r\n            <div className=\"text-left\"></div>\r\n            <span className=\"white-text text-bold mx-3\">\r\n              Dispatch Order Log\r\n            </span>\r\n            <div className=\"text-right\"></div>\r\n          </MDBView>\r\n        </MDBCard>\r\n        <MDBCardBody>\r\n          <MDBDataTable striped responsive bordered small hover data={data} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default DispatchOrderLog;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBContainer,\r\n  MDBDataTable,\r\n  MDBView,\r\n  MDBBadge\r\n} from \"mdbreact\";\r\nconst RejectedStockLog = () => {\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [stocks, setStocks] = useState([]);\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"S/N\",\r\n        field: \"sn\",\r\n      },\r\n      {\r\n        label: \"Stock ID\",\r\n        field: \"id\",\r\n      },\r\n      {\r\n        label: \"Stock Type\",\r\n        field: \"type\",\r\n      },\r\n      {\r\n        label: \"Products\",\r\n        field: \"products\",\r\n      },\r\n      {\r\n        label: \"Requisitioin\",\r\n        field: \"requisition\",\r\n      },\r\n      {\r\n        label: \"Stock Dispatch\",\r\n        field: \"dispatch\",\r\n      },\r\n      {\r\n        label: \"Status\",\r\n        field: \"status\",\r\n      }\r\n    ],\r\n    rows: !loading ? stocks : [{\r\n      sn: <Skeleton />,\r\n      id: <Skeleton />,\r\n      type: <Skeleton />,\r\n      products: <Skeleton />,\r\n      requisition: <Skeleton />,\r\n      diapatch: <Skeleton />,\r\n      status: <Skeleton />\r\n    }]\r\n  };\r\n\r\n\r\n  const loadStocks = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/stocks`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        let sn = stocks.length;\r\n        const rows = res.data.data.map(stock => {\r\n          if(stock.status === 4) {\r\n          const row = {\r\n            sn: sn + 1,\r\n            id: stock.id,\r\n            type: stock.type,\r\n            products: stock.products.length,\r\n            dispatch: stock.dispatch.id,\r\n            requisition: stock.requisition.id,\r\n            status: <MDBBadge className=\"danger-color\">Rejected</MDBBadge>,\r\n          };\r\n          sn++;\r\n          return row;\r\n        }\r\n        return null;\r\n        })\r\n        setLoading(false);\r\n        setStocks(rows);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        return [];\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadStocks();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCard>\r\n        <MDBCard narrow className=\"z-depth-0\">\r\n          <MDBView\r\n            cascade\r\n            className=\"teal accent-4 narrower py-2 my-3 d-flex justify-content-between align-items-center\"\r\n          >\r\n            <div className=\"text-left\"></div>\r\n            <span className=\"white-text text-bold mx-3\">\r\n              Rejected Stock Log\r\n            </span>\r\n            <div className=\"text-right\"></div>\r\n          </MDBView>\r\n        </MDBCard>\r\n        <MDBCardBody>\r\n          <MDBDataTable striped responsive bordered small hover data={data} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default RejectedStockLog;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBContainer,\r\n  MDBDataTable,\r\n  MDBView,\r\n  MDBBadge\r\n} from \"mdbreact\";\r\nconst StockReceiptLog = () => {\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [stocks, setStocks] = useState([]);\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"S/N\",\r\n        field: \"sn\",\r\n      },\r\n      {\r\n        label: \"Stock ID\",\r\n        field: \"id\",\r\n      },\r\n      {\r\n        label: \"Stock Type\",\r\n        field: \"type\",\r\n      },\r\n      {\r\n        label: \"Products\",\r\n        field: \"products\",\r\n      },\r\n      {\r\n        label: \"Requisitioin\",\r\n        field: \"requisition\",\r\n      },\r\n      {\r\n        label: \"Stock Dispatch\",\r\n        field: \"dispatch\",\r\n      },\r\n      {\r\n        label: \"Status\",\r\n        field: \"status\",\r\n      }\r\n    ],\r\n    rows: !loading ? stocks : [{\r\n      sn: <Skeleton />,\r\n      id: <Skeleton />,\r\n      type: <Skeleton />,\r\n      products: <Skeleton />,\r\n      requisition: <Skeleton />,\r\n      diapatch: <Skeleton />,\r\n      status: <Skeleton />\r\n    }]\r\n  };\r\n\r\n\r\n  const loadStocks = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/stocks`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        let sn = stocks.length;\r\n        const rows = res.data.data.map(stock => {\r\n          if(stock.status === 3) {\r\n          const row = {\r\n            sn: sn + 1,\r\n            id: stock.id,\r\n            type: stock.type,\r\n            products: stock.products.length,\r\n            dispatch: stock.dispatch.id,\r\n            requisition: stock.requisition.id,\r\n            status: <MDBBadge className=\"success-color\">Received</MDBBadge>,\r\n          };\r\n          sn++;\r\n          return row;\r\n        }\r\n        return null;\r\n        })\r\n        setLoading(false);\r\n        setStocks(rows);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        return [];\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadStocks();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCard>\r\n        <MDBCard narrow className=\"z-depth-0\">\r\n          <MDBView\r\n            cascade\r\n            className=\"teal accent-4 narrower py-2 my-3 d-flex justify-content-between align-items-center\"\r\n          >\r\n            <div className=\"text-left\"></div>\r\n            <span className=\"white-text text-bold mx-3\">\r\n              Stock Receipt Log\r\n            </span>\r\n            <div className=\"text-right\"></div>\r\n          </MDBView>\r\n        </MDBCard>\r\n        <MDBCardBody>\r\n          <MDBDataTable striped responsive bordered small hover data={data} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default StockReceiptLog;\r\n","import React from \"react\";\r\n\r\nconst EditPassword = () => {\r\n  return (\r\n    <div>\r\n      <p>EditPassword</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditPassword;\r\n","import React from \"react\";\r\n\r\nconst EmailSettings = () => {\r\n  return (\r\n    <div>\r\n      <p>Email Settings</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmailSettings;\r\n","import React from \"react\";\r\n\r\nconst SmsSettings = () => {\r\n  return (\r\n    <div>\r\n      <p>SmsSettings</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SmsSettings;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {\r\n  MDBContainer,\r\n  MDBCol,\r\n  MDBCard,\r\n  MDBInput,\r\n  MDBCardBody,\r\n  MDBBtn,\r\n  MDBSelectInput,\r\n  MDBSelect,\r\n  MDBSelectOption,\r\n  MDBSelectOptions\r\n} from 'mdbreact';\r\n\r\nconst AddNewStaff = () => {\r\n  const [roles, setRoles] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [feedback, setFeedback] = useState(null);\r\n  const [success, setSuccess] = useState(null);\r\n  const [form, setForm] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    phoneNumber: '',\r\n    roleId: '',\r\n    role: '',\r\n    password: ''\r\n  });\r\n  const loadRoles = async () => {\r\n    axios.get(`${apiUrl}/admin-roles`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        const items = res.data.data.map(role => {\r\n          return role;\r\n        })\r\n        setRoles([...items]);\r\n      })\r\n      .catch(err => {\r\n        return [];\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadRoles();\r\n  }, []);\r\n\r\n  const validateEmail = (email) => {\r\n    const exp = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i;\r\n    return exp.test(String(email).toLowerCase());\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    setLoading(true);\r\n    setFeedback(null);\r\n    if (!form.email || !form.phoneNumber || !form.roleId || !form.role || !form.password || !form.firstName || !form.lastName) {\r\n      setLoading(false);\r\n      return setFeedback(\"All fields are required to create a staff.\");\r\n    }\r\n    if (!validateEmail(form.email)) {\r\n      setLoading(false);\r\n      return setFeedback(\"Invalid Email\");\r\n    };\r\n    axios.post(`${apiUrl}/admin-users`, form, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        setLoading(false);\r\n        setForm({\r\n          firstName: '',\r\n          lastName: '',\r\n          email: '',\r\n          phoneNumber: '',\r\n          roleId: '',\r\n          role: '',\r\n          password: ''\r\n        });\r\n        setSuccess(\"Staff Created Successfully!\");\r\n      })\r\n      .catch(err => {\r\n        setLoading(false);\r\n      })\r\n  }\r\n  let cnt = 2;\r\n\r\n  return (\r\n    <MDBContainer className=\"d-flex justify-content-center\">\r\n      <MDBCol lg='5' className='mb-4'>\r\n        <MDBCard>\r\n          <MDBCardBody>\r\n            <div className='form-header teal accent-4'>\r\n              <h3> Add New Staff </h3>\r\n            </div>\r\n            <div className=\"mx-2 alert-danger\">{feedback && feedback}</div>\r\n            <div className=\"mx-2 alert-success\">{success && success}</div>\r\n            <MDBInput label='First Name' value={form.firstName} onChange={(e) => setForm({ ...form, firstName: e.target.value })} />\r\n            <MDBInput label='Last Name' value={form.lastName} onChange={(e) => setForm({ ...form, lastName: e.target.value })} />\r\n            <MDBInput label='Email' value={form.email} type=\"email\" onChange={(e) => setForm({ ...form, email: e.target.value })} />\r\n            <MDBInput label='Phone' value={form.phoneNumber} type=\"number\" onChange={(e) => setForm({ ...form, phoneNumber: e.target.value })} />\r\n            <MDBInput label='Default Password' value={form.password} onChange={(e) => setForm({ ...form, password: e.target.value })} />\r\n            <MDBSelect label=\"Select Role ID\" value={form.roleId} getValue={(val) => setForm({ ...form, roleId: val[0] })}>\r\n              <MDBSelectInput />\r\n              <MDBSelectOptions>\r\n                <MDBSelectOption disabled>Select Role ID</MDBSelectOption>\r\n\r\n                {roles.map(role => {\r\n                  if (roles[0] === role) return null;\r\n                  return <MDBSelectOption key={role.id} value={cnt}>{`${cnt++} - ${role.name}`}</MDBSelectOption>\r\n                })}\r\n              </MDBSelectOptions>\r\n            </MDBSelect>\r\n            <MDBSelect label=\"Select Role\" value={form.role} getValue={(val) => setForm({ ...form, role: val[0] })}>\r\n              <MDBSelectInput />\r\n              <MDBSelectOptions>\r\n                <MDBSelectOption disabled>Select Role</MDBSelectOption>\r\n                {roles.map(role => {\r\n                  if (roles[0] === role) return null;\r\n                  return <MDBSelectOption key={role.id} value={role.id}>{role.name}</MDBSelectOption>\r\n                })}\r\n              </MDBSelectOptions>\r\n            </MDBSelect>\r\n            <div className='text-center'>\r\n              <MDBBtn className='teal accent-4' onClick={() => handleSubmit()}>\r\n                {loading && (\r\n                  <div className=\"spinner-border spinner-border-sm text-white\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                  </div>)}\r\n                  Create\r\n                  </MDBBtn>\r\n            </div>\r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </MDBCol>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default AddNewStaff;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBContainer,\r\n  MDBDataTable,\r\n  MDBView,\r\n  MDBBadge,\r\n  MDBIcon\r\n} from \"mdbreact\";\r\n\r\n\r\nconst AllStaff = () => {\r\n\r\n  const [staff, setStaff] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"S/N\",\r\n        field: \"sn\"\r\n      },\r\n      {\r\n        label: \"Name\",\r\n        field: \"name\"\r\n      },\r\n      {\r\n        label: \"Email\",\r\n        field: \"email\"\r\n      },\r\n      {\r\n        label: \"Phone\",\r\n        field: \"phone\"\r\n      },\r\n      {\r\n        label: \"Role\",\r\n        field: \"role\"\r\n      },\r\n      {\r\n        label: \"Created At\",\r\n        field: \"createdAt\"\r\n      },\r\n      {\r\n        label: \"Action\",\r\n        field: \"action\"\r\n      }\r\n    ],\r\n    rows: !loading ? staff : [{\r\n      sn: <div className=\"spinner-border spinner-border-sm teal-text\" role=\"status\" ><span className=\"sr-only\">Loading...</span></div >,\r\n      name: <div className=\"spinner-border spinner-border-sm teal-text\" role=\"status\" ><span className=\"sr-only\">Loading...</span></div >,\r\n      email: <div className=\"spinner-border spinner-border-sm teal-text\" role=\"status\" ><span className=\"sr-only\">Loading...</span></div >,\r\n      phone: <div className=\"spinner-border spinner-border-sm teal-text\" role=\"status\" ><span className=\"sr-only\">Loading...</span></div >,\r\n      role: <div className=\"spinner-border spinner-border-sm teal-text\" role=\"status\" ><span className=\"sr-only\">Loading...</span></div >,\r\n      createdAt: <div className=\"spinner-border spinner-border-sm teal-text\" role=\"status\" ><span className=\"sr-only\">Loading...</span></div >,\r\n      action: <div className=\"spinner-border spinner-border-sm teal-text\" role=\"status\" ><span className=\"sr-only\">Loading...</span></div >\r\n    }]\r\n  };\r\n\r\n\r\n  const loadUsers = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/admin-users`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        let sn = staff.length;\r\n        const rows = res.data.data.map(user => {\r\n          const row = {\r\n            sn: sn + 1,\r\n            name: `${user.firstName} ${user.lastName}`,\r\n            email: user.email,\r\n            phone: user.phoneNumber,\r\n            role: user.role.name,\r\n            createdAt: user.createdAt,\r\n            action: user.roleId !== 1 ? (<div>\r\n              <MDBBadge className=\"primary-color mx-1\"><MDBIcon icon=\"edit\" className=\"white-text\" /></MDBBadge>\r\n              <MDBBadge className=\"danger-color\"><MDBIcon icon=\"ban\" className=\"white-text\" /></MDBBadge>\r\n            </div>) : null\r\n          };\r\n          sn++;\r\n          return row;\r\n        })\r\n        setLoading(false);\r\n        setStaff([...rows]);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        return [];\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadUsers();\r\n  }, []);\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCard>\r\n        <MDBCard narrow className=\"z-depth-0\">\r\n          <MDBView\r\n            cascade\r\n            className=\"teal accent-4 narrower py-2 my-3 d-flex justify-content-between align-items-center\"\r\n          >\r\n            <div className=\"text-left\"></div>\r\n            <span className=\"white-text text-bold mx-3\">All Staff</span>\r\n            <div className=\"text-right\"></div>\r\n          </MDBView>\r\n        </MDBCard>\r\n        <MDBCardBody>\r\n          <MDBDataTable striped responsive bordered small hover data={data} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default AllStaff;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBContainer,\r\n  MDBDataTable,\r\n  MDBView,\r\n  MDBBtn,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBInput,\r\n  MDBIcon,\r\n  MDBBadge\r\n} from \"mdbreact\";\r\n\r\nconst RoleManagement = () => {\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [openEdit, setOpenEdit] = useState(false);\r\n  const [roles, setRoles] = useState([]);\r\n  const [role, setRole] = useState(null);\r\n  const [roleName, setRoleName] = useState('');\r\n  const [feedback, setFeedback] = useState(null);\r\n  const [success, setSuccess] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n\r\n  const toggleModal = () => {\r\n    setOpenModal(!openModal);\r\n  }\r\n  const toggleEdit = (role) => {\r\n    setRole(role);\r\n    setRoleName(role.name);\r\n    setOpenEdit(!openEdit);\r\n  }\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"S/N\",\r\n        field: \"sn\"\r\n      },\r\n      {\r\n        label: \"Role Name\",\r\n        field: \"roleName\"\r\n      },\r\n      {\r\n        label: \"Date Created\",\r\n        field: \"dateCreated\"\r\n      },\r\n      {\r\n        label: \"Date Updated\",\r\n        field: \"dateUpdated\"\r\n      },\r\n      {\r\n        label: \"Action\",\r\n        field: \"action\"\r\n      }\r\n    ],\r\n    rows: !loading ? roles : [{\r\n      sn: <div className=\"spinner-border spinner-border-sm teal-text\" role=\"status\" ><span className=\"sr-only\">Loading...</span></div >,\r\n      roleName: <div className=\"spinner-border spinner-border-sm teal-text\" role=\"status\" ><span className=\"sr-only\">Loading...</span></div >,\r\n      dateCreated: <div className=\"spinner-border spinner-border-sm teal-text\" role=\"status\" ><span className=\"sr-only\">Loading...</span></div >,\r\n      dateUpdated: <div className=\"spinner-border spinner-border-sm teal-text\" role=\"status\" ><span className=\"sr-only\">Loading...</span></div >,\r\n      action: <div className=\"spinner-border spinner-border-sm teal-text\" role=\"status\" ><span className=\"sr-only\">Loading...</span></div >\r\n    }, ...roles]\r\n  };\r\n\r\n\r\n  const loadRoles = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/admin-roles`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        let cnt = 1;\r\n        let sn = roles.length;\r\n        const rows = res.data.data.map(role => {\r\n          const row = {\r\n            sn: sn + 1,\r\n            roleName: role.name,\r\n            dateCreated: role.createdAt,\r\n            dateUpdated: role.updatedAt,\r\n            action: (<div>\r\n              {(cnt !== 1) && (<>\r\n                <MDBBadge className=\"primary-color mx-1\" onClick={() => toggleEdit(role)}><MDBIcon icon=\"edit\" className=\"white-text\" /></MDBBadge>\r\n                <MDBBadge className=\"danger-color\" onClick={() => handleDeleteRole(role)}><MDBIcon icon=\"trash-alt\" className=\"white-text\" /></MDBBadge>\r\n              </>)}\r\n            </div>)\r\n          };\r\n          sn++\r\n          cnt++;\r\n          return row;\r\n        })\r\n        setLoading(false);\r\n        setRoles([...rows]);\r\n      })\r\n      .catch(err => {\r\n        return [];\r\n      })\r\n  }\r\n\r\n  const handleDeleteRole = (role) => {\r\n    if(window.confirm(`Are you sure you want to delete the ${role.name} role? \\n NB: This cannot be undone!`)) {\r\n    axios.delete(`${apiUrl}/admin-roles/${role.id}`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n    .then(res => {\r\n      if (res.data.success) {\r\n        setRoles(roles.filter(r => r.id !== res.data.data.id));\r\n        return setSuccess(`${role.name} deleted successfully!`);\r\n      }\r\n      return setFeedback(\"Unable to delete role!\");\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n    })\r\n    }\r\n  }\r\n\r\n  const createRole = () => {\r\n    setLoading(true);\r\n    if (!roleName) {\r\n      setLoading(false);\r\n      return setFeedback(\"Role name cannot be empty!\");\r\n    }\r\n    const name = { name: roleName };\r\n    axios.post(`${apiUrl}/admin-roles`, name, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        const role = res.data.data\r\n        const row = {\r\n          sn: roles.length + 1,\r\n          roleName: role.name,\r\n          dateCreated: role.createdAt,\r\n          dateUpdated: role.updatedAt,\r\n          action: (<div>\r\n            <MDBBadge className=\"primary-color mx-1\"><MDBIcon icon=\"edit\" className=\"white-text\" /></MDBBadge>\r\n            <MDBBadge className=\"danger-color\" onClick={() => handleDeleteRole(role)}><MDBIcon icon=\"trash-alt\" className=\"white-text\" /></MDBBadge>\r\n          </div>)\r\n        };\r\n        setRoles([...roles, row]);\r\n        setLoading(false);\r\n        toggleModal();\r\n      })\r\n      .catch(err => {\r\n        setLoading(false);\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  const editRole = () => {\r\n    setLoading(true);\r\n    if (!roleName) {\r\n      setLoading(false);\r\n      return setFeedback(\"Role name cannot be empty!\");\r\n    }\r\n    const dat = { name: roleName, id: role.id };\r\n    axios.put(`${apiUrl}/admin-roles`, dat, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n    .then(res => {\r\n      if(res.data.success) {\r\n        setRoles(roles.find(r => {\r\n          if (roles.id === res.data.data.id) {\r\n            r.name = res.data.data.name;\r\n          }\r\n        }))\r\n      }\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadRoles();\r\n  }, []);\r\n\r\n  const handleRoleName = (e) => {\r\n    setRoleName(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <MDBBtn className=\"teal accent-4\" onClick={() => {\r\n        toggleModal();\r\n      }\r\n      }>Create New Role</MDBBtn>\r\n      <MDBCard>\r\n        <MDBCard narrow className=\"z-depth-0\">\r\n          <MDBView\r\n            cascade\r\n            className=\"teal accent-4 narrower py-2 my-3 d-flex justify-content-between align-items-center\"\r\n          >\r\n            <div className=\"text-left\"></div>\r\n            <span className=\"white-text text-bold mx-3\">Role Management</span>\r\n            <div className=\"text-right\"></div>\r\n          </MDBView>\r\n        </MDBCard>\r\n        {success && <div className=\"mx-5 alert-success\">{success}</div>}\r\n        <MDBCardBody>\r\n          <MDBDataTable striped responsive bordered small hover data={data} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n\r\n\r\n      <MDBModal\r\n        isOpen={openModal}\r\n        toggle={() => this.toggleModal()}\r\n        inline={openModal === false}\r\n        backdrop={openModal === false ? false : true}\r\n        cascading\r\n        disableFocusTrap={openModal === false ? true : false}>\r\n        <MDBModalHeader\r\n          toggle={openModal === false ? () => { } : () => toggleModal()}\r\n          className='teal accent-4 white-text'\r\n        >\r\n          <MDBIcon icon=\"add\" className='mr-2' />{' '}\r\n          Create A New Role\r\n        </MDBModalHeader>\r\n        <div className=\"alert-danger\">{feedback && feedback}</div>\r\n        <MDBModalBody className='mb-0'>\r\n          <MDBInput label='Role  Name' value={roleName} onChange={(val) => handleRoleName(val)} />\r\n          <div className='text-center mb-1-half'>\r\n            <MDBBtn\r\n              className='teal accent-4 mb-2'\r\n              onClick={() => createRole()}\r\n            >{loading && (\r\n              <div className=\"spinner-border spinner-border-sm text-white\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </div>)}\r\n              Create\r\n              <MDBIcon icon=\"plus\" className='ml-1' />\r\n            </MDBBtn>\r\n          </div>\r\n        </MDBModalBody>\r\n      </MDBModal>\r\n\r\n      <MDBModal\r\n        isOpen={openEdit}\r\n        toggle={() => this.toggleEdit(role)}\r\n        inline={openEdit === false}\r\n        backdrop={openEdit === false ? false : true}\r\n        cascading\r\n        disableFocusTrap={openEdit === false ? true : false}>\r\n        <MDBModalHeader\r\n          toggle={openEdit === false ? () => { } : () => toggleEdit(role)}\r\n          className='teal accent-4 white-text'\r\n        >\r\n          <MDBIcon icon=\"add\" className='mr-2' />{' '}\r\n          Edit {role && role.name} Role\r\n        </MDBModalHeader>\r\n        <div className=\"alert-danger\">{feedback && feedback}</div>\r\n        <MDBModalBody className='mb-0'>\r\n          <MDBInput label='Role  Name' value={roleName} onChange={(val) => handleRoleName(val)} />\r\n          <div className='text-center mb-1-half'>\r\n            <MDBBtn\r\n              className='teal accent-4 mb-2'\r\n              onClick={() => editRole()}\r\n            >{loading && (\r\n              <div className=\"spinner-border spinner-border-sm text-white\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </div>)}\r\n              Update\r\n              <MDBIcon icon=\"plus\" className='ml-1' />\r\n            </MDBBtn>\r\n          </div>\r\n        </MDBModalBody>\r\n      </MDBModal>\r\n\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default RoleManagement;\r\n","import React from \"react\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBContainer,\r\n  MDBDataTable,\r\n  MDBView\r\n} from \"mdbreact\";\r\n\r\n\r\nconst data = {\r\n  columns: [\r\n    {\r\n      label: \"S/N\",\r\n      field: \"sn\",\r\n    },\r\n    {\r\n      label: \"Listing ID\",\r\n      field: \"listingId\",\r\n    },\r\n    {\r\n      label: \"Amount\",\r\n      field: \"amount\",\r\n    },\r\n    {\r\n      label: \"Date Purchased\",\r\n      field: \"datePurchased\",\r\n    },\r\n    {\r\n      label: \"Date Expired\",\r\n      field: \"dateExpired\",\r\n    }\r\n  ],\r\n  rows: [\r\n    {\r\n      sn: \"1\",\r\n      listingId: \"876483hu384989G94\",\r\n      amount: \"300,000\",\r\n      datePurchased: \"2020/01/04\",\r\n      dateExpired: \"2020/03/23\"\r\n    },\r\n    {\r\n      sn: \"2\",\r\n      listingId: \"876483hu384989G94\",\r\n      amount: \"300,000\",\r\n      datePurchased: \"2020/01/04\",\r\n      dateExpired: \"2020/03/23\"\r\n    },\r\n    {\r\n      sn: \"3\",\r\n      listingId: \"876483hu384989G94\",\r\n      amount: \"300,000\",\r\n      datePurchased: \"2020/01/04\",\r\n      dateExpired: \"2020/03/23\"\r\n    }\r\n  ]\r\n};\r\n\r\n\r\nconst ExpiredRentLog = () => {\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCard>\r\n        <MDBCard narrow className=\"z-depth-0\">\r\n          <MDBView\r\n            cascade\r\n            className=\"teal accent-4 narrower py-2 my-3 d-flex justify-content-between align-items-center\"\r\n          >\r\n            <div className=\"text-left\"></div>\r\n            <span className=\"white-text text-bold mx-3\">Expired Rent Log</span>\r\n            <div className=\"text-right\"></div>\r\n          </MDBView>\r\n        </MDBCard>\r\n        <MDBCardBody>\r\n          <MDBDataTable striped responsive bordered small hover data={data} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default ExpiredRentLog;\r\n","import React from \"react\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBContainer,\r\n  MDBDataTable,\r\n  MDBView,\r\n  MDBBadge\r\n} from \"mdbreact\";\r\n\r\nconst data = {\r\n  columns: [\r\n    {\r\n      label: \"S/N\",\r\n      field: \"sn\",\r\n    },\r\n    {\r\n      label: \"Transaction ID\",\r\n      field: \"transactionId\",\r\n    },\r\n    {\r\n      label: \"User Name\",\r\n      field: \"userName\",\r\n    },\r\n    {\r\n      label: \"User Email\",\r\n      field: \"userEmail\",\r\n    },\r\n    {\r\n      label: \"Amount\",\r\n      field: \"amount\",\r\n    },\r\n    {\r\n      label: \"Status\",\r\n      field: \"status\",\r\n    },\r\n    {\r\n      label: \"Date\",\r\n      field: \"date\",\r\n    }\r\n  ],\r\n  rows: [\r\n    {\r\n      sn: \"1\",\r\n      transactionId: \"876483hu384989G94\",\r\n      userName: \"John Kester\",\r\n      userEmail: \"email@email.com\",\r\n      amount: \"300,000\",\r\n      status: <MDBBadge color=\"success\">Approved</MDBBadge>,\r\n      date: \"2020/03/25\"\r\n    },\r\n    {\r\n      sn: \"2\",\r\n      transactionId: \"876483hu384989G94\",\r\n      userName: \"John Kester\",\r\n      userEmail: \"email@email.com\",\r\n      amount: \"120,000\",\r\n      status: <MDBBadge color=\"warning\">pending</MDBBadge>,\r\n      date: \"2020/03/25\"\r\n    },\r\n    {\r\n      sn: \"3\",\r\n      transactionId: \"876483hu384989G94\",\r\n      userName: \"John Kester\",\r\n      userEmail: \"email@email.com\",\r\n      amount: \"210,000\",\r\n      status: <MDBBadge color=\"grey\">failed</MDBBadge>,\r\n      date: \"2020/03/25\"\r\n    }\r\n  ]\r\n};\r\n\r\nconst MerchantPayoutLog = () => {\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCard>\r\n        <MDBCard narrow className=\"z-depth-0\">\r\n          <MDBView\r\n            cascade\r\n            className=\"teal accent-4 narrower py-2 my-3 d-flex justify-content-between align-items-center\"\r\n          >\r\n            <div className=\"text-left\"></div>\r\n            <span className=\"white-text text-bold mx-3\">\r\n              Merchant Payout Log\r\n            </span>\r\n            <div className=\"text-right\"></div>\r\n          </MDBView>\r\n        </MDBCard>\r\n        <MDBCardBody>\r\n          <MDBDataTable striped responsive bordered small hover data={data} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default MerchantPayoutLog;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { apiUrl } from \"../../config\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBContainer,\r\n  MDBDataTable,\r\n  MDBView\r\n} from \"mdbreact\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\n\r\nconst ReferralLog = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [referrals, setReferrals] = useState([]);\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"S/N\",\r\n        field: \"sn\",\r\n      },\r\n      {\r\n        label: \"Referral ID\",\r\n        field: \"refId\",\r\n      },\r\n      {\r\n        label: \"Referral Code\",\r\n        field: \"refCode\",\r\n      },\r\n      {\r\n        label: \"User ID\",\r\n        field: \"userId\",\r\n      },\r\n      {\r\n        label: \"Referrals\",\r\n        field: \"referrals\",\r\n      },\r\n      {\r\n        label: \"Date Created\",\r\n        field: \"date\",\r\n      }\r\n    ],\r\n    rows: !loading ? referrals : [{\r\n      sn: <Skeleton />,\r\n      refId: <Skeleton />,\r\n      refCode: <Skeleton />,\r\n      userId: <Skeleton />,\r\n      referrals: <Skeleton />,\r\n      date: <Skeleton />\r\n    }]\r\n  };\r\n\r\n\r\n  const loadReferrals = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/referrals`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        let sn = referrals.length;\r\n        const rows = res.data.data.map(ref => {\r\n          const row = {\r\n            sn: sn + 1,\r\n            refId: ref.id,\r\n            refCode: ref.refCode,\r\n            userId: ref.userId,\r\n            referrals: ref.refs.length,\r\n            date: ref.createdAt\r\n          };\r\n          sn++;\r\n          return row;\r\n        })\r\n        setLoading(false);\r\n        setReferrals([...rows]);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        return [];\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadReferrals();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCard>\r\n        <MDBCard narrow className=\"z-depth-0\">\r\n          <MDBView\r\n            cascade\r\n            className=\"teal accent-4 narrower py-2 my-3 d-flex justify-content-between align-items-center\"\r\n          >\r\n            <div className=\"text-left\"></div>\r\n            <span className=\"white-text text-bold mx-3\">Referral Log</span>\r\n            <div className=\"text-right\"></div>\r\n          </MDBView>\r\n        </MDBCard>\r\n        <MDBCardBody>\r\n          <MDBDataTable striped responsive bordered small hover data={data} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default ReferralLog;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBContainer,\r\n  MDBDataTable,\r\n  MDBView,\r\n  MDBBadge\r\n} from \"mdbreact\";\r\n\r\n\r\nconst WareHousersPaymentLog = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [payments, setPayments] = useState([]);\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"S/N\",\r\n        field: \"sn\",\r\n      },\r\n      {\r\n        label: \"Payment ID\",\r\n        field: \"paymentId\",\r\n      },\r\n      {\r\n        label: \"Amount\",\r\n        field: \"amount\",\r\n      },\r\n      {\r\n        label: \"Channel\",\r\n        field: \"channel\",\r\n      },\r\n      {\r\n        label: \"Info\",\r\n        field: \"info\",\r\n      },\r\n      {\r\n        label: \"Customer Email\",\r\n        field: \"customerEmail\",\r\n      },\r\n      {\r\n        label: \"Expires\",\r\n        field: \"expires\",\r\n      },\r\n      {\r\n        label: \"Status\",\r\n        field: \"status\",\r\n      },\r\n      {\r\n        label: \"Date\",\r\n        field: \"date\",\r\n      }\r\n    ],\r\n    rows: !loading ? payments : [{\r\n      sn: <Skeleton />,\r\n      paymentId: <Skeleton />,\r\n      amount: <Skeleton />,\r\n      channel: <Skeleton />,\r\n      info: <Skeleton />,\r\n      customerEmail: <Skeleton />,\r\n      expires: <Skeleton />,\r\n      status: <Skeleton />,\r\n      date: <Skeleton />\r\n    }]\r\n  };\r\n\r\n  const loadPayments = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/warehousers-payments`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        let sn = payments.length;\r\n        const rows = res.data.data.map(payment => {\r\n          const row = {\r\n            sn: sn + 1,\r\n            paymentId: payment.id,\r\n            amount: payment.amount,\r\n            channel: payment.channel,\r\n            info: payment.info,\r\n            customerEmail: payment.customer.email,\r\n            expires: payment.requisition.expires,\r\n            status: payment.status === 2 ? <MDBBadge color=\"success\">Success</MDBBadge> : <MDBBadge className=\"danger-color\">Failed</MDBBadge>,\r\n            date: payment.createdAt\r\n          };\r\n          sn++;\r\n          return row;\r\n        })\r\n        setLoading(false);\r\n        setPayments(rows);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        return [];\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadPayments();\r\n  }, []);\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCard>\r\n        <MDBCard narrow className=\"z-depth-0\">\r\n          <MDBView\r\n            cascade\r\n            className=\"teal accent-4 narrower py-2 my-3 d-flex justify-content-between align-items-center\"\r\n          >\r\n            <div className=\"text-left\"></div>\r\n            <span className=\"white-text text-bold mx-3\">\r\n              Warehousers' Payment Log\r\n            </span>\r\n            <div className=\"text-right\"></div>\r\n          </MDBView>\r\n        </MDBCard>\r\n        <MDBCardBody>\r\n          <MDBDataTable striped responsive bordered small hover data={data} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default WareHousersPaymentLog;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { apiUrl } from \"../../config\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBContainer,\r\n  MDBDataTable,\r\n  MDBView,\r\n  MDBBadge\r\n} from \"mdbreact\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\n\r\nconst WithdrawalLog = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [trans, setTrans] = useState([]);\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"S/N\",\r\n        field: \"sn\",\r\n      },\r\n      {\r\n        label: \"Transaction ID\",\r\n        field: \"transactionId\",\r\n      },\r\n      {\r\n        label: \"Type\",\r\n        field: \"type\",\r\n      },\r\n      {\r\n        label: \"User Email\",\r\n        field: \"userEmail\",\r\n      },\r\n      {\r\n        label: \"Amount\",\r\n        field: \"amount\",\r\n      },\r\n      {\r\n        label: \"Commission\",\r\n        field: \"commission\",\r\n      },\r\n      {\r\n        label: \"Description\",\r\n        field: \"desc\",\r\n      },\r\n      {\r\n        label: \"Status\",\r\n        field: \"status\",\r\n      },\r\n      {\r\n        label: \"Transaction Date\",\r\n        field: \"date\",\r\n      }\r\n    ],\r\n    rows: !loading ? trans : [{\r\n      sn: <Skeleton />,\r\n      transactionId: <Skeleton />,\r\n      userEmail: <Skeleton />,\r\n      type: <Skeleton />,\r\n      status: <Skeleton />,\r\n      desc: <Skeleton />,\r\n      amount: <Skeleton />,\r\n      commission: <Skeleton />,\r\n      date: <Skeleton />\r\n    }]\r\n  };\r\n\r\n  const loadTransactions = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/transactions`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        let sn = trans.length;\r\n        const rows = res.data.data.map(tran => {\r\n          if (tran.description === \"withdrawal\") {\r\n            const row = {\r\n              sn: sn + 1,\r\n              transactionId: tran.id,\r\n              userEmail: tran.user.email,\r\n              type: tran.type,\r\n              desc: tran.description,\r\n              commission: tran.fees,\r\n              amount: tran.amount,\r\n              status: tran.status === 2 ? <MDBBadge color=\"success\">Success</MDBBadge> : <MDBBadge className=\"danger-color\">Failed</MDBBadge>,\r\n              date: tran.createdAt\r\n            };\r\n            sn++;\r\n            return row;\r\n          }\r\n          return null;\r\n        })\r\n        setLoading(false);\r\n        setTrans([...rows]);\r\n      })\r\n      .catch(err => {\r\n        return [];\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadTransactions();\r\n  }, []);\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCard>\r\n        <MDBCard narrow className=\"z-depth-0\">\r\n          <MDBView\r\n            cascade\r\n            className=\"teal accent-4 narrower py-2 my-3 d-flex justify-content-between align-items-center\"\r\n          >\r\n            <div className=\"text-left\"></div>\r\n            <span className=\"white-text text-bold mx-3\">Withdrawal Log</span>\r\n            <div className=\"text-right\"></div>\r\n          </MDBView>\r\n        </MDBCard>\r\n        <MDBCardBody>\r\n          <MDBDataTable striped responsive bordered small hover data={data} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default WithdrawalLog;\r\n","/* \r\n* List of all users that are also merchants are diplayed here\r\n* When you click to view the transactions. It brings up a list\r\n* having the transactions log by that particular user.\r\n*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBContainer,\r\n  MDBDataTable,\r\n  MDBView,\r\n  MDBBadge,\r\n  MDBIcon\r\n} from \"mdbreact\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst AllWarehouser = () => {\r\n\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"S/N\",\r\n        field: \"sn\",\r\n      },\r\n      {\r\n        label: \"Name\",\r\n        field: \"name\",\r\n      },\r\n      {\r\n        label: \"Phone\",\r\n        field: \"phone\",\r\n      },\r\n      {\r\n        label: \"Email\",\r\n        field: \"email\",\r\n      },\r\n      {\r\n        label: \"Account Status\",\r\n        field: \"accountStatus\"\r\n      },\r\n      {\r\n        label: \"Action\",\r\n        field: \"action\",\r\n      }\r\n    ],\r\n    rows: !loading ? users : [{\r\n      sn: <Skeleton />,\r\n      name: <Skeleton />,\r\n      email: <Skeleton />,\r\n      phone: <Skeleton />,\r\n      accountStatus: <Skeleton />,\r\n      action: <Skeleton />\r\n    }]\r\n  };\r\n\r\n  const loadUsers = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/users`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        let sn = users.length;\r\n        const rows = res.data.data.map(user => {\r\n          if (user.type.name === \"merchant\") {\r\n            const row = {\r\n              sn: sn + 1,\r\n              name: `${user.firstName} ${user.lastName}`,\r\n              email: user.email,\r\n              phone: user.phoneNumber,\r\n              accountStatus: user.status === 1 ? <MDBBadge className=\"success-color\">Active</MDBBadge> : <MDBBadge className=\"danger-color\">Banned</MDBBadge>,\r\n              action: (<div>\r\n                <Link to={`/user/${user.id}`}><MDBBadge className=\"teal\"><MDBIcon icon=\"eye\" className=\"white-text\" /></MDBBadge></Link>\r\n                <MDBBadge className=\"primary-color mx-1\"><MDBIcon icon=\"edit\" className=\"white-text\" /></MDBBadge>\r\n                <MDBBadge className={user.status === 1 ? \"danger-color\" : \"success-color\"}><MDBIcon icon={user.status === 1 ? \"ban\" : \"check\"} className=\"white-text\" /></MDBBadge>\r\n              </div>)\r\n            };\r\n            sn++;\r\n            return row;\r\n          }\r\n          return null;\r\n        })\r\n        setLoading(false);\r\n        setUsers([...rows]);\r\n      })\r\n      .catch(err => {\r\n        return [];\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadUsers();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCard>\r\n        <MDBCard narrow className=\"z-depth-0\">\r\n          <MDBView\r\n            cascade\r\n            className=\"teal accent-4 narrower py-2 my-3 d-flex justify-content-between align-items-center\"\r\n          >\r\n            <div className=\"text-left\"></div>\r\n            <span className=\"white-text text-bold mx-3\">All Merchants</span>\r\n            <div className=\"text-right\"></div>\r\n          </MDBView>\r\n        </MDBCard>\r\n        <MDBCardBody>\r\n          <MDBDataTable striped responsive bordered small hover data={data} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default AllWarehouser;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBContainer,\r\n  MDBDataTable,\r\n  MDBView,\r\n  MDBIcon,\r\n  MDBBadge\r\n} from \"mdbreact\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst AllUsers = () => {\r\n\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"S/N\",\r\n        field: \"sn\",\r\n      },\r\n      {\r\n        label: \"Name\",\r\n        field: \"name\",\r\n      },\r\n      {\r\n        label: \"Email\",\r\n        field: \"email\",\r\n      },\r\n      {\r\n        label: \"Phone\",\r\n        field: \"phone\",\r\n      },\r\n      {\r\n        label: \"Account Type\",\r\n        field: \"type\",\r\n      },\r\n      {\r\n        label: \"Account Status\",\r\n        field: \"accountStatus\",\r\n      },\r\n      {\r\n        label: \"Action\",\r\n        field: \"action\",\r\n      }\r\n    ],\r\n    rows: !loading ? users : [{\r\n      sn: <Skeleton />,\r\n      name: <Skeleton />,\r\n      email: <Skeleton />,\r\n      phone: <Skeleton />,\r\n      type: <Skeleton />,\r\n      accountStatus: <Skeleton />,\r\n      action: <Skeleton />\r\n    }]\r\n  };\r\n\r\n  const loadUsers = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/users`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        let sn = users.length;\r\n        const rows = res.data.data.map(user => {\r\n          const row = {\r\n            sn: sn + 1,\r\n            name: `${user.firstName} ${user.lastName}`,\r\n            email: user.email,\r\n            phone: user.phoneNumber,\r\n            type: user.type.name,\r\n            accountStatus: user.status === 1 ? <MDBBadge className=\"success-color\">Active</MDBBadge> : <MDBBadge className=\"danger-color\">Banned</MDBBadge>,\r\n            action: (<div>\r\n              <Link to={`/user/${user.id}`}><MDBBadge className=\"teal\"><MDBIcon icon=\"eye\" className=\"white-text\" /></MDBBadge></Link>\r\n              <MDBBadge className=\"primary-color mx-1\"><MDBIcon icon=\"edit\" className=\"white-text\" /></MDBBadge>\r\n              <MDBBadge className={user.status === 1 ? \"danger-color\" : \"success-color\"}><MDBIcon icon={user.status === 1 ? \"ban\" : \"check\"} className=\"white-text\" /></MDBBadge>\r\n            </div>)\r\n          };\r\n          sn++;\r\n          return row;\r\n        })\r\n        setLoading(false);\r\n        setUsers([...rows]);\r\n      })\r\n      .catch(err => {\r\n        return [];\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadUsers();\r\n  }, []);\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCard>\r\n        <MDBCard narrow className=\"z-depth-0\">\r\n          <MDBView\r\n            cascade\r\n            className=\"teal accent-4 narrower py-2 my-3 d-flex justify-content-between align-items-center\"\r\n          >\r\n            <div className=\"text-left\"></div>\r\n            <span className=\"white-text text-bold mx-3\">All Users</span>\r\n            <div className=\"text-right\"></div>\r\n          </MDBView>\r\n        </MDBCard>\r\n        <MDBCardBody>\r\n          <MDBDataTable striped responsive bordered small hover data={data} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default AllUsers;\r\n","/* \r\n* List of all users that are also warehousers are diplayed here\r\n* When you click to view the warehouse listings. It brings up a list\r\n* having the listings by that particular user.\r\n*/\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBContainer,\r\n  MDBDataTable,\r\n  MDBView,\r\n  MDBBadge,\r\n  MDBIcon\r\n} from \"mdbreact\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst AllWarehouser = () => {\r\n\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"S/N\",\r\n        field: \"sn\",\r\n      },\r\n      {\r\n        label: \"Name\",\r\n        field: \"name\",\r\n      },\r\n      {\r\n        label: \"Phone\",\r\n        field: \"phone\",\r\n      },\r\n      {\r\n        label: \"Email\",\r\n        field: \"email\",\r\n      },\r\n      {\r\n        label: \"Account Status\",\r\n        field: \"accountStatus\"\r\n      },\r\n      {\r\n        label: \"Action\",\r\n        field: \"action\",\r\n      }\r\n    ],\r\n    rows: !loading ? users : [{\r\n      sn: <Skeleton />,\r\n      name: <Skeleton />,\r\n      email: <Skeleton />,\r\n      phone: <Skeleton />,\r\n      accountStatus: <Skeleton />,\r\n      action: <Skeleton />\r\n    }]\r\n  };\r\n\r\n  const loadUsers = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/users`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        let sn = users.length;\r\n        const rows = res.data.data.map(user => {\r\n          if (user.type.name === \"warehouser\") {\r\n            const row = {\r\n              sn: sn + 1,\r\n              name: `${user.firstName} ${user.lastName}`,\r\n              email: user.email,\r\n              phone: user.phoneNumber,\r\n              accountStatus: user.status === 1 ? <MDBBadge className=\"success-color\">Active</MDBBadge> : <MDBBadge className=\"danger-color\">Banned</MDBBadge>,\r\n              action: (<div>\r\n                <Link to={`/user/${user.id}`}><MDBBadge className=\"teal\"><MDBIcon icon=\"eye\" className=\"white-text\" /></MDBBadge></Link>\r\n                <MDBBadge className=\"primary-color mx-1\"><MDBIcon icon=\"edit\" className=\"white-text\" /></MDBBadge>\r\n                <MDBBadge className={user.status === 1 ? \"danger-color\" : \"success-color\"}><MDBIcon icon={user.status === 1 ? \"ban\" : \"check\"} className=\"white-text\" /></MDBBadge>\r\n              </div>)\r\n            };\r\n            sn++;\r\n            return row;\r\n          }\r\n          return null;\r\n        })\r\n        setLoading(false);\r\n        setUsers([...rows]);\r\n      })\r\n      .catch(err => {\r\n        return [];\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadUsers();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCard>\r\n        <MDBCard narrow className=\"z-depth-0\">\r\n          <MDBView\r\n            cascade\r\n            className=\"teal accent-4 narrower py-2 my-3 d-flex justify-content-between align-items-center\"\r\n          >\r\n            <div className=\"text-left\"></div>\r\n            <span className=\"white-text text-bold mx-3\">All Warehousers</span>\r\n            <div className=\"text-right\"></div>\r\n          </MDBView>\r\n        </MDBCard>\r\n        <MDBCardBody>\r\n          <MDBDataTable striped responsive bordered small hover data={data} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default AllWarehouser;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBContainer,\r\n  MDBDataTable,\r\n  MDBView,\r\n  MDBIcon,\r\n  MDBBadge\r\n} from \"mdbreact\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst BannedUsers = () => {\r\n\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"S/N\",\r\n        field: \"sn\",\r\n      },\r\n      {\r\n        label: \"Name\",\r\n        field: \"name\",\r\n      },\r\n      {\r\n        label: \"Email\",\r\n        field: \"email\",\r\n      },\r\n      {\r\n        label: \"Phone\",\r\n        field: \"phone\",\r\n      },\r\n      {\r\n        label: \"Account Status\",\r\n        field: \"accountStatus\",\r\n      },\r\n      {\r\n        label: \"Action\",\r\n        field: \"action\",\r\n      }\r\n    ],\r\n    rows: !loading ? users : [{\r\n      sn: <Skeleton />,\r\n      name: <Skeleton />,\r\n      email: <Skeleton />,\r\n      phone: <Skeleton />,\r\n      accountStatus: <Skeleton />,\r\n      action: <Skeleton />\r\n    }]\r\n  };\r\n\r\n  const loadUsers = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/users`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        const rows = res.data.data.map(user => {\r\n          let sn = users.length;\r\n          if (user.status !== 1) {\r\n            const row = {\r\n              sn: sn + 1,\r\n              name: `${user.firstName} ${user.lastName}`,\r\n              email: user.email,\r\n              phone: user.phoneNumber,\r\n              type: user.type.name,\r\n              accountStatus: <MDBBadge className=\"danger-color\">Banned</MDBBadge>,\r\n              action: (<div>\r\n                <Link to={`/user/${user.id}`}><MDBBadge className=\"teal\"><MDBIcon icon=\"eye\" className=\"white-text\" /></MDBBadge></Link>\r\n                <MDBBadge className=\"primary-color mx-1\"><MDBIcon icon=\"edit\" className=\"white-text\" /></MDBBadge>\r\n                <MDBBadge className=\"success-color\"><MDBIcon icon=\"check\" className=\"white-text\" /></MDBBadge>\r\n              </div>)\r\n            };\r\n            return row;\r\n          }\r\n          sn++;\r\n          return null;\r\n        })\r\n        setLoading(false);\r\n        setUsers([...rows]);\r\n      })\r\n      .catch(err => {\r\n        return [];\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadUsers();\r\n  }, []);\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCard>\r\n        <MDBCard narrow className=\"z-depth-0\">\r\n          <MDBView\r\n            cascade\r\n            className=\"teal accent-4 narrower py-2 my-3 d-flex justify-content-between align-items-center\"\r\n          >\r\n            <div className=\"text-left\"></div>\r\n            <span className=\"white-text text-bold mx-3\">Banned Users</span>\r\n            <div className=\"text-right\"></div>\r\n          </MDBView>\r\n        </MDBCard>\r\n        <MDBCardBody>\r\n          <MDBDataTable striped responsive bordered small hover data={data} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default BannedUsers;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBContainer,\r\n  MDBDataTable,\r\n  MDBView,\r\n  MDBIcon,\r\n  MDBBadge\r\n} from \"mdbreact\";\r\n\r\nconst AllListings = () => {\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [listings, setListings] = useState([]);\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"S/N\",\r\n        field: \"sn\",\r\n      },\r\n      {\r\n        label: \"Listin Id\",\r\n        field: \"id\",\r\n      },\r\n      {\r\n        label: \"Name\",\r\n        field: \"name\",\r\n      },\r\n      {\r\n        label: \"Description\",\r\n        field: \"description\",\r\n      },\r\n      {\r\n        label: \"Price\",\r\n        field: \"price\",\r\n      },\r\n      {\r\n        label: \"Discount\",\r\n        field: \"discount\",\r\n      },\r\n      {\r\n        label: \"User\",\r\n        field: \"user\",\r\n      },\r\n      {\r\n        label: \"Availability\",\r\n        field: \"availability\",\r\n      },\r\n      {\r\n        label: \"Status\",\r\n        field: \"status\",\r\n      },\r\n      {\r\n        label: \"Action\",\r\n        field: \"action\",\r\n      },\r\n    ],\r\n    rows: !loading ? listings : [{\r\n      sn: <Skeleton />,\r\n      id: <Skeleton />,\r\n      name: <Skeleton />,\r\n      description: <Skeleton />,\r\n      price: <Skeleton />,\r\n      discount: <Skeleton />,\r\n      user: <Skeleton />,\r\n      availability: <Skeleton />,\r\n      action: <Skeleton />,\r\n      status: <Skeleton />\r\n    }]\r\n  };\r\n\r\n  const loadListings = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/listings`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        let sn = listings.length;\r\n        const rows = res.data.data.map(listing => {\r\n          const row = {\r\n            sn: sn + 1,\r\n            id: listing.id,\r\n            name: listing.name,\r\n            description: listing.description,\r\n            price: listing.price,\r\n            discount: listing.discount,\r\n            user: listing.user.id,\r\n            availability: listing.availability.to > Date.now() ? <MDBBadge color=\"success\">Available</MDBBadge> : <MDBBadge color=\"danger\">Expired</MDBBadge>,\r\n            status: listing.status === 2 ? <MDBBadge color=\"success\">Active</MDBBadge> : <MDBBadge className=\"danger-color\">Blocked</MDBBadge>,\r\n            action: listing.availability.to < Date.now() ? (<div>\r\n              <MDBBadge className=\"danger-color\"><MDBIcon icon=\"trash\" className=\"white-text\" /></MDBBadge>\r\n            </div>) : listing.status !== 2 ? (<div>\r\n              <MDBBadge className=\"success-color\"><MDBIcon icon=\"check\" className=\"white-text\" /></MDBBadge>\r\n            </div>) : (<div>\r\n              <MDBBadge className=\"success-color\"><MDBIcon icon=\"check\" className=\"white-text\" /></MDBBadge>\r\n              <MDBBadge className=\"danger-color\"><MDBIcon icon=\"trash\" className=\"white-text\" /></MDBBadge>\r\n            </div>)\r\n          };\r\n          sn++;\r\n          return row;\r\n        })\r\n        setLoading(false);\r\n        setListings(rows);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        return [];\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadListings();\r\n  }, []);\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCard>\r\n        <MDBCard narrow className=\"z-depth-0\">\r\n          <MDBView\r\n            cascade\r\n            className=\"teal accent-4 narrower py-2 my-3 d-flex justify-content-between align-items-center\"\r\n          >\r\n            <div className=\"text-left\"></div>\r\n            <span className=\"white-text text-bold mx-3\">\r\n              All Listings\r\n            </span>\r\n            <div className=\"text-right\"></div>\r\n          </MDBView>\r\n        </MDBCard>\r\n        <MDBCardBody>\r\n          <MDBDataTable striped responsive bordered small hover data={data} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default AllListings;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBContainer,\r\n  MDBDataTable,\r\n  MDBView,\r\n  MDBBadge,\r\n  MDBIcon\r\n} from \"mdbreact\";\r\n\r\nconst AvailableListings = () => {\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [listings, setListings] = useState([]);\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"S/N\",\r\n        field: \"sn\",\r\n      },\r\n      {\r\n        label: \"Listin Id\",\r\n        field: \"id\",\r\n      },\r\n      {\r\n        label: \"Name\",\r\n        field: \"name\",\r\n      },\r\n      {\r\n        label: \"Description\",\r\n        field: \"description\",\r\n      },\r\n      {\r\n        label: \"Price\",\r\n        field: \"price\",\r\n      },\r\n      {\r\n        label: \"Discount\",\r\n        field: \"discount\",\r\n      },\r\n      {\r\n        label: \"User\",\r\n        field: \"user\",\r\n      },\r\n      {\r\n        label: \"Status\",\r\n        field: \"status\",\r\n      },\r\n      {\r\n        label: \"Expiry Date\",\r\n        field: \"date\",\r\n      },\r\n      {\r\n        label: \"Action\",\r\n        field: \"action\",\r\n      },\r\n    ],\r\n    rows: !loading ? listings : [{\r\n      sn: <Skeleton />,\r\n      id: <Skeleton />,\r\n      name: <Skeleton />,\r\n      description: <Skeleton />,\r\n      price: <Skeleton />,\r\n      discount: <Skeleton />,\r\n      user: <Skeleton />,\r\n      action: <Skeleton />,\r\n      status: <Skeleton />,\r\n      date: <Skeleton />\r\n    }]\r\n  };\r\n\r\n  const loadListings = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/listings`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        let sn = listings.length;\r\n        const rows = res.data.data.map(listing => {\r\n          if (listing.availability.to > Date.now()) {\r\n            const row = {\r\n              sn: sn + 1,\r\n              id: listing.id,\r\n              name: listing.name,\r\n              description: listing.description,\r\n              price: listing.price,\r\n              discount: listing.discount,\r\n              user: listing.user.id,\r\n              status: listing.status === 2 ? <MDBBadge color=\"success\">Active</MDBBadge> : <MDBBadge className=\"danger-color\">Blocked</MDBBadge>,\r\n              date: listing.availability.to,\r\n              action: listing.status === 2 ? (<div>\r\n                <MDBBadge className=\"danger-color\"><MDBIcon icon=\"ban\" className=\"white-text\" /></MDBBadge>\r\n              </div>) : (<div>\r\n                <MDBBadge className=\"success-color\"><MDBIcon icon=\"check\" className=\"white-text\" /></MDBBadge>\r\n              </div>)\r\n            };\r\n            sn++;\r\n            return row;\r\n          }\r\n          return null;\r\n        })\r\n        setLoading(false);\r\n        setListings(rows);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        return [];\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadListings();\r\n  }, []);\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCard>\r\n        <MDBCard narrow className=\"z-depth-0\">\r\n          <MDBView\r\n            cascade\r\n            className=\"teal accent-4 narrower py-2 my-3 d-flex justify-content-between align-items-center\"\r\n          >\r\n            <div className=\"text-left\"></div>\r\n            <span className=\"white-text text-bold mx-3\">\r\n              Available Listings\r\n            </span>\r\n            <div className=\"text-right\"></div>\r\n          </MDBView>\r\n        </MDBCard>\r\n        <MDBCardBody>\r\n          <MDBDataTable striped responsive bordered small hover data={data} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default AvailableListings;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBContainer,\r\n  MDBDataTable,\r\n  MDBView,\r\n  MDBBadge\r\n} from \"mdbreact\";\r\n\r\nconst AllRequisitions = () => {\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [requisitions, setRequisitions] = useState([]);\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"S/N\",\r\n        field: \"sn\",\r\n      },\r\n      {\r\n        label: \"Requisition ID\",\r\n        field: \"id\",\r\n      },\r\n      {\r\n        label: \"Listing\",\r\n        field: \"listing\",\r\n      },\r\n      {\r\n        label: \"Products\",\r\n        field: \"products\",\r\n      },\r\n      {\r\n        label: \"Cost\",\r\n        field: \"cost\",\r\n      },\r\n      {\r\n        label: \"Duration\",\r\n        field: \"duration\",\r\n      },\r\n      {\r\n        label: \"Space\",\r\n        field: \"space\",\r\n      },\r\n      {\r\n        label: \"Expires\",\r\n        field: \"expires\",\r\n      },\r\n      {\r\n        label: \"Status\",\r\n        field: \"status\",\r\n      },\r\n    ],\r\n    rows: !loading ? requisitions : [{\r\n      sn: <Skeleton />,\r\n      id: <Skeleton />,\r\n      listing: <Skeleton />,\r\n      products: <Skeleton />,\r\n      cost: <Skeleton />,\r\n      duration: <Skeleton />,\r\n      space: <Skeleton />,\r\n      expires: <Skeleton />,\r\n      status: <Skeleton />\r\n    }]\r\n  };\r\n  \r\n  const loadOrders = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/requisitions`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        let sn = requisitions.length;\r\n        const rows = res.data.data.map(requisition => {\r\n          const row = {\r\n            sn: sn + 1,\r\n            id: requisition.id,\r\n            listing: requisition.listing.id,\r\n            products: requisition.products.length,\r\n            cost: requisition.cost.baseCost,\r\n            duration: requisition.duration.name,\r\n            space: requisition.space,\r\n            expires: requisition.expires,\r\n            status: requisition.status === 2 ? <MDBBadge color=\"success\">Active</MDBBadge> : <MDBBadge className=\"danger-color\">Canclled</MDBBadge>,\r\n          };\r\n          sn++;\r\n          return row;\r\n        })\r\n        setLoading(false);\r\n        setRequisitions(rows);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        return [];\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadOrders();\r\n  }, []);\r\n \r\n  return (\r\n    <MDBContainer>\r\n      <MDBCard>\r\n        <MDBCard narrow className=\"z-depth-0\">\r\n          <MDBView\r\n            cascade\r\n            className=\"teal accent-4 narrower py-2 my-3 d-flex justify-content-between align-items-center\"\r\n          >\r\n            <div className=\"text-left\"></div>\r\n            <span className=\"white-text text-bold mx-3\">\r\n              All Requisitions\r\n            </span>\r\n            <div className=\"text-right\"></div>\r\n          </MDBView>\r\n        </MDBCard>\r\n        <MDBCardBody>\r\n          <MDBDataTable striped responsive bordered small hover data={data} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default AllRequisitions;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBContainer,\r\n  MDBDataTable,\r\n  MDBView,\r\n  MDBBadge,\r\n  MDBIcon\r\n} from \"mdbreact\";\r\n\r\nconst ExpiredListings = () => {\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [listings, setListings] = useState([]);\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"S/N\",\r\n        field: \"sn\",\r\n      },\r\n      {\r\n        label: \"Listin Id\",\r\n        field: \"id\",\r\n      },\r\n      {\r\n        label: \"Name\",\r\n        field: \"name\",\r\n      },\r\n      {\r\n        label: \"Description\",\r\n        field: \"description\",\r\n      },\r\n      {\r\n        label: \"Price\",\r\n        field: \"price\",\r\n      },\r\n      {\r\n        label: \"Discount\",\r\n        field: \"discount\",\r\n      },\r\n      {\r\n        label: \"User\",\r\n        field: \"user\",\r\n      },\r\n      {\r\n        label: \"Status\",\r\n        field: \"status\",\r\n      },\r\n      {\r\n        label: \"Date Expired\",\r\n        field: \"date\",\r\n      },\r\n      {\r\n        label: \"Action\",\r\n        field: \"action\",\r\n      },\r\n    ],\r\n    rows: !loading ? listings : [{\r\n      sn: <Skeleton />,\r\n      id: <Skeleton />,\r\n      name: <Skeleton />,\r\n      description: <Skeleton />,\r\n      price: <Skeleton />,\r\n      discount: <Skeleton />,\r\n      user: <Skeleton />,\r\n      action: <Skeleton />,\r\n      status: <Skeleton />,\r\n      date: <Skeleton />\r\n    }]\r\n  };\r\n\r\n  const loadListings = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/listings`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        let sn = listings.length;\r\n        const rows = res.data.data.map(listing => {\r\n          if (listing.availability.to < Date.now()) {\r\n            const row = {\r\n              sn: sn + 1,\r\n              id: listing.id,\r\n              name: listing.name,\r\n              description: listing.description,\r\n              price: listing.price,\r\n              discount: listing.discount,\r\n              user: listing.user.id,\r\n              status: listing.status === 2 ? <MDBBadge color=\"success\">Active</MDBBadge> : <MDBBadge className=\"danger-color\">Blocked</MDBBadge>,\r\n              date: listing.availability.to,\r\n              action: (<div>\r\n                <MDBBadge className=\"danger-color\"><MDBIcon icon=\"trash\" className=\"white-text\" /></MDBBadge>\r\n              </div>)\r\n            };\r\n            sn++;\r\n            return row;\r\n          }\r\n          return null;\r\n        })\r\n        setLoading(false);\r\n        setListings(rows);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        return [];\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadListings();\r\n  }, []);\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCard>\r\n        <MDBCard narrow className=\"z-depth-0\">\r\n          <MDBView\r\n            cascade\r\n            className=\"teal accent-4 narrower py-2 my-3 d-flex justify-content-between align-items-center\"\r\n          >\r\n            <div className=\"text-left\"></div>\r\n            <span className=\"white-text text-bold mx-3\">\r\n              Available Listings\r\n            </span>\r\n            <div className=\"text-right\"></div>\r\n          </MDBView>\r\n        </MDBCard>\r\n        <MDBCardBody>\r\n          <MDBDataTable striped responsive bordered small hover data={data} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default ExpiredListings;\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// PAGES\r\nimport Dashboard from \"../pages/Dashboard\";\r\nimport EmailNotifications from \"../pages/EmailNotifications\";\r\nimport SingleUser from \"../pages/SingleUser\";\r\n\r\n// INVENTORY LOG\r\nimport DispatchOrderLog from \"../pages/InventoryLog/DispatchOrderLog\";\r\nimport RejectedStockLog from \"../pages/InventoryLog/RejectedStockLog\";\r\nimport StockReceiptLog from \"../pages/InventoryLog/StockReceiptLog\";\r\n\r\n// SETTNIGS\r\nimport EditPassword from \"../pages/Settings/EditPassword\";\r\nimport EmailSettings from \"../pages/Settings/EmailSettings\";\r\nimport SmsSettings from \"../pages/Settings/SmsSettings\";\r\n\r\n// STAFF MANAGEMENT\r\nimport AddNewStaff from \"../pages/StaffManagement/AddNewStaff\";\r\nimport AllStaff from \"../pages/StaffManagement/AllStaff\";\r\nimport RoleManagement from \"../pages/StaffManagement/RoleManagement\";\r\n\r\n// TRANSACTION LOG\r\nimport ExpiredRentLog from \"../pages/TransactionLog/ExpiredRentLog\";\r\nimport MerchantPayoutLog from \"../pages/TransactionLog/MerchantPayoutLog\";\r\nimport ReferralLog from \"../pages/TransactionLog/ReferralLog\";\r\nimport WareHousersPaymentLog from \"../pages/TransactionLog/WareHousersPaymentLog\";\r\nimport WithdrawalLog from \"../pages/TransactionLog/WithdrawalLog\";\r\n\r\n// USER MANAGEMENT\r\nimport AllMerchants from \"../pages/UserManagement/AllMerchants\";\r\nimport AllUsers from \"../pages/UserManagement/AllUsers\";\r\nimport AllWarehouser from \"../pages/UserManagement/AllWarehouser\";\r\nimport BannedUsers from \"../pages/UserManagement/BannedUsers\";\r\n\r\n// LISTING MANAGEMENT\r\nimport AllListings from \"../pages/ListingManagement/AllListings\"\r\nimport AvailableListings from \"../pages/ListingManagement/AvailableListings\"\r\nimport AllRequisitions from \"../pages/ListingManagement/AllRequisitions\"\r\nimport ExpiredListings from \"../pages/ListingManagement/ExpiredListings\"\r\n\r\n\r\n\r\nconst FourToFour = () => <h1 className=\"text-center\">404</h1>;\r\n\r\nconst mapStateToProps = state => ({\r\n  permit: state.permission\r\n})\r\n\r\nclass Routes extends React.Component {\r\n\r\n  isLogged = this.props.isLogged;\r\n\r\n  requiresAuth = (Comp, match = \"\") => {\r\n    if (this.isLogged || localStorage.getItem(\"token\")) {\r\n      return <Comp match={match} />;\r\n    } else {\r\n      return <Redirect to=\"/login\" />\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { permit } = this.props;\r\n    return (\r\n      <Switch>\r\n        <Route path=\"/\" exact render={({ match }) => this.requiresAuth(Dashboard, match)} />\r\n        <Route\r\n          path=\"/email-notification\"\r\n          exact\r\n          render={({ match }) => this.requiresAuth(EmailNotifications, match)}\r\n        />\r\n        <Route\r\n          path=\"/user/:id\"\r\n          exact\r\n          render={({ match }) => this.requiresAuth(SingleUser, match)}\r\n        />\r\n\r\n        {/* INVENTORY LOG */}\r\n        <Route\r\n          path=\"/logs/dispatch-order-log\"\r\n          exact\r\n          render={({ match }) => this.requiresAuth(DispatchOrderLog, match)}\r\n        />\r\n        <Route\r\n          path=\"/logs/rejected-stock-log\"\r\n          exact\r\n          render={({ match }) => this.requiresAuth(RejectedStockLog)}\r\n        />\r\n        <Route\r\n          path=\"/logs/stock-receipt-log\"\r\n          exact\r\n          render={({ match }) => this.requiresAuth(StockReceiptLog)}\r\n        />\r\n\r\n        {/* SETTINGS */}\r\n        <Route path=\"/settings/edit-password\" exact render={({ match }) => this.requiresAuth(EditPassword)} />\r\n        {/* {(permission === 1 || this.permission === 2) && (<> */}\r\n        <Route\r\n          path=\"/settings/email-settings\"\r\n          exact\r\n          render={({ match }) => this.requiresAuth(EmailSettings)}\r\n        />\r\n        <Route path=\"/settings/sms-settings\" exact render={({ match }) => this.requiresAuth(SmsSettings)} />\r\n        {/* </>)} */}\r\n\r\n        {/* STAFF MANAGEMENT */}\r\n        {permit.management && <Route path=\"/staff/add-staff\" exact render={({ match }) => this.requiresAuth(AddNewStaff, match)} />}\r\n        {permit.management && <Route path=\"/staff/all-staff\" exact render={({ match }) => this.requiresAuth(AllStaff, match)} />}\r\n        {permit.management && <Route path=\"/staff/role-management\" exact render={({ match }) => this.requiresAuth(RoleManagement, match)} />}\r\n\r\n        {/* TRANSACTION LOG */}\r\n        {permit.management && <Route path=\"/logs/expired-rent-log\" exact render={({ match }) => this.requiresAuth(ExpiredRentLog, match)} />}\r\n        {permit.management && <Route\r\n          path=\"/logs/merchant-payout-log\"\r\n          exact\r\n          render={({ match }) => this.requiresAuth(MerchantPayoutLog, match)}\r\n        />}\r\n        {permit.management && <Route path=\"/logs/referral-log\" exact render={({ match }) => this.requiresAuth(ReferralLog, match)} />}\r\n        {permit.management && <Route\r\n          path=\"/logs/warehousers-payment-log\"\r\n          exact\r\n          render={({ match }) => this.requiresAuth(WareHousersPaymentLog, match)}\r\n        />}\r\n        {permit.management && <Route path=\"/logs/withdrawal-log\" exact render={({ match }) => this.requiresAuth(WithdrawalLog, match)} />}\r\n\r\n        {/* USER MANAGEMENT */}\r\n        <Route path=\"/users/merchants\" exact render={({ match }) => this.requiresAuth(AllMerchants, match)} />\r\n        <Route path=\"/users/all-users\" exact render={({ match }) => this.requiresAuth(AllUsers, match)} />\r\n        <Route path=\"/users/warehousers\" exact render={({ match }) => this.requiresAuth(AllWarehouser, match)} />\r\n        <Route path=\"/users/banned-users\" exact render={({ match }) => this.requiresAuth(BannedUsers, match)} />\r\n\r\n        {/* LISTING MANAGEMENT */}\r\n        <Route path=\"/listings\" exact render={({ match }) => this.requiresAuth(AllListings, match)} />\r\n        <Route path=\"/listings/available-listings\" exact render={({ match }) => this.requiresAuth(AvailableListings, match)} />\r\n        <Route path=\"/listings/requisitions\" exact render={({ match }) => this.requiresAuth(AllRequisitions, match)} />\r\n        <Route path=\"/listings/expired-listings\" exact render={({ match }) => this.requiresAuth(ExpiredListings, match)} />\r\n\r\n\r\n        <Route render={({ location }) => {\r\n          if (location.pathname === \"/login\") return <Redirect to=\"/\" />;\r\n          return <FourToFour />\r\n        }} />\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Routes);\r\n","import React, { Component } from \"react\";\r\nimport \"../App.css\";\r\nimport SideNavigation from \"./SideNavigation\";\r\nimport TopNavigation from \"./TopNavigation\";\r\nimport Copyrights from \"./Footer\";\r\nimport Routes from \"./Routes\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      toggle: false,\r\n      windowWidth: 0,\r\n      currentPage: \"\",\r\n      sideNavToggled: false,\r\n      breakWidth: 1400\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps, nextProps, snapshot) {\r\n    if (this.props.location.pathname !== prevProps.location.pathname) {\r\n      this.assessLocation(this.props.location.pathname);\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.handleResize();\r\n    window.addEventListener(\"resize\", this.handleResize);\r\n    this.assessLocation(this.props.location.pathname);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.handleResize);\r\n  }\r\n\r\n  handleResize = () => {\r\n    this.setState({\r\n      windowWidth: window.innerWidth\r\n    });\r\n  };\r\n\r\n  toggleSideNav = () => {\r\n    if (this.state.windowWidth < this.state.breakWidth) {\r\n      this.setState({\r\n        sideNavToggled: !this.state.sideNavToggled\r\n      });\r\n    }\r\n  };\r\n\r\n  assessLocation = location => {\r\n    let locationString;\r\n    switch (location) {\r\n      // Dashboards:\r\n      case \"/\":\r\n        locationString = \"Dashboard\";\r\n        break;\r\n      case \"/email-notifications\":\r\n        locationString = \"Email Notification\";\r\n        break;\r\n      case \"/logs/dispatch-order-log\":\r\n        locationString = \"Dispatch Orders\";\r\n        break;\r\n      case \"/logs/rejected-stock-log\":\r\n        locationString = \"Rejected Stocks\";\r\n        break;\r\n      case \"/logs/stock-receipt-log\":\r\n        locationString = \"Stock Receipts\";\r\n        break;\r\n      case \"/settings/edit-password\":\r\n        locationString = \"Edit Password\";\r\n        break;\r\n      case \"/settings/email-settings\":\r\n        locationString = \"Email Setting\";\r\n        break;\r\n      case \"/settings/sms-settings\":\r\n        locationString = \"SMS Setting\";\r\n        break;\r\n      case \"/staff/add-staff\":\r\n        locationString = \"Add Staff\";\r\n        break;\r\n      case \"/staff/all-staff\":\r\n        locationString = \"All Staff\";\r\n        break;\r\n      case \"/staff/management\":\r\n        locationString = \"Management\";\r\n        break;\r\n      case \"/staff/super-admin\":\r\n        locationString = \"Super Admin\";\r\n        break;\r\n      case \"/staff/support\":\r\n        locationString = \"Support\";\r\n        break;\r\n      case \"/staff/team-lead\":\r\n        locationString = \"Team Lead\";\r\n        break;\r\n      case \"/logs/expired-rent-log\":\r\n        locationString = \"Expired Rents\";\r\n        break;\r\n      case \"/logs/merchant-payout-log\":\r\n        locationString = \"Merchant Payouts\";\r\n        break;\r\n      case \"/logs/referral-log\":\r\n        locationString = \"Referrals\";\r\n        break;\r\n      case \"/logs/warehousers-payment-log\":\r\n        locationString = \"Wayhousers' Payments\";\r\n        break;\r\n      case \"/logs/withdrawal-log\":\r\n        locationString = \"Withdrawals\";\r\n        break;\r\n      case \"/users/merchants\":\r\n        locationString = \"Merchants\";\r\n        break;\r\n      case \"/users/all-users\":\r\n        locationString = \"All Users\";\r\n        break;\r\n      case \"/users/warehousers\":\r\n        locationString = \"WareHousers\";\r\n        break;\r\n      case \"/users/banned-users\":\r\n        locationString = \"Banned Users\";\r\n        break;\r\n      case \"/users/user-rating-history\":\r\n        locationString = \"User Rating History\";\r\n        break;\r\n      case \"/listings\":\r\n        locationString = \"All Listings\";\r\n        break;\r\n      case \"/listings/available-listings\":\r\n        locationString = \"Available Listings\";\r\n        break;\r\n      case \"/listings/expired-listings\":\r\n        locationString = \"Expired Listings\";\r\n        break;\r\n      case \"/listings/requisitions\":\r\n        locationString = \"All Requisitions\";\r\n        break;\r\n      default:\r\n    }\r\n    this.setState({\r\n      currentPage: locationString\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const dynamicLeftPadding = {\r\n      paddingLeft:\r\n        this.state.windowWidth > this.state.breakWidth ? \"240px\" : \"0\"\r\n    };\r\n\r\n    return (\r\n      <div className=\"app\">\r\n        <div className=\"white-skin\">\r\n          <SideNavigation\r\n            breakWidth={this.state.breakWidth}\r\n            style={{ transition: \"all .3s\" }}\r\n            triggerOpening={this.state.sideNavToggled}\r\n            onLinkClick={() => this.toggleSideNav()}\r\n          />\r\n        </div>\r\n        <div className=\"flexible-content white-skin\">\r\n          <TopNavigation\r\n            toggle={this.state.windowWidth < this.state.breakWidth}\r\n            onSideNavToggleClick={this.toggleSideNav}\r\n            routeName={this.state.currentPage}\r\n            className=\"white-skin\"\r\n          />\r\n          <main style={{ ...dynamicLeftPadding, margin: \"8rem 6% 6rem\" }}>\r\n            <Routes onChange={() => this.assessLocation()} />\r\n          </main>\r\n          <Copyrights\r\n            style={{ ...dynamicLeftPadding, position: \"fixed\", width: \"100%\" }}\r\n            className=\"d-none d-lg-block\"\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  MDBBtn,\r\n  MDBContainer,\r\n  MDBCol,\r\n  MDBInput,\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBLink,\r\n} from 'mdbreact';\r\nimport { useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { LogIn } from \"../../Redux/actions/authentication\";\r\nimport Logo from \"../../assets/ginjabox.png\";\r\nimport { apiUrl } from \"../../config\";\r\n\r\nconst validateEmail = (email) => {\r\n  const exp = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i;\r\n  return exp.test(String(email).toLowerCase());\r\n}\r\n\r\nconst Login = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  // const firstTimeLaunch = () => {\r\n  //   axios.post(`${apiUrl}/`, { create: \"Super Admin\" })\r\n  //     .then(res => {\r\n  //       console.log(res.data);\r\n  //     })\r\n  //     .catch(err => {\r\n  //       console.log(err.response);\r\n  //     })\r\n  // }\r\n  // useEffect(() => {\r\n  //   firstTimeLaunch();\r\n  // }, []);\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [feedback, setFeedback] = useState(null);\r\n  const [success, setSuccess] = useState(null);\r\n  const [loader, setLoader] = useState(false);\r\n\r\n  const authenticate = async (email, password) => {\r\n    email.toLowerCase();\r\n    setLoader(true);\r\n    const data = { email, password }\r\n\r\n    await axios.post(`${apiUrl}/authenticate`, data)\r\n      .then(res => {\r\n        const { data, message } = res.data\r\n        dispatch(LogIn(data));\r\n        setLoader(false);\r\n        setSuccess(message);\r\n      })\r\n      .catch(err => {\r\n        setLoader(false);\r\n        setFeedback(err.response.data.message);\r\n      })\r\n\r\n  }\r\n\r\n  const goToDashboard = () => {\r\n    setFeedback(null);\r\n    if (!email) {\r\n      setLoader(false);\r\n      return setFeedback(\"Email field cannot be empty!\")\r\n    };\r\n    if (!validateEmail(email)) {\r\n      setLoader(false);\r\n      return setFeedback(\"Invalid email address!\")\r\n    };\r\n    if (!password) {\r\n      setLoader(false);\r\n      return setFeedback(\"Password field cannot be empty!\")\r\n    }\r\n    authenticate(email, password);\r\n  }\r\n\r\n  return (\r\n    <MDBContainer className=\"d-flex justify-content-center\">\r\n      <MDBCol md='12' lg='5'>\r\n        <div className=\"teal px-5 py-3\">\r\n          <img src={Logo} style={{ width: \"100%\" }} alt=\"logo\" />\r\n        </div>\r\n        <MDBCard className=\"mt-2\">\r\n          <MDBCardBody>\r\n            <p className='h5 text-center mb-4'>Sign in</p>\r\n            <MDBInput\r\n              icon='envelope'\r\n              iconClass='grey-text'\r\n              label='Your email'\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              value={email}\r\n            />\r\n            <MDBInput\r\n              type='password'\r\n              icon='lock'\r\n              iconClass='grey-text'\r\n              label='Your password'\r\n              onChange={e => setPassword(e.target.value)}\r\n              value={password}\r\n            />\r\n            <div className=\"alert-danger\">\r\n              {feedback && feedback}\r\n            </div>\r\n            <div className=\"alert-success\">\r\n              {success && success}\r\n            </div>\r\n            <div className='text-center'>\r\n              <MDBBtn className=\"teal accent-4\" onClick={() => goToDashboard()}>Login {loader && (\r\n                <div className=\"spinner-border spinner-border-sm text-white\" role=\"status\">\r\n                  <span className=\"sr-only\">Loading...</span>\r\n                </div>)}</MDBBtn>\r\n              <MDBLink className=\"teal-text\" to=\"/password-reset\">Forgot Password?</MDBLink>\r\n            </div>\r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </MDBCol>\r\n    </MDBContainer>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport {\r\n  MDBBtn,\r\n  MDBContainer,\r\n  MDBCol,\r\n  MDBInput,\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBLink\r\n} from 'mdbreact';\r\nimport Logo from \"../../assets/ginjabox.png\";\r\n\r\nconst Login = props => {\r\n  console.log(props);\r\n  return (\r\n    <MDBContainer className=\"d-flex justify-content-center\">\r\n      <MDBCol md='12' lg='5'>\r\n        <div className=\"teal px-5 py-3\">\r\n          <img src={Logo} style={{ width: \"100%\" }} alt=\"logo\" />\r\n        </div>\r\n        <MDBCard className=\"mt-2\">\r\n          <MDBCardBody>\r\n            <p className='h5 text-center mb-4'>Reset password</p>\r\n            <p className=\"text-center\">Enter your email below, you are going to receive a mail to reset your password.</p>\r\n            <MDBInput\r\n              icon='envelope'\r\n              iconClass='grey-text'\r\n              label='Your email'\r\n            />\r\n            <div className='text-center'>\r\n              <MDBBtn className=\"teal accent-4\">Reset</MDBBtn>\r\n              <MDBLink className=\"teal-text\" to=\"/login\">Back To Login</MDBLink>\r\n            </div>\r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </MDBCol>\r\n    </MDBContainer>\r\n  );\r\n}\r\n\r\nexport default Login;","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\n// PAGES\r\nimport Login from \"../pages/auth/Login\";\r\nimport PasswordReset from \"../pages/auth/PasswordReset\";\r\n\r\nclass AuthRoutes extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <main style={{ margin: \"8rem 6% 6rem\" }}>\r\n          <Route path=\"/login\" exact component={Login} />\r\n          <Route path=\"/password-reset\" exact component={PasswordReset} />\r\n          <Route render={() => {\r\n            return <Redirect to=\"/login\" />\r\n          }} />\r\n        </main>\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AuthRoutes;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { Switch } from 'react-router-dom';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport RoutesWithNavigation from './components/RoutesWithNavigation';\r\nimport AuthRoutes from \"./components/AuthRoutes\";\r\n\r\n\r\nconst App = () => {\r\n  const isLogged = useSelector(state => state.isLogged);\r\n\r\n  return (\r\n    <Switch>\r\n      {(!localStorage.getItem('email')) && <AuthRoutes />}\r\n      {(isLogged || localStorage.getItem('email')) && <RoutesWithNavigation />}\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const isLoggedReducer = (state = false, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN\":\r\n      const { email, token, roleId } = action.payload;\r\n      if (!token) return state = false;\r\n      localStorage.setItem(\"token\", token);\r\n      localStorage.setItem(\"email\", email);\r\n      localStorage.setItem(\"roleId\", roleId);\r\n      return state = true;\r\n    case \"LOGOUT\":\r\n      return state = false;\r\n    default:\r\n      return state = false;\r\n  }\r\n}\r\n\r\nexport default isLoggedReducer;","const permissionReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case \"GET_PERMISSION\":\r\n      const permit = {\r\n        superAdmin: localStorage.getItem(\"roleId\") == 1,\r\n        management: localStorage.getItem(\"roleId\") <= 2,\r\n        teamLead: localStorage.getItem(\"roleId\") <= 3,\r\n        support: localStorage.getItem(\"roleId\") <= 4,\r\n      };\r\n      return state = permit;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default permissionReducer;","const userReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"ALL_USERS\":\r\n      return state = action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default userReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport isLoggedReducer from \"./isLoggedReducer\";\r\nimport permissionReducer from \"./permissionReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\n\r\nconst allReducers = combineReducers({\r\n  isLogged: isLoggedReducer,\r\n  permission: permissionReducer,\r\n  users: usersReducer\r\n});\r\n\r\nexport default allReducers;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Router } from 'react-router-dom';\r\nimport { createBrowserHistory } from 'history';\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\"\r\nimport { Provider as KeepAliveProvider } from \"react-keep-alive\";\r\nimport allReducers from \"./Redux/reducers\";\r\n\r\nlet store = createStore(allReducers);\r\n\r\nconst customHistory = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router history={customHistory}>\r\n      <KeepAliveProvider>\r\n        <App />\r\n      </KeepAliveProvider>\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/ginjabox.96de654a.png\";"],"sourceRoot":""}