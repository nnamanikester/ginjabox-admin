{"version":3,"sources":["components/SideNavigation.js","Redux/actions/permission.js","components/TopNavigation.js","Redux/actions/authentication.js","components/Footer.js","config.js","pages/Statistics/Users.js","functions.js","pages/Statistics/AppStatistics.js","pages/Statistics/AvailableWarehouse.js","pages/Statistics/Commissions.js","pages/Statistics/Transactions.js","pages/Statistics/UsersByOs.js","pages/Dashboard.js","pages/EmailNotifications.js","pages/SingleUser.js","pages/InventoryLog/DispatchOrderLog.js","pages/InventoryLog/RejectedStockLog.js","pages/InventoryLog/StockReceiptLog.js","pages/Settings/EditPassword.js","pages/Settings/EmailSettings.js","pages/Settings/SmsSettings.js","pages/StaffManagement/AddNewStaff.js","pages/StaffManagement/AllStaff.js","pages/StaffManagement/RoleManagement.js","pages/TransactionLog/ExpiredRentLog.js","pages/TransactionLog/MerchantPayoutLog.js","pages/TransactionLog/ReferralLog.js","pages/TransactionLog/WareHousersPaymentLog.js","pages/TransactionLog/WithdrawalLog.js","pages/UserManagement/AllMerchants.js","pages/UserManagement/AllUsers.js","pages/UserManagement/AllWarehouser.js","pages/UserManagement/BannedUsers.js","pages/ListingManagement/AllListings.js","pages/ListingManagement/AvailableListings.js","pages/ListingManagement/AllRequisitions.js","pages/ListingManagement/ExpiredListings.js","components/Routes.js","components/RoutesWithNavigation.js","pages/auth/Login.js","pages/auth/PasswordReset.js","components/AuthRoutes.js","App.js","serviceWorker.js","Redux/reducers/isLoggedReducer.js","Redux/reducers/permissionReducer.js","Redux/reducers/usersReducer.js","Redux/reducers/index.js","index.js","assets/ginjabox.png"],"names":["SideNavigation","React","Component","componentWillMount","this","props","permission","rSNL","to","text","icon","onClick","onLinkClick","render","permit","className","logo","Logo","bg","mask","fixed","breakWidth","triggerOpening","style","transition","exact","topLevel","name","id","connect","state","dispatch","type","TopNavigation","useDispatch","navStyle","paddingLeft","toggle","light","expand","scrolling","zIndex","onSideNavToggleClick","key","lineHeight","marginleft","verticalAlign","cursor","color","size","href","routeName","right","flexDirection","nav","caret","minWidth","localStorage","clear","window","location","reload","Copyrights","date","Date","getFullYear","apiUrl","Users","useState","totalUsers","setTotalUsers","loadTotalUsers","a","axios","get","headers","getItem","then","res","data","catch","err","useEffect","xl","md","cascade","value","barClassName","height","wrapperStyle","opacity","money","Intl","NumberFormat","formatShortNumber","num","Math","abs","sign","toFixed","AppStatistics","signupsToday","setSignupsToday","signupsLastWeek","setSignupsLastWeek","signupsLastMonth","setSignupsLastMonth","totalSignups","setTotalSignups","commissionsToday","setCommissionsToday","commissionsLastWeek","setCommissionsLastWeek","commissionsLastMonth","setCommissionsLastMonth","totalCommissions","setTotalCommissions","transactionsToday","setTransactionsToday","transactionsLastWeek","setTransactionsLastWeek","transactionsLastMonth","setTransactionsLastMonth","totalTransactions","setTotalTransactions","loading","setLoading","getSignups","today","lastWeek","lastMonth","total","getCommissions","getTransactions","lg","sm","AvailableWarehouse","loadTotalCommissions","Commissions","format","Transactions","loadTotalTransactions","UsersByOs","android","setAndroid","ios","setIos","loadUsersOs","mobileChartData","labels","datasets","backgroundColor","hoverBackgroundColor","options","responsive","maintainAspectRatio","legend","fontColor","role","Dashboard","fluid","EmailNotifications","col","label","disabled","multiple","iconClass","SingleUser","match","user","setUser","loadUser","params","transactions","columns","field","rows","map","tr","sn","indexOf","transactionId","desc","description","commission","fees","status","moment","createdAt","listings","listing","price","parseInt","discount","ratingHistory","ratings","rating","listingId","rate","ratingId","userId","ErrorLoading","count","firstName","lastName","email","phoneNumber","dob","wallet","availableBalance","ledgerBalance","length","striped","bordered","small","hover","DispatchOrderLog","orders","setOrders","agentName","agentPhone","agentIdNo","agentIdentification","pickupDateFrom","pickupDateTo","loadOrders","order","row","pickupAgentIdNumber","pickupAgentName","pickupAgentPhone","pickupAgentIdentification","pickupDate","min","max","console","log","narrow","RejectedStockLog","stocks","setStocks","products","requisition","diapatch","loadStocks","stock","StockReceiptLog","EditPassword","oldPassword","setOldPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","feedback","setFeedback","success","setSuccess","handleEditpassword","put","error","message","onChange","e","target","EmailSettings","SmsSettings","AddNewStaff","roles","setRoles","roleId","password","form","setForm","loadRoles","items","handleSubmit","test","String","toLowerCase","post","cnt","getValue","val","AllStaff","staff","setStaff","phone","action","loadUsers","handleEditStaff","handleDeleteStaff","confirm","delete","alert","RoleManagement","openModal","setOpenModal","openEdit","setOpenEdit","setRole","roleName","setRoleName","toggleModal","toggleEdit","dateCreated","dateUpdated","updatedAt","handleDeleteRole","filter","r","handleRoleName","isOpen","inline","backdrop","cascading","disableFocusTrap","createRole","dat","editRole","amount","datePurchased","dateExpired","ExpiredRentLog","userName","userEmail","MerchantPayoutLog","ReferralLog","referrals","setReferrals","refId","refCode","loadReferrals","ref","refs","WareHousersPaymentLog","payments","setPayments","paymentId","channel","info","customerEmail","expires","loadPayments","payment","customer","WithdrawalLog","trans","setTrans","loadTransactions","tran","AllWarehouser","users","setUsers","editModal","setEditModal","accountStatus","handleBanUser","handleActivateUser","handleEditInput","handleEditUser","AllUsers","BannedUsers","AllListings","setListings","setListing","availability","loadListings","now","handleDeleteListing","handleActivateListing","handleBlockListing","proofOfOwnership","slug","currency","windows","handleEditListing","AvailableListings","AllRequisitions","requisitions","setRequisitions","cost","duration","space","loadRequisitions","baseCost","ExpiredListings","FourToFour","Routes","isLogged","requiresAuth","Comp","path","management","AllMerchants","pathname","App","constructor","super","handleResize","setState","windowWidth","innerWidth","toggleSideNav","sideNavToggled","assessLocation","locationString","currentPage","componentDidUpdate","prevProps","nextProps","snapshot","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","dynamicLeftPadding","margin","position","width","Login","setEmail","setPassword","loader","setLoader","authenticate","payload","response","goToDashboard","validateEmail","src","alt","AuthRoutes","component","PasswordReset","useSelector","RoutesWithNavigation","Boolean","hostname","isLoggedReducer","token","setItem","permissionReducer","superAdmin","teamLead","support","userReducer","allReducers","combineReducers","usersReducer","store","createStore","customHistory","createBrowserHistory","ReactDOM","history","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.fff6cc75.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  MDBSideNavLink,\r\n  MDBSideNavCat,\r\n  MDBSideNavNav,\r\n  MDBSideNav,\r\n  MDBIcon\r\n} from \"mdbreact\";\r\nimport Logo from \"../assets/ginjabox.png\";\r\nimport { connect } from \"react-redux\";\r\nimport { getPermission } from \"../Redux/actions/permission\";\r\n\r\n// const permission = useSelector(state => state.permission);\r\n// const dispatch = useDispatch();\r\n\r\nconst mapStateToProps = state => ({\r\n  permit: state.permission\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    permission: () => dispatch(getPermission())\r\n  }\r\n}\r\n\r\nclass SideNavigation extends React.Component {\r\n\r\n  componentWillMount() {\r\n    this.props.permission();\r\n  }\r\n\r\n  rSNL(to, text, icon) {\r\n    return (\r\n      <MDBSideNavLink to={to} onClick={this.props.onLinkClick}>\r\n        <MDBIcon icon={`${icon} mr-2`} />\r\n        {text}\r\n      </MDBSideNavLink>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { onLinkClick, permit } = this.props;\r\n    return (\r\n      <div className=\"white-skin\">\r\n        <MDBSideNav\r\n          logo={Logo}\r\n          bg=\"https://mdbootstrap.com/img/Photos/Others/sidenav4.jpg\"\r\n          mask=\"strong\"\r\n          fixed\r\n          breakWidth={this.props.breakWidth}\r\n          triggerOpening={this.props.triggerOpening}\r\n          style={{ transition: \"padding-left .3s\" }}\r\n        >\r\n          <MDBSideNavNav>\r\n            <MDBSideNavLink exact topLevel to=\"/\" onClick={onLinkClick}>\r\n              <MDBIcon icon=\"tachometer-alt mr-2\" />\r\n              Dashboard\r\n            </MDBSideNavLink>\r\n\r\n            <MDBSideNavCat name=\"Listing Management\" id=\"user-cat\" icon=\"list\">\r\n              {this.rSNL(\"/listings\", \"All Lisitngs\", \"list\")}\r\n              {this.rSNL(\"/listings/available-listings\", \"Available Listings\", \"list\")}\r\n              {this.rSNL(\"/listings/requisitions\", \"All Requisitions\", \"list\")}\r\n              {this.rSNL(\"/listings/expired-listings\", \"Expired Listings\", \"list\")}\r\n            </MDBSideNavCat>\r\n\r\n            <MDBSideNavCat name=\"User Management\" id=\"user-cat\" icon=\"users\">\r\n              {this.rSNL(\"/users/all-users\", \"All Users\", \"users\")}\r\n              {this.rSNL(\"/users/merchants\", \"All Merchants\", \"users\")}\r\n              {this.rSNL(\"/users/warehousers\", \"All Warehousers\", \"users\")}\r\n              {this.rSNL(\"/users/banned-users\", \"Banned Users\", \"ban\")}\r\n            </MDBSideNavCat>\r\n\r\n            <MDBSideNavCat\r\n              name=\"Transaction Log\"\r\n              id=\"transaction-cat\"\r\n              icon=\"filter\"\r\n            >\r\n              {/* {this.rSNL(\r\n                \"/logs/merchant-payout-log\",\r\n                \"Merchant Payout Log\",\r\n                \"history\"\r\n              )} */}\r\n              {this.rSNL(\r\n                \"/logs/warehousers-payment-log\",\r\n                \"Warehouse Payment Log\",\r\n                \"history\"\r\n              )}\r\n              {this.rSNL(\"/logs/withdrawal-log\", \"Withdrawal Log\", \"history\")}\r\n              {/* {this.rSNL(\r\n                \"/logs/expired-rent-log\",\r\n                \"Expired Rent Log\",\r\n                \"history\"\r\n              )} */}\r\n              {this.rSNL(\"/logs/referral-log\", \"Referral Log\", \"history\")}\r\n            </MDBSideNavCat>\r\n\r\n            <MDBSideNavCat name=\"Inventory Log\" id=\"inventory-cat\" icon=\"sort\">\r\n              {this.rSNL(\r\n                \"/logs/dispatch-order-log\",\r\n                \"Dispatch Order Log\",\r\n                \"history\"\r\n              )}\r\n              {this.rSNL(\r\n                \"/logs/rejected-stock-log\",\r\n                \"Rejected Stock Log\",\r\n                \"history\"\r\n              )}\r\n              {this.rSNL(\r\n                \"/logs/stock-receipt-log\",\r\n                \"Stock Receipt Log\",\r\n                \"history\"\r\n              )}\r\n            </MDBSideNavCat>\r\n\r\n            <MDBSideNavCat name=\"Staff Management\" id=\"staff-cat\" icon=\"tasks\">\r\n              {this.rSNL(\"/staff/add-staff\", \"Add Staff\", \"plus\")}\r\n              {this.rSNL(\"/staff/all-staff\", \"All Staff\", \"users\")}\r\n              {this.rSNL(\"/staff/role-management\", \"Role Management\", \"tasks\")}\r\n            </MDBSideNavCat>\r\n\r\n            {/* <MDBSideNavLink exact topLevel to=\"/email-notification\">\r\n              <MDBIcon icon=\"envelope mr-2\" />\r\n              Email Notification\r\n            </MDBSideNavLink> */}\r\n\r\n            <MDBSideNavCat name=\"Settings\" id=\"settings-cat\" icon=\"cog\">\r\n              {/* {this.rSNL(\r\n                \"/settings/email-settings\",\r\n                \"Email Setting\",\r\n                \"envelope\"\r\n              )} */}\r\n              {/* {this.rSNL(\"/settings/sms-settings\", \"SMS Setting\", \"sms\")} */}\r\n              {this.rSNL(\"/settings/edit-password\", \"Edit Password\", \"lock\")}\r\n            </MDBSideNavCat>\r\n\r\n          </MDBSideNavNav>\r\n        </MDBSideNav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideNavigation);\r\n","export const getPermission = () => {\r\n  return {\r\n    type: \"GET_PERMISSION\"\r\n  }\r\n}","import React from \"react\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport {\r\n  MDBNavbar,\r\n  MDBNavbarBrand,\r\n  MDBNavbarNav,\r\n  MDBIcon,\r\n  MDBDropdown,\r\n  MDBDropdownToggle,\r\n  MDBDropdownMenu,\r\n  MDBDropdownItem,\r\n  MDBBadge\r\n} from \"mdbreact\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { LogOut } from \"../Redux/actions/authentication\";\r\nimport { Redirect } from \"react-router\"\r\n\r\nconst TopNavigation = (props) => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const navStyle = {\r\n    paddingLeft: props.toggle ? \"16px\" : \"240px\",\r\n    transition: \"padding-left .3s\"\r\n  };\r\n\r\n  const handleToggleClickA = () => {\r\n    props.onSideNavToggleClick();\r\n  }\r\n\r\n  const logout = () => {\r\n    localStorage.clear();\r\n    dispatch(LogOut());\r\n    window.location.reload();\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <MDBNavbar\r\n        className=\"flexible-MDBNavbar\"\r\n        light\r\n        expand=\"md\"\r\n        scrolling\r\n        fixed=\"top\"\r\n        style={{ zIndex: 3 }}\r\n      >\r\n        <div\r\n          onClick={() => handleToggleClickA()}\r\n          key=\"sideNavToggleA\"\r\n          style={{\r\n            lineHeight: \"32px\",\r\n            marginleft: \"1em\",\r\n            verticalAlign: \"middle\",\r\n            cursor: \"pointer\"\r\n          }}\r\n        >\r\n          <MDBIcon icon=\"bars\" color=\"white\" size=\"lg\" />\r\n        </div>\r\n\r\n        <MDBNavbarBrand href=\"/\" style={navStyle}>\r\n          <strong>{props.routeName}</strong>\r\n        </MDBNavbarBrand>\r\n\r\n        <MDBNavbarNav expand=\"sm\" right style={{ flexDirection: \"row\" }}>\r\n          <MDBDropdown>\r\n            <MDBDropdownToggle nav caret>\r\n              <MDBBadge color=\"red\" className=\"mr-2\">\r\n                3\r\n                </MDBBadge>\r\n              <MDBIcon icon=\"bell\" />{\" \"}\r\n              <span className=\"d-none d-md-inline\">Notifications</span>\r\n            </MDBDropdownToggle>\r\n            <MDBDropdownMenu right style={{ minWidth: \"400px\" }}>\r\n              <MDBDropdownItem href=\"#!\">\r\n                <MDBIcon icon=\"money-bill-alt\" className=\"mr-2\" />\r\n                  New order received\r\n                  <span className=\"float-right\">\r\n                  <MDBIcon icon=\"clock\" /> 13 min\r\n                  </span>\r\n              </MDBDropdownItem>\r\n              <MDBDropdownItem href=\"#!\">\r\n                <MDBIcon icon=\"money-bill-alt\" className=\"mr-2\" />\r\n                  New order received\r\n                  <span className=\"float-right\">\r\n                  <MDBIcon icon=\"clock\" /> 33 min\r\n                  </span>\r\n              </MDBDropdownItem>\r\n              <MDBDropdownItem href=\"#!\">\r\n                <MDBIcon icon=\"chart-line\" className=\"mr-2\" />\r\n                  Your campaign is about to end\r\n                  <span className=\"float-right\">\r\n                  <MDBIcon icon=\"clock\" /> 53 min\r\n                  </span>\r\n              </MDBDropdownItem>\r\n            </MDBDropdownMenu>\r\n          </MDBDropdown>\r\n          <MDBDropdown>\r\n            <MDBDropdownToggle nav caret>\r\n              <MDBIcon icon=\"user\" />{\" \"}\r\n              <span className=\"d-none d-md-inline\">Profile</span>\r\n            </MDBDropdownToggle>\r\n            <MDBDropdownMenu right style={{ minWidth: \"200px\" }}>\r\n              <MDBDropdownItem onClick={() => logout()}>Log Out</MDBDropdownItem>\r\n              <MDBDropdownItem>My Account</MDBDropdownItem>\r\n            </MDBDropdownMenu>\r\n          </MDBDropdown>\r\n        </MDBNavbarNav>\r\n      </MDBNavbar>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default TopNavigation;\r\n","export const LogIn = (payload) => {\r\n  return {\r\n    type: \"LOGIN\",\r\n    payload: payload\r\n  }\r\n}\r\n\r\nexport const LogOut = () => {\r\n  return {\r\n    type: \"LOGOUT\"\r\n  }\r\n}","import React from 'react';\r\nimport { MDBFooter } from 'mdbreact';\r\n\r\nconst Copyrights = props => {\r\n  const date = new Date().getFullYear();\r\n  return (\r\n    <MDBFooter\r\n      className={props.className}\r\n      style={{ ...props.style, zIndex: 2 }}\r\n    >\r\n      <p className='footer-copyright mb-0 py-3 text-center'>\r\n        &copy; {date} Copyright:{' '}\r\n        <a href='/'> GinjaBox.com </a>\r\n      </p>\r\n    </MDBFooter>\r\n  );\r\n};\r\nexport default Copyrights;\r\n","export const apiUrl = \"http://167.71.135.109:8080/api/admin\";\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport {\r\n  MDBCol,\r\n  MDBCardBody,\r\n  MDBCard,\r\n  MDBIcon,\r\n  MDBProgress\r\n} from \"mdbreact\"\r\n\r\nconst Users = () => {\r\n  const [totalUsers, setTotalUsers] = useState(0);\r\n\r\n  const loadTotalUsers = async () => {\r\n    axios.get(`${apiUrl}/statistics/total-users`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        setTotalUsers(res.data.data);\r\n      })\r\n      .catch(err => {\r\n        return 0;\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadTotalUsers();\r\n  }, []);\r\n\r\n  return (\r\n    <MDBCol xl=\"3\" md=\"6\" className=\"mb-4\">\r\n      <MDBCard cascade className=\"cascading-admin-card\">\r\n        <div className=\"admin-up\">\r\n          <MDBIcon icon=\"users\" className=\"teal accent-4\" />\r\n          <div className=\"data\">\r\n            <p>Total Users</p>\r\n            <h5 className=\"font-weight-bold dark-grey-text\">\r\n              {totalUsers || <Skeleton />}\r\n            </h5>\r\n          </div>\r\n        </div>\r\n        <MDBCardBody cascade>\r\n          <MDBProgress\r\n            value={100}\r\n            barClassName=\"teal accent-3\"\r\n            height=\"6px\"\r\n            wrapperStyle={{ opacity: \".7\" }}\r\n            className=\"mb-3\"\r\n          />\r\n          <p className=\"card-text\">Total Number of registered users</p>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBCol>\r\n  );\r\n}\r\n\r\nexport default Users;","export const money = new Intl.NumberFormat('en-US')\r\n\r\nexport const formatShortNumber = (num) => {\r\n  if (Math.abs(num) > 999999999) return Math.sign(num) * ((Math.abs(num) / 1000000000).toFixed(1)) + 'b';\r\n  if (Math.abs(num) > 999999) return Math.sign(num) * ((Math.abs(num) / 1000000).toFixed(1)) + 'm';\r\n  if (Math.abs(num) > 999) return Math.sign(num) * ((Math.abs(num) / 1000).toFixed(1)) + 'k';\r\n  return Math.sign(num) * Math.abs(num);\r\n}","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  MDBCol,\r\n  MDBCardBody,\r\n  MDBCard,\r\n  MDBRow,\r\n  MDBCardHeader\r\n} from \"mdbreact\"\r\nimport { formatShortNumber } from \"../../functions\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst AppStatistics = () => {\r\n  const [signupsToday, setSignupsToday] = useState(0);\r\n  const [signupsLastWeek, setSignupsLastWeek] = useState(0);\r\n  const [signupsLastMonth, setSignupsLastMonth] = useState(0);\r\n  const [totalSignups, setTotalSignups] = useState(0);\r\n\r\n  const [commissionsToday, setCommissionsToday] = useState(0);\r\n  const [commissionsLastWeek, setCommissionsLastWeek] = useState(0);\r\n  const [commissionsLastMonth, setCommissionsLastMonth] = useState(0);\r\n  const [totalCommissions, setTotalCommissions] = useState(0);\r\n\r\n  const [transactionsToday, setTransactionsToday] = useState(0);\r\n  const [transactionsLastWeek, setTransactionsLastWeek] = useState(0);\r\n  const [transactionsLastMonth, setTransactionsLastMonth] = useState(0);\r\n  const [totalTransactions, setTotalTransactions] = useState(0);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n\r\n  const getSignups = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/statistics/signups`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        setSignupsToday(res.data.data.today);\r\n        setSignupsLastWeek(res.data.data.lastWeek);\r\n        setSignupsLastMonth(res.data.data.lastMonth);\r\n        setTotalSignups(res.data.data.total);\r\n        setLoading(false);\r\n      })\r\n      .catch(err => {\r\n        return 0;\r\n      })\r\n  }\r\n\r\n\r\n  const getCommissions = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/statistics/commissions-by-date`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        setCommissionsToday(res.data.data.today);\r\n        setCommissionsLastWeek(res.data.data.lastWeek);\r\n        setCommissionsLastMonth(res.data.data.lastMonth);\r\n        setTotalCommissions(res.data.data.total);\r\n        setLoading(false);\r\n      })\r\n      .catch(err => {\r\n        return 0;\r\n      })\r\n  }\r\n\r\n  const getTransactions = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/statistics/transactions-by-date`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        setTransactionsToday(res.data.data.today);\r\n        setTransactionsLastWeek(res.data.data.lastWeek);\r\n        setTransactionsLastMonth(res.data.data.lastMonth);\r\n        setTotalTransactions(res.data.data.total);\r\n        setLoading(false);\r\n      })\r\n      .catch(err => {\r\n        return 0;\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    getSignups();\r\n    getCommissions();\r\n    getTransactions();\r\n  }, []);\r\n\r\n  return (\r\n    <MDBCol lg=\"6\" md=\"12\">\r\n      <MDBCard className=\"mb-4\">\r\n        <MDBCardHeader className=\"teal accent-4 text-white\">\r\n          App Statistics\r\n        </MDBCardHeader>\r\n        <MDBCardBody>\r\n          <MDBRow className=\"mb-1\">\r\n            <MDBCol lg=\"4\" md=\"4\" sm=\"6\">\r\n              <small className=\"grey-text\">Total Signups</small>\r\n              {loading ? <Skeleton /> : <h5>{formatShortNumber(totalSignups)}</h5>}\r\n            </MDBCol>\r\n            <MDBCol lg=\"2\" md=\"2\" sm=\"6\">\r\n              <small className=\"grey-text\">Today</small>\r\n              {loading ? <Skeleton /> : <h5>{formatShortNumber(signupsToday)}</h5>}\r\n            </MDBCol>\r\n            <MDBCol lg=\"3\" md=\"3\" sm=\"6\">\r\n              <small className=\"grey-text\">Last week</small>\r\n              {loading ? <Skeleton /> : <h5>{formatShortNumber(signupsLastWeek)}</h5>}\r\n            </MDBCol>\r\n            <MDBCol lg=\"3\" md=\"3\" sm=\"6\">\r\n              <small className=\"grey-text\">Last Month</small>\r\n              {loading ? <Skeleton /> : <h5>{formatShortNumber(signupsLastMonth)}</h5>}\r\n            </MDBCol>\r\n          </MDBRow>\r\n\r\n          {/* <MDBRow className=\"mb-1\">\r\n            <MDBCol lg=\"4\" md=\"4\" sm=\"6\">\r\n              <small className=\"grey-text\">Available Warehouse</small>\r\n              <h5>{formatShortNumber(95)}</h5>\r\n            </MDBCol>\r\n            <MDBCol lg=\"2\" md=\"2\" sm=\"6\">\r\n              <small className=\"grey-text\">Today</small>\r\n              <h5>{formatShortNumber(95)}</h5>\r\n            </MDBCol>\r\n            <MDBCol lg=\"3\" md=\"3\" sm=\"6\">\r\n              <small className=\"grey-text\">Last week</small>\r\n              <h5>{formatShortNumber(127)}</h5>\r\n            </MDBCol>\r\n            <MDBCol lg=\"3\" md=\"3\" sm=\"6\">\r\n              <small className=\"grey-text\">Last Month</small>\r\n              <h5>{formatShortNumber(374)}</h5>\r\n            </MDBCol>\r\n          </MDBRow> */}\r\n\r\n          <MDBRow className=\"mb-1\">\r\n            <MDBCol lg=\"4\" md=\"4\" sm=\"6\">\r\n              <small className=\"grey-text\">\r\n                Total Commissions(&#8358;)\r\n                    </small>\r\n              {loading ? <Skeleton /> : <h5>{formatShortNumber(totalCommissions)}</h5>}\r\n            </MDBCol>\r\n            <MDBCol lg=\"2\" md=\"2\" sm=\"6\">\r\n              <small className=\"grey-text\">Today</small>\r\n              {loading ? <Skeleton /> : <h5>{formatShortNumber(commissionsToday)}</h5>}\r\n            </MDBCol>\r\n            <MDBCol lg=\"3\" md=\"3\" sm=\"6\">\r\n              <small className=\"grey-text\">Last week</small>\r\n              {loading ? <Skeleton /> : <h5>{formatShortNumber(commissionsLastWeek)}</h5>}\r\n            </MDBCol>\r\n            <MDBCol lg=\"3\" md=\"3\" sm=\"6\">\r\n              <small className=\"grey-text\">Last Month</small>\r\n              {loading ? <Skeleton /> : <h5>{formatShortNumber(commissionsLastMonth)}</h5>}\r\n            </MDBCol>\r\n          </MDBRow>\r\n\r\n          <MDBRow className=\"mb-1\">\r\n            <MDBCol lg=\"4\" md=\"4\" sm=\"6\">\r\n              <small className=\"grey-text\">\r\n                Total Transactions(&#8358;)\r\n              </small>{loading ? <Skeleton /> : <h5>{formatShortNumber(totalTransactions)}</h5>}\r\n            </MDBCol>\r\n            <MDBCol lg=\"2\" md=\"2\" sm=\"6\">\r\n              <small className=\"grey-text\">Today</small>\r\n              {loading ? <Skeleton /> : <h5>{formatShortNumber(transactionsToday)}</h5>}\r\n            </MDBCol>\r\n            <MDBCol lg=\"3\" md=\"3\" sm=\"6\">\r\n              <small className=\"grey-text\">Last week</small>\r\n              {loading ? <Skeleton /> : <h5>{formatShortNumber(transactionsLastWeek)}</h5>}\r\n            </MDBCol>\r\n            <MDBCol lg=\"3\" md=\"3\" sm=\"6\">\r\n              <small className=\"grey-text\">Last Month</small>\r\n              {loading ? <Skeleton /> : <h5>{formatShortNumber(transactionsLastMonth)}</h5>}\r\n            </MDBCol>\r\n          </MDBRow>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBCol>\r\n  );\r\n}\r\n\r\nexport default AppStatistics;","import React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport {\r\n  MDBCol,\r\n  MDBCardBody,\r\n  MDBCard,\r\n  MDBIcon,\r\n  MDBProgress\r\n} from \"mdbreact\"\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst AvailableWarehouse = () => {\r\n  const [totalCommissions, setTotalCommissions] = useState(0);\r\n\r\n  const loadTotalCommissions = async () => {\r\n    axios.get(`${apiUrl}/statistics/total-available-warehouses`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        setTotalCommissions(res.data.data);\r\n      })\r\n      .catch(err => {\r\n        return 0;\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadTotalCommissions();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <MDBCol xl=\"3\" md=\"6\" className=\"mb-4\">\r\n      <MDBCard cascade className=\"cascading-admin-card\">\r\n        <div className=\"admin-up\">\r\n          <MDBIcon icon=\"home\" className=\"teal accent-4\" />\r\n          <div className=\"data\">\r\n            <p>Available Warehouse</p>\r\n            <h5 className=\"font-weight-bold dark-grey-text\">\r\n              {totalCommissions || <Skeleton />}\r\n            </h5>\r\n          </div>\r\n        </div>\r\n        <MDBCardBody cascade>\r\n          <MDBProgress\r\n            value={100}\r\n            barClassName=\"teal accent-3\"\r\n            height=\"6px\"\r\n            wrapperStyle={{ opacity: \".7\" }}\r\n            className=\"mb-3\"\r\n          />\r\n          <p className=\"card-text\">Total available Warehouses</p>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBCol>\r\n  );\r\n}\r\n\r\nexport default AvailableWarehouse;","import React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport {\r\n  MDBCol,\r\n  MDBCardBody,\r\n  MDBCard,\r\n  MDBIcon,\r\n  MDBProgress\r\n} from \"mdbreact\"\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { money } from \"../../functions\";\r\n\r\nconst Commissions = () => {\r\n  const [totalCommissions, setTotalCommissions] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const loadTotalCommissions = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/statistics/total-commissions`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        setLoading(false);\r\n        setTotalCommissions(res.data.data);\r\n      })\r\n      .catch(err => {\r\n        return 0;\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadTotalCommissions();\r\n  }, []);\r\n\r\n  return (\r\n    <MDBCol xl=\"3\" md=\"6\" className=\"mb-4\">\r\n      <MDBCard cascade className=\"cascading-admin-card\">\r\n        <div className=\"admin-up\">\r\n          <MDBIcon icon=\"dollar-sign\" className=\"teal accent-4\" />\r\n          <div className=\"data\">\r\n            <p>Total Commissions</p>\r\n            <h5 className=\"font-weight-bold dark-grey-text\">\r\n              {loading ? <Skeleton /> : <>&#8358; {money.format(totalCommissions)}</>}\r\n           </h5>\r\n          </div>\r\n        </div>\r\n        <MDBCardBody cascade>\r\n          <MDBProgress\r\n            value={100}\r\n            barClassName=\"teal accent-3\"\r\n            height=\"6px\"\r\n            wrapperStyle={{ opacity: \".7\" }}\r\n            className=\"mb-3\"\r\n          />\r\n          <p className=\"card-text\">Total commissions earned</p>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBCol>\r\n  );\r\n}\r\n\r\nexport default Commissions;","import React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport {\r\n  MDBCol,\r\n  MDBCardBody,\r\n  MDBCard,\r\n  MDBIcon,\r\n  MDBProgress\r\n} from \"mdbreact\"\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst Transactions = () => {\r\n  const [totalTransactions, setTotalTransactions] = useState(0);\r\n\r\n  const loadTotalTransactions = async () => {\r\n    axios.get(`${apiUrl}/statistics/total-transactions`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        setTotalTransactions(res.data.data);\r\n      })\r\n      .catch(err => {\r\n        return 0;\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadTotalTransactions();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <MDBCol xl=\"3\" md=\"6\" className=\"mb-4\">\r\n      <MDBCard cascade className=\"cascading-admin-card\">\r\n        <div className=\"admin-up\">\r\n          <MDBIcon icon=\"exchange-alt\" className=\"teal accent-4\" />\r\n          <div className=\"data\">\r\n            <p>Total Transactions</p>\r\n            <h5 className=\"font-weight-bold dark-grey-text\">\r\n              {totalTransactions || <Skeleton />}\r\n              {/* {loading && <div className=\"spinner-border spinner-border-sm teal-text\" role=\"status\" ><span className=\"sr-only\">Loading...</span></div >} */}\r\n            </h5>\r\n          </div>\r\n        </div>\r\n        <MDBCardBody cascade>\r\n          <MDBProgress\r\n            value={100}\r\n            barClassName=\"teal accent-3\"\r\n            height=\"6px\"\r\n            wrapperStyle={{ opacity: \".7\" }}\r\n            className=\"mb-3\"\r\n          />\r\n          <p className=\"card-text\">Total number of transactions</p>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBCol>\r\n  );\r\n}\r\n\r\nexport default Transactions;","import React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport {\r\n  MDBCol,\r\n  MDBCardBody,\r\n  MDBCard,\r\n  MDBCardHeader\r\n} from \"mdbreact\"\r\nimport { Doughnut } from \"react-chartjs-2\";\r\n\r\nconst UsersByOs = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [android, setAndroid] = useState(0);\r\n  const [ios, setIos] = useState(0);\r\n\r\n  const loadUsersOs = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/statistics/users-os`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        setAndroid(res.data.data.android);\r\n        setIos(res.data.data.ios);\r\n        setLoading(false);\r\n      })\r\n      .catch(err => {\r\n        return 0;\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadUsersOs();\r\n  }, []);\r\n\r\n\r\n  const mobileChartData = {\r\n    labels: [\"Android\", \"IOS\"],\r\n    datasets: [\r\n      {\r\n        data: [android, ios],\r\n        backgroundColor: [\"#F7464A\", \"#46BFBD\"],\r\n        hoverBackgroundColor: [\"#FF5A5E\", \"#5AD3D1\"]\r\n      }\r\n    ]\r\n  };\r\n\r\n  const mobileChartOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: true,\r\n    legend: {\r\n      labels: {\r\n        fontColor: \"black\"\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MDBCol lg=\"6\" md=\"12\">\r\n      <MDBCard className=\"mb-4\">\r\n        <MDBCardHeader className=\"teal accent-4 text-white\">\r\n          Users By OS\r\n        </MDBCardHeader>\r\n        <MDBCardBody>\r\n          <Doughnut\r\n            data={mobileChartData}\r\n            options={mobileChartOptions}\r\n            height={103}\r\n          />\r\n          {loading && <div className=\"spinner-border spinner-border-lg teal-text\" role=\"status\" ><span className=\"sr-only\">Loading...</span></div>}\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBCol>\r\n  );\r\n}\r\n\r\nexport default UsersByOs;","import React from \"react\";\r\nimport Users from \"./Statistics/Users\";\r\nimport AppStatistics from \"./Statistics/AppStatistics\";\r\nimport AvailableWarehouseGraph from \"./Statistics/AvailableWarehouseGraph\";\r\nimport AvailableWarehouse from \"./Statistics/AvailableWarehouse\";\r\nimport Commissions from \"./Statistics/Commissions\";\r\nimport Transactions from \"./Statistics/Transactions\";\r\nimport TransactionsGraph from \"./Statistics/TransactionsGraph\";\r\nimport UsersByOs from \"./Statistics/UsersByOs\";\r\nimport UsersGraph from \"./Statistics/UsersGraph\";\r\n\r\nimport {\r\n  MDBContainer,\r\n  MDBRow\r\n} from \"mdbreact\";\r\n\r\nconst LineOptions = {\r\n  responsive: true,\r\n  maintainAspectRatio: true,\r\n  legend: {\r\n    labels: {\r\n      fontColor: 'white',\r\n      fontSize: 18\r\n    }\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false,\r\n          color: 'rgba(255, 255, 255, 0.2)'\r\n        },\r\n        ticks: {\r\n          fontColor: '#fff',\r\n          fontSize: 10\r\n        }\r\n      }\r\n    ],\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: true,\r\n          color: 'rgba(255, 255, 255, 0.2)'\r\n        },\r\n        ticks: {\r\n          fontColor: '#fff'\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nconst Dashboard = (props) => {\r\n  return (\r\n    <MDBContainer fluid className=\"mb-5\">\r\n      <section>\r\n        <MDBRow>\r\n          <Users />\r\n          <Transactions />\r\n          <Commissions />\r\n          <AvailableWarehouse />\r\n        </MDBRow>\r\n      </section >\r\n\r\n      <section>\r\n        <MDBRow>\r\n          <AppStatistics />\r\n          <UsersByOs />\r\n          {/* <TransactionsGraph LineOptions={LineOptions} />\r\n          <AvailableWarehouseGraph LineOptions={LineOptions} />\r\n          <UsersGraph LineOptions={LineOptions} /> */}\r\n        </MDBRow>\r\n      </section>\r\n    </MDBContainer >\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nimport {\r\n  MDBContainer,\r\n  MDBCol,\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBIcon,\r\n  MDBInput,\r\n  MDBSelect,\r\n  MDBSelectOptions,\r\n  MDBSelectInput,\r\n  MDBSelectOption,\r\n  MDBBtn,\r\n  MDBRow\r\n} from \"mdbreact\";\r\n\r\nconst EmailNotifications = () => {\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCol className='mb-4'>\r\n        <MDBCard col=\"3\">\r\n          <MDBCardBody>\r\n            <div className='form-header teal accent-4'>\r\n              <h3>\r\n                <MDBIcon icon='envelope' /> Send An Email:\r\n              </h3>\r\n            </div>\r\n\r\n            <MDBInput label='Subject' />\r\n            <MDBRow>\r\n              <MDBCol>\r\n                <MDBSelect label=\"To\" >\r\n                  <MDBSelectInput />\r\n                  <MDBSelectOptions>\r\n                    <MDBSelectOption disabled>Select Receipient</MDBSelectOption>\r\n                    <MDBSelectOption value=\"1\">All Users</MDBSelectOption>\r\n                    <MDBSelectOption value=\"2\">Banned Users</MDBSelectOption>\r\n                    <MDBSelectOption value=\"3\">Select Users</MDBSelectOption>\r\n                  </MDBSelectOptions>\r\n                </MDBSelect>\r\n              </MDBCol>\r\n              <MDBCol>\r\n                <MDBSelect multiple label=\"If Select Users\" >\r\n                  <MDBSelectInput />\r\n                  <MDBSelectOptions>\r\n                    <MDBSelectOption disabled>Select  Users</MDBSelectOption>\r\n                    <MDBSelectOption value=\"1\">email1@email.com</MDBSelectOption>\r\n                    <MDBSelectOption value=\"2\">email2@email.com</MDBSelectOption>\r\n                    <MDBSelectOption value=\"3\">email3@email.com</MDBSelectOption>\r\n                  </MDBSelectOptions>\r\n                </MDBSelect>\r\n              </MDBCol>\r\n            </MDBRow>\r\n            <MDBInput\r\n              type='textarea'\r\n              icon='pencil-alt'\r\n              iconClass='grey-text'\r\n              label='Message'\r\n            />\r\n            <div className='text-center'>\r\n              <MDBBtn color='green' className=\"teal \">SEND</MDBBtn>\r\n            </div>\r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </MDBCol>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default EmailNotifications;\r\n","/*\r\n* A Page that displays the users information including; Listings Log,\r\n* transactions Log, and other necessary information. \r\n*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../config\";\r\nimport axios from \"axios\";\r\nimport {\r\n  MDBContainer,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBCard,\r\n  MDBCardTitle,\r\n  MDBCardBody,\r\n  MDBBadge,\r\n  MDBDataTable,\r\n  MDBCardHeader\r\n} from 'mdbreact';\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport moment from \"moment\";\r\nimport { money } from \"../functions\";\r\n\r\nconst SingleUser = ({ match }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const loadUser = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/users/${match.params.id}`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        setUser(res.data.data)\r\n        setLoading(false);\r\n      })\r\n      .catch(err => {\r\n        setLoading(null);\r\n        return [];\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadUser()\r\n  }, [])\r\n\r\n\r\n\r\n  const transactions = {\r\n    columns: [\r\n      {\r\n        label: \"S/N\",\r\n        field: \"sn\",\r\n      },\r\n      {\r\n        label: \"Transaction ID\",\r\n        field: \"transactionId\",\r\n      },\r\n      {\r\n        label: \"Type\",\r\n        field: \"type\",\r\n      },\r\n      {\r\n        label: \"Description\",\r\n        field: \"desc\",\r\n      },\r\n      {\r\n        label: \"Commission\",\r\n        field: \"commission\",\r\n      },\r\n      {\r\n        label: \"Status\",\r\n        field: \"status\",\r\n      },\r\n      {\r\n        label: \"Date\",\r\n        field: \"date\",\r\n      }\r\n    ],\r\n    rows: user ? user.transactions.map(tr => {\r\n      let sn = user.transactions.indexOf(tr);\r\n      const row = {\r\n        sn: sn + 1,\r\n        transactionId: tr.id,\r\n        type: tr.type,\r\n        desc: tr.description,\r\n        commission: <>&#8358; {money.format(tr.fees)} </>,\r\n        status: tr.status === 2 ? <MDBBadge color=\"success\">Success</MDBBadge> : <MDBBadge className=\"danger-color\">Failed</MDBBadge>,\r\n        date: moment(tr.createdAt).format('L')\r\n      }\r\n      return row;\r\n    }) : []\r\n  };\r\n\r\n\r\n\r\n  const listings = {\r\n    columns: [\r\n      {\r\n        label: \"S/N\",\r\n        field: \"sn\",\r\n      },\r\n      {\r\n        label: \"Listing ID\",\r\n        field: \"id\"\r\n      },\r\n      {\r\n        label: \"Name\",\r\n        field: \"name\",\r\n      },\r\n      {\r\n        label: \"Description\",\r\n        field: \"description\",\r\n      },\r\n      {\r\n        label: <span>Price &#8358;</span>,\r\n        field: \"price\",\r\n      },\r\n      {\r\n        label: \"Discount\",\r\n        field: \"discount\",\r\n      }\r\n    ],\r\n    rows: user ? user.listings.map(listing => {\r\n      let sn = user.listings.indexOf(listing);\r\n      const row = {\r\n        sn: sn + 1,\r\n        id: listing.id,\r\n        name: listing.name,\r\n        description: listing.description,\r\n        price: <> &#8358; {money.format(parseInt(listing.price))} </>,\r\n        discount: <> &#8358; {money.format(parseInt(listing.discount))} </>\r\n      }\r\n      return row;\r\n    }) : []\r\n  };\r\n\r\n  const ratingHistory = {\r\n    columns: [\r\n      {\r\n        label: \"S/N\",\r\n        field: \"sn\",\r\n      },\r\n      {\r\n        label: \"Rating ID\",\r\n        field: \"ratingId\"\r\n      },\r\n      {\r\n        label: \"Rate\",\r\n        field: \"rate\",\r\n      },\r\n      {\r\n        label: \"User\",\r\n        field: \"user\",\r\n      },\r\n      {\r\n        label: \"Listing\",\r\n        field: \"listingId\",\r\n      }\r\n    ],\r\n    rows: user ? user.ratings.map(rating => {\r\n      let sn = user.ratings.indexOf(rating);\r\n      const row = {\r\n        sn: sn + 1,\r\n        listingId: rating.listingId,\r\n        rate: rating.rate,\r\n        ratingId: rating.ratingId,\r\n        user: rating.userId\r\n      }\r\n      return row;\r\n    }) : []\r\n  };\r\n\r\n  const ErrorLoading = () => {\r\n    return (\r\n      <MDBContainer className=\"d-flex justify-content-center\">\r\n        <div className=\"mt-5\">\r\n          <h1>NETWORK ERROR!</h1><br />\r\n          <p>Please Check your Internet and reload the page.</p>\r\n        </div>\r\n      </MDBContainer>\r\n    );\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div id='profile-ex' className='mb-5'>\r\n        <MDBContainer fluid>\r\n          <MDBRow>\r\n            <MDBCol lg='4' md='12'>\r\n              <MDBCard className='profile-card text-center mb-4'>\r\n                <MDBCardHeader className=\"teal accent-4 text-white\">\r\n                  <Skeleton />\r\n                </MDBCardHeader>\r\n                <MDBCardBody>\r\n                  <Skeleton count={4} />\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n              <MDBCard className='mb-4'>\r\n                <MDBCardHeader className=\"teal accent-4 text-white\">\r\n                  <Skeleton />\r\n                </MDBCardHeader>\r\n                <MDBCardBody>\r\n                  <Skeleton count={4} />\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n            </MDBCol>\r\n            <MDBCol lg='8' md='12' className='text-center'>\r\n              <MDBCard className=\"mb-4\">\r\n                <MDBCardHeader className=\"teal accent-4 text-white\">\r\n                  <Skeleton />\r\n                </MDBCardHeader>\r\n                <MDBCardBody>\r\n                  <Skeleton count={8} />\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n              <MDBCard className=\"mb-4\">\r\n                <MDBCardHeader className=\"teal accent-4 text-white\">\r\n                  <Skeleton />\r\n                </MDBCardHeader>\r\n                <MDBCardBody>\r\n                  <Skeleton count={8} />\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n              <MDBCard className=\"mb-4\">\r\n                <MDBCardHeader className=\"teal accent-4 text-white\">\r\n                  <Skeleton />\r\n                </MDBCardHeader>\r\n                <MDBCardBody>\r\n                  <Skeleton count={8} />\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n            </MDBCol>\r\n          </MDBRow>\r\n        </MDBContainer>\r\n      </div>\r\n    );\r\n  } else if (loading === null) {\r\n    return <ErrorLoading />\r\n  } else {\r\n    return (\r\n      <div id='profile-ex' className='mb-5'>\r\n        <MDBContainer fluid>\r\n          <MDBRow>\r\n            <MDBCol lg='4' md='12'>\r\n              <MDBCard className='profile-card text-center mb-4'>\r\n                <MDBCardBody>\r\n                  <MDBCardTitle>\r\n                    <strong>{user.firstName} {user.lastName}</strong>\r\n                  </MDBCardTitle>\r\n                  <span>\r\n                    <span className=\"teal-text\">{user.email}</span>\r\n                    {' | '}\r\n                    <span className=\"teal-text\">{user.phoneNumber}</span>\r\n                  </span>\r\n                  <ul className='list-unstyled pt-4 text-left'>\r\n\r\n                    <hr />\r\n                    <li>\r\n                      <p>\r\n                        Date of Birth{' '}\r\n                        <span className='float-right'>\r\n                          {moment(parseInt(user.dob)).format('L')}\r\n                        </span>\r\n                      </p>\r\n                    </li>\r\n                    <hr />\r\n                    <li>\r\n                      <p>\r\n                        Available Balance (&#8358;){' '}\r\n                        <span className='float-right'>\r\n                          {money.format(user.wallet.availableBalance)}\r\n                        </span>\r\n                      </p>\r\n                    </li>\r\n                    <hr />\r\n                    <li>\r\n                      <p>\r\n                        Ledger Balance (&#8358;){' '}\r\n                        <span className='float-right'>\r\n                          {money.format(user.wallet.ledgerBalance)}\r\n                        </span>\r\n                      </p>\r\n                    </li>\r\n                    <hr />\r\n                  </ul>\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n\r\n\r\n              <MDBCard className='mb-4'>\r\n                <MDBCardBody>\r\n                  <h5 className='text-center mb-4'>\r\n                    <strong>{user.firstName}'s Statistics </strong>\r\n                  </h5>\r\n                  <ul className='list-unstyled pt-4'>\r\n                    <li>\r\n                      <p>\r\n                        Total Listings{' '}\r\n                        <MDBBadge className='teal accent-4 float-right'>\r\n                          {user.listings.length}\r\n                        </MDBBadge>\r\n                      </p>\r\n                    </li>\r\n                    <hr />\r\n                    <li>\r\n                      <p>\r\n                        Total Transactions{' '}\r\n                        <MDBBadge className='teal accent-4 float-right'>\r\n                          {user.transactions.length}\r\n                        </MDBBadge>\r\n                      </p>\r\n                    </li>\r\n                  </ul>\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n            </MDBCol>\r\n            <MDBCol lg='8' md='12' className='text-center'>\r\n              <MDBCard className=\"mb-4\">\r\n                <MDBCardHeader className=\"teal accent-4 text-white\">\r\n                  {user.firstName}'s Transactions Log\r\n                </MDBCardHeader>\r\n                <MDBCardBody>\r\n                  <MDBDataTable striped responsive bordered small hover data={transactions} />\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n\r\n              <MDBCard className=\"mb-4\">\r\n                <MDBCardHeader className=\"teal accent-4 text-white\">\r\n                  {user.firstName}'s Listings Log\r\n                </MDBCardHeader>\r\n                <MDBCardBody>\r\n                  <MDBDataTable striped responsive bordered small hover data={listings} />\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n\r\n              <MDBCard className=\"mb-4\">\r\n                <MDBCardHeader className=\"teal accent-4 text-white\">\r\n                  {user.firstName}'s Rating History\r\n                </MDBCardHeader>\r\n                <MDBCardBody>\r\n                  <MDBDataTable striped responsive bordered small hover data={ratingHistory} />\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n\r\n            </MDBCol>\r\n          </MDBRow>\r\n        </MDBContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SingleUser;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBContainer,\r\n  MDBDataTable,\r\n  MDBView,\r\n  MDBBadge\r\n} from \"mdbreact\";\r\nimport moment from \"moment\";\r\n\r\nconst DispatchOrderLog = () => {\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [orders, setOrders] = useState([]);\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"S/N\",\r\n        field: \"sn\",\r\n      },\r\n      {\r\n        label: \"Order ID\",\r\n        field: \"id\",\r\n      },\r\n      {\r\n        label: \"Agent ID Number\",\r\n        field: \"agentIdNo\",\r\n      },\r\n      {\r\n        label: \"Agent Name\",\r\n        field: \"agentName\",\r\n      },\r\n      {\r\n        label: \"Agent Phone\",\r\n        field: \"agentPhone\",\r\n      },\r\n      {\r\n        label: \"Agent Identification\",\r\n        field: \"agentIdentification\",\r\n      },\r\n      {\r\n        label: \"Pickup Date From\",\r\n        field: \"pickupDateFrom\",\r\n      },\r\n      {\r\n        label: \"Pickup Date To\",\r\n        field: \"pickupDateTo\",\r\n      },\r\n      {\r\n        label: \"Order Status\",\r\n        field: \"status\",\r\n      },\r\n    ],\r\n    rows: !loading ? orders : [{\r\n      sn: <Skeleton />,\r\n      id: <Skeleton />,\r\n      agentName: <Skeleton />,\r\n      agentPhone: <Skeleton />,\r\n      agentIdNo: <Skeleton />,\r\n      agentIdentification: <Skeleton />,\r\n      pickupDateFrom: <Skeleton />,\r\n      pickupDateTo: <Skeleton />,\r\n      status: <Skeleton />\r\n    }]\r\n  };\r\n\r\n  const loadOrders = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/dispatch-orders`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        let sn = orders.length;\r\n        const rows = res.data.data.map(order => {\r\n          const row = {\r\n            sn: sn + 1,\r\n            id: order.id,\r\n            agentIdNo: order.pickupAgentIdNumber,\r\n            agentName: order.pickupAgentName,\r\n            agentPhone: order.pickupAgentPhone,\r\n            agentIdentification: order.pickupAgentIdentification,\r\n            pickupDateFrom: moment(parseInt(order.pickupDate.min)).format('L'),\r\n            pickupDateTo: moment(parseInt(order.pickupDate.max)).format('L'),\r\n            status: order.status === 1 ? <MDBBadge color=\"primary\">Sent</MDBBadge> : order.status === 2 ? <MDBBadge className=\"warning-color\">Released</MDBBadge> : order.status === 3 ? <MDBBadge className=\"success-color\">Dispatched</MDBBadge> : <MDBBadge className=\"danger-color\">Rejected</MDBBadge>,\r\n          };\r\n          sn++;\r\n          return row;\r\n        })\r\n        setLoading(false);\r\n        setOrders(rows);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        return [];\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadOrders();\r\n  }, []);\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCard>\r\n        <MDBCard narrow className=\"z-depth-0\">\r\n          <MDBView\r\n            cascade\r\n            className=\"teal accent-4 narrower py-2 my-3 d-flex justify-content-between align-items-center\"\r\n          >\r\n            <div className=\"text-left\"></div>\r\n            <span className=\"white-text text-bold mx-3\">\r\n              Dispatch Order Log\r\n            </span>\r\n            <div className=\"text-right\"></div>\r\n          </MDBView>\r\n        </MDBCard>\r\n        <MDBCardBody>\r\n          <MDBDataTable striped responsive bordered small hover data={data} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default DispatchOrderLog;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBContainer,\r\n  MDBDataTable,\r\n  MDBView,\r\n  MDBBadge\r\n} from \"mdbreact\";\r\nconst RejectedStockLog = () => {\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [stocks, setStocks] = useState([]);\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"S/N\",\r\n        field: \"sn\",\r\n      },\r\n      {\r\n        label: \"Stock ID\",\r\n        field: \"id\",\r\n      },\r\n      {\r\n        label: \"Stock Type\",\r\n        field: \"type\",\r\n      },\r\n      {\r\n        label: \"Products\",\r\n        field: \"products\",\r\n      },\r\n      {\r\n        label: \"Requisitioin\",\r\n        field: \"requisition\",\r\n      },\r\n      {\r\n        label: \"Stock Dispatch\",\r\n        field: \"dispatch\",\r\n      },\r\n      {\r\n        label: \"Status\",\r\n        field: \"status\",\r\n      }\r\n    ],\r\n    rows: !loading ? stocks : [{\r\n      sn: <Skeleton />,\r\n      id: <Skeleton />,\r\n      type: <Skeleton />,\r\n      products: <Skeleton />,\r\n      requisition: <Skeleton />,\r\n      diapatch: <Skeleton />,\r\n      status: <Skeleton />\r\n    }]\r\n  };\r\n\r\n\r\n  const loadStocks = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/stocks`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        let sn = stocks.length;\r\n        const rows = res.data.data.map(stock => {\r\n          if(stock.status === 4) {\r\n          const row = {\r\n            sn: sn + 1,\r\n            id: stock.id,\r\n            type: stock.type,\r\n            products: stock.products.length,\r\n            dispatch: stock.dispatch.id,\r\n            requisition: stock.requisition.id,\r\n            status: <MDBBadge className=\"danger-color\">Rejected</MDBBadge>,\r\n          };\r\n          sn++;\r\n          return row;\r\n        }\r\n        return null;\r\n        })\r\n        setLoading(false);\r\n        setStocks(rows);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        return [];\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadStocks();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCard>\r\n        <MDBCard narrow className=\"z-depth-0\">\r\n          <MDBView\r\n            cascade\r\n            className=\"teal accent-4 narrower py-2 my-3 d-flex justify-content-between align-items-center\"\r\n          >\r\n            <div className=\"text-left\"></div>\r\n            <span className=\"white-text text-bold mx-3\">\r\n              Rejected Stock Log\r\n            </span>\r\n            <div className=\"text-right\"></div>\r\n          </MDBView>\r\n        </MDBCard>\r\n        <MDBCardBody>\r\n          <MDBDataTable striped responsive bordered small hover data={data} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default RejectedStockLog;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBContainer,\r\n  MDBDataTable,\r\n  MDBView,\r\n  MDBBadge\r\n} from \"mdbreact\";\r\nconst StockReceiptLog = () => {\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [stocks, setStocks] = useState([]);\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"S/N\",\r\n        field: \"sn\",\r\n      },\r\n      {\r\n        label: \"Stock ID\",\r\n        field: \"id\",\r\n      },\r\n      {\r\n        label: \"Stock Type\",\r\n        field: \"type\",\r\n      },\r\n      {\r\n        label: \"Products\",\r\n        field: \"products\",\r\n      },\r\n      {\r\n        label: \"Requisitioin\",\r\n        field: \"requisition\",\r\n      },\r\n      {\r\n        label: \"Stock Dispatch\",\r\n        field: \"dispatch\",\r\n      },\r\n      {\r\n        label: \"Status\",\r\n        field: \"status\",\r\n      }\r\n    ],\r\n    rows: !loading ? stocks : [{\r\n      sn: <Skeleton />,\r\n      id: <Skeleton />,\r\n      type: <Skeleton />,\r\n      products: <Skeleton />,\r\n      requisition: <Skeleton />,\r\n      diapatch: <Skeleton />,\r\n      status: <Skeleton />\r\n    }]\r\n  };\r\n\r\n\r\n  const loadStocks = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/stocks`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        let sn = stocks.length;\r\n        const rows = res.data.data.map(stock => {\r\n          if(stock.status === 3) {\r\n          const row = {\r\n            sn: sn + 1,\r\n            id: stock.id,\r\n            type: stock.type,\r\n            products: stock.products.length,\r\n            dispatch: stock.dispatch.id,\r\n            requisition: stock.requisition.id,\r\n            status: <MDBBadge className=\"success-color\">Received</MDBBadge>,\r\n          };\r\n          sn++;\r\n          return row;\r\n        }\r\n        return null;\r\n        })\r\n        setLoading(false);\r\n        setStocks(rows);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        return [];\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadStocks();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCard>\r\n        <MDBCard narrow className=\"z-depth-0\">\r\n          <MDBView\r\n            cascade\r\n            className=\"teal accent-4 narrower py-2 my-3 d-flex justify-content-between align-items-center\"\r\n          >\r\n            <div className=\"text-left\"></div>\r\n            <span className=\"white-text text-bold mx-3\">\r\n              Stock Receipt Log\r\n            </span>\r\n            <div className=\"text-right\"></div>\r\n          </MDBView>\r\n        </MDBCard>\r\n        <MDBCardBody>\r\n          <MDBDataTable striped responsive bordered small hover data={data} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default StockReceiptLog;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  MDBBtn,\r\n  MDBContainer,\r\n  MDBCol,\r\n  MDBInput,\r\n  MDBCard,\r\n  MDBCardBody\r\n} from \"mdbreact\";\r\nimport axios from \"axios\";\r\nimport { apiUrl } from \"../../config\";\r\n\r\nconst EditPassword = () => {\r\n\r\n  const [oldPassword, setOldPassword] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [feedback, setFeedback] = useState(null);\r\n  const [success, setSuccess] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleEditpassword = async () => {\r\n    setLoading(true);\r\n    setFeedback(null);\r\n    setSuccess(null);\r\n    if (!oldPassword) {\r\n      setLoading(false);\r\n      return setFeedback(\"Old password is required to reset your password!\")\r\n    }\r\n    if (!newPassword) {\r\n      setLoading(false);\r\n      return setFeedback(\"You must specify a new password!\")\r\n    }\r\n    if (!confirmPassword) {\r\n      setLoading(false);\r\n      return setFeedback(\"Please confirm your password!\")\r\n    }\r\n    if (confirmPassword !== newPassword) {\r\n      setLoading(false);\r\n      return setFeedback(\"Passwords do not match!\")\r\n    }\r\n    setFeedback(null);\r\n    await axios.put(`${apiUrl}/admin-users/update-password`, { email: localStorage.getItem('email'), oldPassword, newPassword }, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        if (res.data.error) {\r\n          setLoading(false);\r\n          return setFeedback(res.data.message);\r\n        }\r\n        setLoading(false);\r\n        setOldPassword('');\r\n        setNewPassword('');\r\n        setConfirmPassword('');\r\n        return setSuccess(\"Password Updated Successfully!\");\r\n      })\r\n      .catch(err => {\r\n        setLoading(false);\r\n        return setFeedback(\"There's a problem reseting your password!\");\r\n      })\r\n  }\r\n\r\n\r\n  return (\r\n    <MDBContainer className=\"d-flex justify-content-center\">\r\n      <MDBCol md='12' lg='5'>\r\n        <MDBCard className=\"mt-2\">\r\n          <MDBCardBody>\r\n            <p className='h5 text-center mb-4'>Reset Password</p>\r\n            <MDBInput\r\n              type=\"password\"\r\n              label='Old Password'\r\n              onChange={(e) => setOldPassword(e.target.value)}\r\n              value={oldPassword}\r\n            />\r\n            <MDBInput\r\n              type='password'\r\n              label='New Password'\r\n              onChange={e => setNewPassword(e.target.value)}\r\n              value={newPassword}\r\n            />\r\n            <MDBInput\r\n              type='password'\r\n              label='Confirm Password'\r\n              onChange={e => setConfirmPassword(e.target.value)}\r\n              value={confirmPassword}\r\n            />\r\n            <div className=\"alert-danger\">\r\n              {feedback && feedback}\r\n            </div>\r\n            <div className=\"alert-success\">\r\n              {success && success}\r\n            </div>\r\n            <div className='text-center'>\r\n              <MDBBtn className=\"teal accent-4\" onClick={() => handleEditpassword()}>RESET {loading && (\r\n                <div className=\"spinner-border spinner-border-sm text-white\" role=\"status\">\r\n                  <span className=\"sr-only\">Loading...</span>\r\n                </div>)}</MDBBtn>\r\n            </div>\r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </MDBCol>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default EditPassword;\r\n","import React from \"react\";\r\n\r\nconst EmailSettings = () => {\r\n  return (\r\n    <div>\r\n      <p>Email Settings</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmailSettings;\r\n","import React from \"react\";\r\n\r\nconst SmsSettings = () => {\r\n  return (\r\n    <div>\r\n      <p>SmsSettings</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SmsSettings;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {\r\n  MDBContainer,\r\n  MDBCol,\r\n  MDBCard,\r\n  MDBInput,\r\n  MDBCardBody,\r\n  MDBBtn,\r\n  MDBSelectInput,\r\n  MDBSelect,\r\n  MDBSelectOption,\r\n  MDBSelectOptions\r\n} from 'mdbreact';\r\n\r\nconst AddNewStaff = () => {\r\n  const [roles, setRoles] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [feedback, setFeedback] = useState(null);\r\n  const [success, setSuccess] = useState(null);\r\n  const [form, setForm] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    phoneNumber: '',\r\n    roleId: '',\r\n    role: '',\r\n    password: ''\r\n  });\r\n  const loadRoles = async () => {\r\n    axios.get(`${apiUrl}/admin-roles`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        const items = res.data.data.map(role => {\r\n          return role;\r\n        })\r\n        setRoles([...items]);\r\n      })\r\n      .catch(err => {\r\n        return [];\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadRoles();\r\n  }, []);\r\n\r\n  const validateEmail = (email) => {\r\n    const exp = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i;\r\n    return exp.test(String(email).toLowerCase());\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    setLoading(true);\r\n    setFeedback(null);\r\n    if (!form.email || !form.phoneNumber || !form.roleId || !form.role || !form.password || !form.firstName || !form.lastName) {\r\n      setLoading(false);\r\n      return setFeedback(\"All fields are required to create a staff.\");\r\n    }\r\n    if (!validateEmail(form.email)) {\r\n      setLoading(false);\r\n      return setFeedback(\"Invalid Email\");\r\n    };\r\n    axios.post(`${apiUrl}/admin-users`, form, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        setLoading(false);\r\n        setForm({\r\n          firstName: '',\r\n          lastName: '',\r\n          email: '',\r\n          phoneNumber: '',\r\n          roleId: '',\r\n          role: '',\r\n          password: ''\r\n        });\r\n        setSuccess(\"Staff Created Successfully!\");\r\n        window.location.href = '/staff/all-staff';\r\n      })\r\n      .catch(err => {\r\n        setLoading(false);\r\n      })\r\n  }\r\n  let cnt = 2;\r\n\r\n  return (\r\n    <MDBContainer className=\"d-flex justify-content-center\">\r\n      <MDBCol lg='5' className='mb-4'>\r\n        <MDBCard>\r\n          <MDBCardBody>\r\n            <div className='form-header teal accent-4'>\r\n              <h3> Add New Staff </h3>\r\n            </div>\r\n            <div className=\"mx-2 alert-danger\">{feedback && feedback}</div>\r\n            <div className=\"mx-2 alert-success\">{success && success}</div>\r\n            <MDBInput label='First Name' value={form.firstName} onChange={(e) => setForm({ ...form, firstName: e.target.value })} />\r\n            <MDBInput label='Last Name' value={form.lastName} onChange={(e) => setForm({ ...form, lastName: e.target.value })} />\r\n            <MDBInput label='Email' value={form.email} type=\"email\" onChange={(e) => setForm({ ...form, email: e.target.value })} />\r\n            <MDBInput label='Phone' value={form.phoneNumber} type=\"number\" onChange={(e) => setForm({ ...form, phoneNumber: e.target.value })} />\r\n            <MDBInput label='Default Password' value={form.password} onChange={(e) => setForm({ ...form, password: e.target.value })} />\r\n            <MDBSelect label=\"Select Role ID\" value={form.roleId} getValue={(val) => setForm({ ...form, roleId: val[0] })}>\r\n              <MDBSelectInput />\r\n              <MDBSelectOptions>\r\n                <MDBSelectOption disabled>Select Role ID</MDBSelectOption>\r\n\r\n                {roles.map(role => {\r\n                  if (roles[0] === role) return null;\r\n                  return <MDBSelectOption key={role.id} value={cnt}>{`${cnt++} - ${role.name}`}</MDBSelectOption>\r\n                })}\r\n              </MDBSelectOptions>\r\n            </MDBSelect>\r\n            <MDBSelect label=\"Select Role\" value={form.role} getValue={(val) => setForm({ ...form, role: val[0] })}>\r\n              <MDBSelectInput />\r\n              <MDBSelectOptions>\r\n                <MDBSelectOption disabled>Select Role</MDBSelectOption>\r\n                {roles.map(role => {\r\n                  if (roles[0] === role) return null;\r\n                  return <MDBSelectOption key={role.id} value={role.id}>{role.name}</MDBSelectOption>\r\n                })}\r\n              </MDBSelectOptions>\r\n            </MDBSelect>\r\n            <div className='text-center'>\r\n              <MDBBtn className='teal accent-4' onClick={() => handleSubmit()}>\r\n                {loading && (\r\n                  <div className=\"spinner-border spinner-border-sm text-white\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                  </div>)}\r\n                  Create\r\n                  </MDBBtn>\r\n            </div>\r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </MDBCol>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default AddNewStaff;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBContainer,\r\n  MDBDataTable,\r\n  MDBView,\r\n  MDBBadge,\r\n  MDBIcon\r\n} from \"mdbreact\";\r\nimport moment from \"moment\";\r\n\r\n\r\nconst AllStaff = () => {\r\n  const [staff, setStaff] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [success, setSuccess] = useState(null);\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"S/N\",\r\n        field: \"sn\"\r\n      },\r\n      {\r\n        label: \"Name\",\r\n        field: \"name\"\r\n      },\r\n      {\r\n        label: \"Email\",\r\n        field: \"email\"\r\n      },\r\n      {\r\n        label: \"Phone\",\r\n        field: \"phone\"\r\n      },\r\n      {\r\n        label: \"Role\",\r\n        field: \"role\"\r\n      },\r\n      {\r\n        label: \"Created At\",\r\n        field: \"createdAt\"\r\n      },\r\n      {\r\n        label: \"Action\",\r\n        field: \"action\"\r\n      }\r\n    ],\r\n    rows: !loading ? staff : [{\r\n      sn: <div className=\"spinner-border spinner-border-sm teal-text\" role=\"status\" ><span className=\"sr-only\">Loading...</span></div >,\r\n      name: <div className=\"spinner-border spinner-border-sm teal-text\" role=\"status\" ><span className=\"sr-only\">Loading...</span></div >,\r\n      email: <div className=\"spinner-border spinner-border-sm teal-text\" role=\"status\" ><span className=\"sr-only\">Loading...</span></div >,\r\n      phone: <div className=\"spinner-border spinner-border-sm teal-text\" role=\"status\" ><span className=\"sr-only\">Loading...</span></div >,\r\n      role: <div className=\"spinner-border spinner-border-sm teal-text\" role=\"status\" ><span className=\"sr-only\">Loading...</span></div >,\r\n      createdAt: <div className=\"spinner-border spinner-border-sm teal-text\" role=\"status\" ><span className=\"sr-only\">Loading...</span></div >,\r\n      action: <div className=\"spinner-border spinner-border-sm teal-text\" role=\"status\" ><span className=\"sr-only\">Loading...</span></div >\r\n    }]\r\n  };\r\n\r\n  const loadUsers = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/admin-users`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        let sn = staff.length;\r\n        const rows = res.data.data.map(user => {\r\n          const row = {\r\n            sn: sn + 1,\r\n            name: `${user.firstName} ${user.lastName}`,\r\n            email: user.email,\r\n            phone: user.phoneNumber,\r\n            role: user.role.name,\r\n            createdAt: moment(parseInt(user.createdAt)).format('L'),\r\n            action: user.roleId !== 1 ? (<div>\r\n              <MDBBadge className=\"primary-color mx-1\" onClick={() => handleEditStaff(user)}><MDBIcon icon=\"edit\" className=\"white-text\" /></MDBBadge>\r\n              <MDBBadge className=\"danger-color\" onClick={() => handleDeleteStaff(user)}><MDBIcon icon=\"trash\" className=\"white-text\" /></MDBBadge>\r\n            </div>) : null\r\n          };\r\n          sn++;\r\n          return row;\r\n        })\r\n        setLoading(false);\r\n        setStaff(rows);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        return [];\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadUsers();\r\n  }, []);\r\n\r\n  const handleDeleteStaff = (user) => {\r\n    if (window.confirm(`Are you sure you want to delete ${user.firstName} as an Admin? \\nNB: This cannot be undone!`)) {\r\n      axios.delete(`${apiUrl}/admin-users/${user.id}`, {\r\n        headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n      })\r\n        .then(res => {\r\n          if (res.data.success) {\r\n            setSuccess(\"Staff deleted successfuly!\");\r\n            window.location.reload();\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        })\r\n    }\r\n  }\r\n  const handleEditStaff = (user) => {\r\n    alert(user.email);\r\n  }\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCard>\r\n        <MDBCard narrow className=\"z-depth-0\">\r\n          <MDBView\r\n            cascade\r\n            className=\"teal accent-4 narrower py-2 my-3 d-flex justify-content-between align-items-center\"\r\n          >\r\n            <div className=\"text-left\"></div>\r\n            <span className=\"white-text text-bold mx-3\">All Staff</span>\r\n            <div className=\"text-right\"></div>\r\n          </MDBView>\r\n          {success && <div className=\"mx-5 alert-success\">{success}</div>}\r\n        </MDBCard>\r\n        <MDBCardBody>\r\n          <MDBDataTable striped responsive bordered small hover data={data} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default AllStaff;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBContainer,\r\n  MDBDataTable,\r\n  MDBView,\r\n  MDBBtn,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBInput,\r\n  MDBIcon,\r\n  MDBBadge\r\n} from \"mdbreact\";\r\nimport moment from \"moment\";\r\n\r\nconst RoleManagement = () => {\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [openEdit, setOpenEdit] = useState(false);\r\n  const [roles, setRoles] = useState([]);\r\n  const [role, setRole] = useState(null);\r\n  const [roleName, setRoleName] = useState('');\r\n  const [feedback, setFeedback] = useState(null);\r\n  const [success, setSuccess] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n\r\n  const toggleModal = () => {\r\n    setOpenModal(!openModal);\r\n  }\r\n  const toggleEdit = (role) => {\r\n    setRole(role);\r\n    setRoleName(role.name);\r\n    setOpenEdit(!openEdit);\r\n  }\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"S/N\",\r\n        field: \"sn\"\r\n      },\r\n      {\r\n        label: \"Role Name\",\r\n        field: \"roleName\"\r\n      },\r\n      {\r\n        label: \"Date Created\",\r\n        field: \"dateCreated\"\r\n      },\r\n      {\r\n        label: \"Date Updated\",\r\n        field: \"dateUpdated\"\r\n      },\r\n      {\r\n        label: \"Action\",\r\n        field: \"action\"\r\n      }\r\n    ],\r\n    rows: !loading ? roles : [{\r\n      sn: <div className=\"spinner-border spinner-border-sm teal-text\" role=\"status\" ><span className=\"sr-only\">Loading...</span></div >,\r\n      roleName: <div className=\"spinner-border spinner-border-sm teal-text\" role=\"status\" ><span className=\"sr-only\">Loading...</span></div >,\r\n      dateCreated: <div className=\"spinner-border spinner-border-sm teal-text\" role=\"status\" ><span className=\"sr-only\">Loading...</span></div >,\r\n      dateUpdated: <div className=\"spinner-border spinner-border-sm teal-text\" role=\"status\" ><span className=\"sr-only\">Loading...</span></div >,\r\n      action: <div className=\"spinner-border spinner-border-sm teal-text\" role=\"status\" ><span className=\"sr-only\">Loading...</span></div >\r\n    }, ...roles]\r\n  };\r\n\r\n\r\n  const loadRoles = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/admin-roles`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        let cnt = 1;\r\n        let sn = roles.length;\r\n        const rows = res.data.data.map(role => {\r\n          const row = {\r\n            sn: sn + 1,\r\n            roleName: role.name,\r\n            dateCreated: moment(parseInt(role.createdAt)).format('L'),\r\n            dateUpdated: moment(parseInt(role.updatedAt)).format('L'),\r\n            action: (<div>\r\n              {(cnt !== 1) && (<>\r\n                <MDBBadge className=\"primary-color mx-1\" onClick={() => toggleEdit(role)}><MDBIcon icon=\"edit\" className=\"white-text\" /></MDBBadge>\r\n                <MDBBadge className=\"danger-color\" onClick={() => handleDeleteRole(role)}><MDBIcon icon=\"trash-alt\" className=\"white-text\" /></MDBBadge>\r\n              </>)}\r\n            </div>)\r\n          };\r\n          sn++\r\n          cnt++;\r\n          return row;\r\n        })\r\n        setLoading(false);\r\n        setRoles(rows);\r\n      })\r\n      .catch(err => {\r\n        return [];\r\n      })\r\n  }\r\n\r\n  const handleDeleteRole = (role) => {\r\n    if (window.confirm(`Are you sure you want to delete the ${role.name} role? \\n NB: This cannot be undone!`)) {\r\n      axios.delete(`${apiUrl}/admin-roles/${role.id}`, {\r\n        headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n      })\r\n        .then(res => {\r\n          if (res.data.success) {\r\n            setRoles(roles.filter(r => r.id !== res.data.data.id));\r\n            return setSuccess(`${role.name} deleted successfully!`);\r\n          }\r\n          return setFeedback(\"Unable to delete role!\");\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n    }\r\n  }\r\n\r\n  const createRole = () => {\r\n    setLoading(true);\r\n    if (!roleName) {\r\n      setLoading(false);\r\n      return setFeedback(\"Role name cannot be empty!\");\r\n    }\r\n    const name = { name: roleName };\r\n    axios.post(`${apiUrl}/admin-roles`, name, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        const role = res.data.data\r\n        const row = {\r\n          sn: roles.length + 1,\r\n          roleName: role.name,\r\n          dateCreated: role.createdAt,\r\n          dateUpdated: role.updatedAt,\r\n          action: (<div>\r\n            <MDBBadge className=\"primary-color mx-1\"><MDBIcon icon=\"edit\" className=\"white-text\" /></MDBBadge>\r\n            <MDBBadge className=\"danger-color\" onClick={() => handleDeleteRole(role)}><MDBIcon icon=\"trash-alt\" className=\"white-text\" /></MDBBadge>\r\n          </div>)\r\n        };\r\n        setRoles([...roles, row]);\r\n        setLoading(false);\r\n        toggleModal();\r\n      })\r\n      .catch(err => {\r\n        setLoading(false);\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  const editRole = () => {\r\n    setLoading(true);\r\n    if (!roleName) {\r\n      setLoading(false);\r\n      return setFeedback(\"Role name cannot be empty!\");\r\n    }\r\n    const dat = { name: roleName, id: role.id };\r\n    axios.put(`${apiUrl}/admin-roles`, dat, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        if (res.data.success) {\r\n          window.location.reload();\r\n        }\r\n        toggleEdit(role);\r\n        setLoading(false);\r\n        setSuccess(\"Role updated successfully!\");\r\n      })\r\n      .catch(err => {\r\n        setLoading(false);\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadRoles();\r\n  }, []);\r\n\r\n  const handleRoleName = (e) => {\r\n    setRoleName(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <MDBBtn className=\"teal accent-4\" onClick={() => {\r\n        toggleModal();\r\n      }\r\n      }>Create New Role</MDBBtn>\r\n      <MDBCard>\r\n        <MDBCard narrow className=\"z-depth-0\">\r\n          <MDBView\r\n            cascade\r\n            className=\"teal accent-4 narrower py-2 my-3 d-flex justify-content-between align-items-center\"\r\n          >\r\n            <div className=\"text-left\"></div>\r\n            <span className=\"white-text text-bold mx-3\">Role Management</span>\r\n            <div className=\"text-right\"></div>\r\n          </MDBView>\r\n        </MDBCard>\r\n        {success && <div className=\"mx-5 alert-success\">{success}</div>}\r\n        <MDBCardBody>\r\n          <MDBDataTable striped responsive bordered small hover data={data} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n\r\n\r\n      <MDBModal\r\n        isOpen={openModal}\r\n        toggle={() => this.toggleModal()}\r\n        inline={openModal === false}\r\n        backdrop={openModal === false ? false : true}\r\n        cascading\r\n        disableFocusTrap={openModal === false ? true : false}>\r\n        <MDBModalHeader\r\n          toggle={openModal === false ? () => { } : () => toggleModal()}\r\n          className='teal accent-4 white-text'\r\n        >\r\n          <MDBIcon icon=\"add\" className='mr-2' />{' '}\r\n          Create A New Role\r\n        </MDBModalHeader>\r\n        <div className=\"alert-danger\">{feedback && feedback}</div>\r\n        <MDBModalBody className='mb-0'>\r\n          <MDBInput label='Role  Name' value={roleName} onChange={(val) => handleRoleName(val)} />\r\n          <div className='text-center mb-1-half'>\r\n            <MDBBtn\r\n              className='teal accent-4 mb-2'\r\n              onClick={() => createRole()}\r\n            >{loading && (\r\n              <div className=\"spinner-border spinner-border-sm text-white\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </div>)}\r\n              Create\r\n              <MDBIcon icon=\"plus\" className='ml-1' />\r\n            </MDBBtn>\r\n          </div>\r\n        </MDBModalBody>\r\n      </MDBModal>\r\n\r\n      <MDBModal\r\n        isOpen={openEdit}\r\n        toggle={() => this.toggleEdit(role)}\r\n        inline={openEdit === false}\r\n        backdrop={openEdit === false ? false : true}\r\n        cascading\r\n        disableFocusTrap={openEdit === false ? true : false}>\r\n        <MDBModalHeader\r\n          toggle={openEdit === false ? () => { } : () => toggleEdit(role)}\r\n          className='teal accent-4 white-text'\r\n        >\r\n          <MDBIcon icon=\"add\" className='mr-2' />{' '}\r\n          Edit {role && role.name} Role\r\n        </MDBModalHeader>\r\n        <div className=\"alert-danger\">{feedback && feedback}</div>\r\n        <MDBModalBody className='mb-0'>\r\n          <MDBInput label='Role  Name' value={roleName} onChange={(val) => handleRoleName(val)} />\r\n          <div className='text-center mb-1-half'>\r\n            <MDBBtn\r\n              className='teal accent-4 mb-2'\r\n              onClick={() => editRole()}\r\n            >{loading && (\r\n              <div className=\"spinner-border spinner-border-sm text-white\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </div>)}\r\n              Update\r\n              <MDBIcon icon=\"plus\" className='ml-1' />\r\n            </MDBBtn>\r\n          </div>\r\n        </MDBModalBody>\r\n      </MDBModal>\r\n\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default RoleManagement;\r\n","import React from \"react\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBContainer,\r\n  MDBDataTable,\r\n  MDBView\r\n} from \"mdbreact\";\r\n\r\n\r\nconst data = {\r\n  columns: [\r\n    {\r\n      label: \"S/N\",\r\n      field: \"sn\",\r\n    },\r\n    {\r\n      label: \"Listing ID\",\r\n      field: \"listingId\",\r\n    },\r\n    {\r\n      label: \"Amount\",\r\n      field: \"amount\",\r\n    },\r\n    {\r\n      label: \"Date Purchased\",\r\n      field: \"datePurchased\",\r\n    },\r\n    {\r\n      label: \"Date Expired\",\r\n      field: \"dateExpired\",\r\n    }\r\n  ],\r\n  rows: [\r\n    {\r\n      sn: \"1\",\r\n      listingId: \"876483hu384989G94\",\r\n      amount: \"300,000\",\r\n      datePurchased: \"2020/01/04\",\r\n      dateExpired: \"2020/03/23\"\r\n    },\r\n    {\r\n      sn: \"2\",\r\n      listingId: \"876483hu384989G94\",\r\n      amount: \"300,000\",\r\n      datePurchased: \"2020/01/04\",\r\n      dateExpired: \"2020/03/23\"\r\n    },\r\n    {\r\n      sn: \"3\",\r\n      listingId: \"876483hu384989G94\",\r\n      amount: \"300,000\",\r\n      datePurchased: \"2020/01/04\",\r\n      dateExpired: \"2020/03/23\"\r\n    }\r\n  ]\r\n};\r\n\r\n\r\nconst ExpiredRentLog = () => {\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCard>\r\n        <MDBCard narrow className=\"z-depth-0\">\r\n          <MDBView\r\n            cascade\r\n            className=\"teal accent-4 narrower py-2 my-3 d-flex justify-content-between align-items-center\"\r\n          >\r\n            <div className=\"text-left\"></div>\r\n            <span className=\"white-text text-bold mx-3\">Expired Rent Log</span>\r\n            <div className=\"text-right\"></div>\r\n          </MDBView>\r\n        </MDBCard>\r\n        <MDBCardBody>\r\n          <MDBDataTable striped responsive bordered small hover data={data} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default ExpiredRentLog;\r\n","import React from \"react\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBContainer,\r\n  MDBDataTable,\r\n  MDBView,\r\n  MDBBadge\r\n} from \"mdbreact\";\r\n\r\nconst data = {\r\n  columns: [\r\n    {\r\n      label: \"S/N\",\r\n      field: \"sn\",\r\n    },\r\n    {\r\n      label: \"Transaction ID\",\r\n      field: \"transactionId\",\r\n    },\r\n    {\r\n      label: \"User Name\",\r\n      field: \"userName\",\r\n    },\r\n    {\r\n      label: \"User Email\",\r\n      field: \"userEmail\",\r\n    },\r\n    {\r\n      label: \"Amount\",\r\n      field: \"amount\",\r\n    },\r\n    {\r\n      label: \"Status\",\r\n      field: \"status\",\r\n    },\r\n    {\r\n      label: \"Date\",\r\n      field: \"date\",\r\n    }\r\n  ],\r\n  rows: [\r\n    {\r\n      sn: \"1\",\r\n      transactionId: \"876483hu384989G94\",\r\n      userName: \"John Kester\",\r\n      userEmail: \"email@email.com\",\r\n      amount: \"300,000\",\r\n      status: <MDBBadge color=\"success\">Approved</MDBBadge>,\r\n      date: \"2020/03/25\"\r\n    },\r\n    {\r\n      sn: \"2\",\r\n      transactionId: \"876483hu384989G94\",\r\n      userName: \"John Kester\",\r\n      userEmail: \"email@email.com\",\r\n      amount: \"120,000\",\r\n      status: <MDBBadge color=\"warning\">pending</MDBBadge>,\r\n      date: \"2020/03/25\"\r\n    },\r\n    {\r\n      sn: \"3\",\r\n      transactionId: \"876483hu384989G94\",\r\n      userName: \"John Kester\",\r\n      userEmail: \"email@email.com\",\r\n      amount: \"210,000\",\r\n      status: <MDBBadge color=\"grey\">failed</MDBBadge>,\r\n      date: \"2020/03/25\"\r\n    }\r\n  ]\r\n};\r\n\r\nconst MerchantPayoutLog = () => {\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCard>\r\n        <MDBCard narrow className=\"z-depth-0\">\r\n          <MDBView\r\n            cascade\r\n            className=\"teal accent-4 narrower py-2 my-3 d-flex justify-content-between align-items-center\"\r\n          >\r\n            <div className=\"text-left\"></div>\r\n            <span className=\"white-text text-bold mx-3\">\r\n              Merchant Payout Log\r\n            </span>\r\n            <div className=\"text-right\"></div>\r\n          </MDBView>\r\n        </MDBCard>\r\n        <MDBCardBody>\r\n          <MDBDataTable striped responsive bordered small hover data={data} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default MerchantPayoutLog;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { apiUrl } from \"../../config\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBContainer,\r\n  MDBDataTable,\r\n  MDBView\r\n} from \"mdbreact\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\n\r\nconst ReferralLog = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [referrals, setReferrals] = useState([]);\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"S/N\",\r\n        field: \"sn\",\r\n      },\r\n      {\r\n        label: \"Referral ID\",\r\n        field: \"refId\",\r\n      },\r\n      {\r\n        label: \"Referral Code\",\r\n        field: \"refCode\",\r\n      },\r\n      {\r\n        label: \"User ID\",\r\n        field: \"userId\",\r\n      },\r\n      {\r\n        label: \"Referrals\",\r\n        field: \"referrals\",\r\n      },\r\n      {\r\n        label: \"Date Created\",\r\n        field: \"date\",\r\n      }\r\n    ],\r\n    rows: !loading ? referrals : [{\r\n      sn: <Skeleton />,\r\n      refId: <Skeleton />,\r\n      refCode: <Skeleton />,\r\n      userId: <Skeleton />,\r\n      referrals: <Skeleton />,\r\n      date: <Skeleton />\r\n    }]\r\n  };\r\n\r\n\r\n  const loadReferrals = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/referrals`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        let sn = referrals.length;\r\n        const rows = res.data.data.map(ref => {\r\n          const row = {\r\n            sn: sn + 1,\r\n            refId: ref.id,\r\n            refCode: ref.refCode,\r\n            userId: ref.userId,\r\n            referrals: ref.refs.length,\r\n            date: ref.createdAt\r\n          };\r\n          sn++;\r\n          return row;\r\n        })\r\n        setLoading(false);\r\n        setReferrals([...rows]);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        return [];\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadReferrals();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCard>\r\n        <MDBCard narrow className=\"z-depth-0\">\r\n          <MDBView\r\n            cascade\r\n            className=\"teal accent-4 narrower py-2 my-3 d-flex justify-content-between align-items-center\"\r\n          >\r\n            <div className=\"text-left\"></div>\r\n            <span className=\"white-text text-bold mx-3\">Referral Log</span>\r\n            <div className=\"text-right\"></div>\r\n          </MDBView>\r\n        </MDBCard>\r\n        <MDBCardBody>\r\n          <MDBDataTable striped responsive bordered small hover data={data} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default ReferralLog;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport moment from \"moment\";\r\nimport { money } from \"../../functions\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBContainer,\r\n  MDBDataTable,\r\n  MDBView,\r\n  MDBBadge\r\n} from \"mdbreact\";\r\n\r\n\r\nconst WareHousersPaymentLog = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [payments, setPayments] = useState([]);\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"S/N\",\r\n        field: \"sn\",\r\n      },\r\n      {\r\n        label: \"Payment ID\",\r\n        field: \"paymentId\",\r\n      },\r\n      {\r\n        label: \"Amount\",\r\n        field: \"amount\",\r\n      },\r\n      {\r\n        label: \"Channel\",\r\n        field: \"channel\",\r\n      },\r\n      {\r\n        label: \"Info\",\r\n        field: \"info\",\r\n      },\r\n      {\r\n        label: \"Customer Email\",\r\n        field: \"customerEmail\",\r\n      },\r\n      {\r\n        label: \"Expires\",\r\n        field: \"expires\",\r\n      },\r\n      {\r\n        label: \"Status\",\r\n        field: \"status\",\r\n      },\r\n      {\r\n        label: \"Date\",\r\n        field: \"date\",\r\n      }\r\n    ],\r\n    rows: !loading ? payments : [{\r\n      sn: <Skeleton />,\r\n      paymentId: <Skeleton />,\r\n      amount: <Skeleton />,\r\n      channel: <Skeleton />,\r\n      info: <Skeleton />,\r\n      customerEmail: <Skeleton />,\r\n      expires: <Skeleton />,\r\n      status: <Skeleton />,\r\n      date: <Skeleton />\r\n    }]\r\n  };\r\n\r\n  const loadPayments = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/warehousers-payments`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        let sn = payments.length;\r\n        const rows = res.data.data.map(payment => {\r\n          const row = {\r\n            sn: sn + 1,\r\n            paymentId: payment.id,\r\n            amount: <> &#8358; {money.format(parseInt(payment.amount))} </>,\r\n            channel: payment.channel,\r\n            info: payment.info,\r\n            customerEmail: payment.customer.email,\r\n            expires: moment(parseInt(payment.requisition.expires)).format('L'),\r\n            status: payment.status === 2 ? <MDBBadge color=\"success\">Success</MDBBadge> : <MDBBadge className=\"danger-color\">Failed</MDBBadge>,\r\n            date: moment(payment.createdAt).format('L')\r\n          };\r\n          sn++;\r\n          return row;\r\n        })\r\n        setLoading(false);\r\n        setPayments(rows);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        return [];\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadPayments();\r\n  }, []);\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCard>\r\n        <MDBCard narrow className=\"z-depth-0\">\r\n          <MDBView\r\n            cascade\r\n            className=\"teal accent-4 narrower py-2 my-3 d-flex justify-content-between align-items-center\"\r\n          >\r\n            <div className=\"text-left\"></div>\r\n            <span className=\"white-text text-bold mx-3\">\r\n              Warehousers' Payment Log\r\n            </span>\r\n            <div className=\"text-right\"></div>\r\n          </MDBView>\r\n        </MDBCard>\r\n        <MDBCardBody>\r\n          <MDBDataTable striped responsive bordered small hover data={data} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default WareHousersPaymentLog;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { apiUrl } from \"../../config\";\r\nimport { money } from \"../../functions\";\r\nimport moment from \"moment\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBContainer,\r\n  MDBDataTable,\r\n  MDBView,\r\n  MDBBadge\r\n} from \"mdbreact\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\n\r\nconst WithdrawalLog = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [trans, setTrans] = useState([]);\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"S/N\",\r\n        field: \"sn\",\r\n      },\r\n      {\r\n        label: \"Transaction ID\",\r\n        field: \"transactionId\",\r\n      },\r\n      {\r\n        label: \"Type\",\r\n        field: \"type\",\r\n      },\r\n      {\r\n        label: \"User Email\",\r\n        field: \"userEmail\",\r\n      },\r\n      {\r\n        label: \"Amount\",\r\n        field: \"amount\",\r\n      },\r\n      {\r\n        label: \"Commission\",\r\n        field: \"commission\",\r\n      },\r\n      {\r\n        label: \"Description\",\r\n        field: \"desc\",\r\n      },\r\n      {\r\n        label: \"Status\",\r\n        field: \"status\",\r\n      },\r\n      {\r\n        label: \"Transaction Date\",\r\n        field: \"date\",\r\n      }\r\n    ],\r\n    rows: !loading ? trans : [{\r\n      sn: <Skeleton />,\r\n      transactionId: <Skeleton />,\r\n      userEmail: <Skeleton />,\r\n      type: <Skeleton />,\r\n      status: <Skeleton />,\r\n      desc: <Skeleton />,\r\n      amount: <Skeleton />,\r\n      commission: <Skeleton />,\r\n      date: <Skeleton />\r\n    }]\r\n  };\r\n\r\n  const loadTransactions = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/transactions`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        let sn = trans.length;\r\n        const rows = res.data.data.map(tran => {\r\n          if (tran.description === \"withdrawal\") {\r\n            const row = {\r\n              sn: sn + 1,\r\n              transactionId: tran.id,\r\n              userEmail: tran.user.email,\r\n              type: tran.type,\r\n              desc: tran.description,\r\n              commission: <> &#8358; {money.format(parseInt(tran.fees))} </>,\r\n              amount: <> &#8358; {money.format(parseInt(tran.amount))} </>,\r\n              status: tran.status === 2 ? <MDBBadge color=\"success\">Success</MDBBadge> : <MDBBadge className=\"danger-color\">Failed</MDBBadge>,\r\n              date: moment(tran.createdAt).format('L')\r\n            };\r\n            sn++;\r\n            return row;\r\n          }\r\n          return null;\r\n        })\r\n        setLoading(false);\r\n        setTrans([...rows]);\r\n      })\r\n      .catch(err => {\r\n        return [];\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadTransactions();\r\n  }, []);\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCard>\r\n        <MDBCard narrow className=\"z-depth-0\">\r\n          <MDBView\r\n            cascade\r\n            className=\"teal accent-4 narrower py-2 my-3 d-flex justify-content-between align-items-center\"\r\n          >\r\n            <div className=\"text-left\"></div>\r\n            <span className=\"white-text text-bold mx-3\">Withdrawal Log</span>\r\n            <div className=\"text-right\"></div>\r\n          </MDBView>\r\n        </MDBCard>\r\n        <MDBCardBody>\r\n          <MDBDataTable striped responsive bordered small hover data={data} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default WithdrawalLog;\r\n","/* \r\n* List of all users that are also merchants are diplayed here\r\n* When you click to view the transactions. It brings up a list\r\n* having the transactions log by that particular user.\r\n*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBContainer,\r\n  MDBDataTable,\r\n  MDBView,\r\n  MDBBadge,\r\n  MDBIcon,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBBtn,\r\n  MDBInput,\r\n  MDBModal\r\n} from \"mdbreact\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst AllWarehouser = () => {\r\n\r\n  const [users, setUsers] = useState([]);\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [editModal, setEditModal] = useState(false);\r\n  const [feedback, setFeedback] = useState(null);\r\n\r\n  const toggleEdit = (user) => {\r\n    setUser(user);\r\n    setEditModal(!editModal);\r\n  }\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"S/N\",\r\n        field: \"sn\",\r\n      },\r\n      {\r\n        label: \"User ID\",\r\n        field: \"id\"\r\n      },\r\n      {\r\n        label: \"Name\",\r\n        field: \"name\",\r\n      },\r\n      {\r\n        label: \"Phone\",\r\n        field: \"phone\",\r\n      },\r\n      {\r\n        label: \"Email\",\r\n        field: \"email\",\r\n      },\r\n      {\r\n        label: \"Account Status\",\r\n        field: \"accountStatus\"\r\n      },\r\n      {\r\n        label: \"Action\",\r\n        field: \"action\",\r\n      }\r\n    ],\r\n    rows: !loading ? users : [{\r\n      sn: <Skeleton />,\r\n      id: <Skeleton />,\r\n      name: <Skeleton />,\r\n      email: <Skeleton />,\r\n      phone: <Skeleton />,\r\n      accountStatus: <Skeleton />,\r\n      action: <Skeleton />\r\n    }]\r\n  };\r\n\r\n  const loadUsers = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/users`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        let sn = users.length;\r\n        const rows = res.data.data.map(user => {\r\n          if (user.type.name === \"merchant\") {\r\n            const row = {\r\n              sn: sn + 1,\r\n              id: user.id,\r\n              name: `${user.firstName} ${user.lastName}`,\r\n              email: user.email,\r\n              phone: user.phoneNumber,\r\n              accountStatus: user.status === 2 ? <MDBBadge className=\"success-color\">Active</MDBBadge> : <MDBBadge className=\"danger-color\">Banned</MDBBadge>,\r\n              action: (<div>\r\n                <Link to={`/user/${user.id}`}><MDBBadge className=\"teal\"><MDBIcon icon=\"eye\" className=\"white-text\" /></MDBBadge></Link>\r\n                <MDBBadge className=\"primary-color mx-1\" onClick={() => toggleEdit(user)}><MDBIcon icon=\"edit\" className=\"white-text\" /></MDBBadge>\r\n                {user.status === 2 ? <MDBBadge className=\"danger-color\" onClick={() => handleBanUser(user)}><MDBIcon icon=\"ban\" className=\"white-text\" /></MDBBadge> : <MDBBadge className=\"success-color\" onClick={() => handleActivateUser(user)}><MDBIcon icon=\"check\" className=\"white-text\" /></MDBBadge>}\r\n              </div>)\r\n            };\r\n            sn++;\r\n            return row;\r\n          }\r\n          return null;\r\n        })\r\n        setLoading(false);\r\n        setUsers([...rows]);\r\n      })\r\n      .catch(err => {\r\n        return [];\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadUsers();\r\n  }, []);\r\n\r\n\r\n\r\n  const handleBanUser = (user) => {\r\n    if (window.confirm(`Are you sure you want to ban ${user.firstName}`)) {\r\n      axios.put(`${apiUrl}/users/${user.id}`, { status: 1 }, {\r\n        headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n      })\r\n        .then(res => {\r\n          if (res.data.success) {\r\n            window.location.reload();\r\n          }\r\n        })\r\n        .catch(err => {\r\n          return err;\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleActivateUser = (user) => {\r\n    if (window.confirm(`Are you sure you want to Unblock ${user.firstName}`)) {\r\n      axios.put(`${apiUrl}/users/${user.id}`, { status: 2 }, {\r\n        headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n      })\r\n        .then(res => {\r\n          if (res.data.success) {\r\n            window.location.reload();\r\n          }\r\n        })\r\n        .catch(err => {\r\n          return err;\r\n        })\r\n    }\r\n  }\r\n\r\n\r\n  const handleEditInput = (val, data) => {\r\n    user[data] = val.target.value;\r\n    setUser({ ...user });\r\n  }\r\n  const handleEditUser = () => {\r\n    setLoading(true);\r\n    const data = {\r\n      firstName: user.firstName,\r\n      lastName: user.lastName,\r\n      phoneNumber: user.phoneNumber,\r\n      email: user.email\r\n    }\r\n    axios.put(`${apiUrl}/users/${user.id}`, data, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        if (res.data.success) {\r\n          window.location.reload();\r\n          return toggleEdit(user);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        setFeedback(\"Unable to update user!\");\r\n        return err;\r\n      })\r\n  }\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCard>\r\n        <MDBCard narrow className=\"z-depth-0\">\r\n          <MDBView\r\n            cascade\r\n            className=\"teal accent-4 narrower py-2 my-3 d-flex justify-content-between align-items-center\"\r\n          >\r\n            <div className=\"text-left\"></div>\r\n            <span className=\"white-text text-bold mx-3\">All Merchants</span>\r\n            <div className=\"text-right\"></div>\r\n          </MDBView>\r\n        </MDBCard>\r\n        <MDBCardBody>\r\n          <MDBDataTable striped responsive bordered small hover data={data} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n\r\n\r\n      <MDBModal\r\n        isOpen={editModal}\r\n        toggle={() => this.toggleEdit(user)}\r\n        inline={editModal === false}\r\n        backdrop={editModal === false ? false : true}\r\n        cascading\r\n        disableFocusTrap={editModal === false ? true : false}>\r\n        <MDBModalHeader\r\n          toggle={editModal === false ? () => { } : () => toggleEdit(user)}\r\n          className='teal accent-4 white-text'\r\n        >\r\n          <MDBIcon icon=\"add\" className='mr-2' />{' '}\r\n          Edit {user && user.firstName}'s Info\r\n        </MDBModalHeader>\r\n        <div className=\"alert-danger\">{feedback && feedback}</div>\r\n        <MDBModalBody className='mb-0'>\r\n          <MDBInput label='First Name' value={user && user.firstName} onChange={(val) => handleEditInput(val, \"firstName\")} />\r\n          <MDBInput label='Last Name' value={user && user.lastName} onChange={(val) => handleEditInput(val, \"lastName\")} />\r\n          <MDBInput label='Email' type=\"email\" value={user && user.email} onChange={(val) => handleEditInput(val, \"email\")} />\r\n          <MDBInput label='Phone Number' type=\"number\" value={user && user.phoneNumber} onChange={(val) => handleEditInput(val, \"phoneNumber\")} />\r\n          <div className='text-center mb-1-half'>\r\n            <MDBBtn\r\n              className='teal accent-4 mb-2'\r\n              onClick={() => handleEditUser()}\r\n            >{loading && (\r\n              <div className=\"spinner-border spinner-border-sm text-white\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </div>)}\r\n              Update\r\n              <MDBIcon icon=\"plus\" className='ml-1' />\r\n            </MDBBtn>\r\n          </div>\r\n        </MDBModalBody>\r\n      </MDBModal>\r\n\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default AllWarehouser;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBContainer,\r\n  MDBDataTable,\r\n  MDBView,\r\n  MDBIcon,\r\n  MDBModal,\r\n  MDBBadge,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBBtn,\r\n  MDBInput\r\n} from \"mdbreact\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst AllUsers = () => {\r\n\r\n  const [users, setUsers] = useState([]);\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [editModal, setEditModal] = useState(false);\r\n  const [feedback, setFeedback] = useState(null);\r\n\r\n  const toggleEdit = (user) => {\r\n    setUser(user);\r\n    setEditModal(!editModal);\r\n  }\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"S/N\",\r\n        field: \"sn\",\r\n      },\r\n      {\r\n        label: \"User ID\",\r\n        field: \"id\"\r\n      },\r\n      {\r\n        label: \"Name\",\r\n        field: \"name\",\r\n      },\r\n      {\r\n        label: \"Email\",\r\n        field: \"email\",\r\n      },\r\n      {\r\n        label: \"Phone\",\r\n        field: \"phone\",\r\n      },\r\n      {\r\n        label: \"Account Type\",\r\n        field: \"type\",\r\n      },\r\n      {\r\n        label: \"Account Status\",\r\n        field: \"accountStatus\",\r\n      },\r\n      {\r\n        label: \"Action\",\r\n        field: \"action\",\r\n      }\r\n    ],\r\n    rows: !loading ? users : [{\r\n      sn: <Skeleton />,\r\n      id: <Skeleton />,\r\n      name: <Skeleton />,\r\n      email: <Skeleton />,\r\n      phone: <Skeleton />,\r\n      type: <Skeleton />,\r\n      accountStatus: <Skeleton />,\r\n      action: <Skeleton />\r\n    }]\r\n  };\r\n\r\n  const loadUsers = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/users`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        let sn = users.length;\r\n        const rows = res.data.data.map(user => {\r\n          const row = {\r\n            sn: sn + 1,\r\n            id: user.id,\r\n            name: `${user.firstName} ${user.lastName}`,\r\n            email: user.email,\r\n            phone: user.phoneNumber,\r\n            type: user.type.name,\r\n            accountStatus: user.status === 2 ? <MDBBadge className=\"success-color\">Active</MDBBadge> : <MDBBadge className=\"danger-color\">Banned</MDBBadge>,\r\n            action: (<div>\r\n              <Link to={`/user/${user.id}`}><MDBBadge className=\"teal\"><MDBIcon icon=\"eye\" className=\"white-text\" /></MDBBadge></Link>\r\n              <MDBBadge className=\"primary-color mx-1\" onClick={() => toggleEdit(user)}><MDBIcon icon=\"edit\" className=\"white-text\" /></MDBBadge>\r\n              {user.status === 2 ? <MDBBadge className=\"danger-color\" onClick={() => handleBanUser(user)}><MDBIcon icon=\"ban\" className=\"white-text\" /></MDBBadge> : <MDBBadge className=\"success-color\" onClick={() => handleActivateUser(user)}><MDBIcon icon=\"check\" className=\"white-text\" /></MDBBadge>}\r\n            </div>)\r\n          };\r\n          sn++;\r\n          return row;\r\n        })\r\n        setLoading(false);\r\n        setUsers([...rows]);\r\n      })\r\n      .catch(err => {\r\n        return [];\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadUsers();\r\n  }, []);\r\n\r\n  const handleBanUser = (user) => {\r\n    if (window.confirm(`Are you sure you want to ban ${user.firstName}`)) {\r\n      axios.put(`${apiUrl}/users/${user.id}`, { status: 1 }, {\r\n        headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n      })\r\n        .then(res => {\r\n          if (res.data.success) {\r\n            window.location.reload();\r\n          }\r\n        })\r\n        .catch(err => {\r\n          return err;\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleActivateUser = (user) => {\r\n    if (window.confirm(`Are you sure you want to Unblock ${user.firstName}`)) {\r\n      axios.put(`${apiUrl}/users/${user.id}`, { status: 2 }, {\r\n        headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n      })\r\n        .then(res => {\r\n          if (res.data.success) {\r\n            window.location.reload();\r\n          }\r\n        })\r\n        .catch(err => {\r\n          return err;\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleEditInput = (val, data) => {\r\n    user[data] = val.target.value;\r\n    setUser({ ...user });\r\n  }\r\n  const handleEditUser = () => {\r\n    setLoading(true);\r\n    const data = {\r\n      firstName: user.firstName,\r\n      lastName: user.lastName,\r\n      phoneNumber: user.phoneNumber,\r\n      email: user.email\r\n    }\r\n    axios.put(`${apiUrl}/users/${user.id}`, data, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        if (res.data.success) {\r\n          window.location.reload();\r\n          return toggleEdit(user);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        setFeedback(\"Unable to update user!\");\r\n        return err;\r\n      })\r\n  }\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCard>\r\n        <MDBCard narrow className=\"z-depth-0\">\r\n          <MDBView\r\n            cascade\r\n            className=\"teal accent-4 narrower py-2 my-3 d-flex justify-content-between align-items-center\"\r\n          >\r\n            <div className=\"text-left\"></div>\r\n            <span className=\"white-text text-bold mx-3\">All Users</span>\r\n            <div className=\"text-right\"></div>\r\n          </MDBView>\r\n        </MDBCard>\r\n        <MDBCardBody>\r\n          <MDBDataTable striped responsive bordered small hover data={data} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n\r\n      <MDBModal\r\n        isOpen={editModal}\r\n        toggle={() => this.toggleEdit(user)}\r\n        inline={editModal === false}\r\n        backdrop={editModal === false ? false : true}\r\n        cascading\r\n        disableFocusTrap={editModal === false ? true : false}>\r\n        <MDBModalHeader\r\n          toggle={editModal === false ? () => { } : () => toggleEdit(user)}\r\n          className='teal accent-4 white-text'\r\n        >\r\n          <MDBIcon icon=\"add\" className='mr-2' />{' '}\r\n          Edit {user && user.firstName}'s Info\r\n        </MDBModalHeader>\r\n        <div className=\"alert-danger\">{feedback && feedback}</div>\r\n        <MDBModalBody className='mb-0'>\r\n          <MDBInput label='First Name' value={user && user.firstName} onChange={(val) => handleEditInput(val, \"firstName\")} />\r\n          <MDBInput label='Last Name' value={user && user.lastName} onChange={(val) => handleEditInput(val, \"lastName\")} />\r\n          <MDBInput label='Email' type=\"email\" value={user && user.email} onChange={(val) => handleEditInput(val, \"email\")} />\r\n          <MDBInput label='Phone Number' type=\"number\" value={user && user.phoneNumber} onChange={(val) => handleEditInput(val, \"phoneNumber\")} />\r\n          <div className='text-center mb-1-half'>\r\n            <MDBBtn\r\n              className='teal accent-4 mb-2'\r\n              onClick={() => handleEditUser()}\r\n            >{loading && (\r\n              <div className=\"spinner-border spinner-border-sm text-white\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </div>)}\r\n              Update\r\n              <MDBIcon icon=\"plus\" className='ml-1' />\r\n            </MDBBtn>\r\n          </div>\r\n        </MDBModalBody>\r\n      </MDBModal>\r\n\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default AllUsers;\r\n","/* \r\n* List of all users that are also warehousers are diplayed here\r\n* When you click to view the warehouse listings. It brings up a list\r\n* having the listings by that particular user.\r\n*/\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBContainer,\r\n  MDBDataTable,\r\n  MDBView,\r\n  MDBBadge,\r\n  MDBIcon,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBBtn,\r\n  MDBInput,\r\n  MDBModal\r\n} from \"mdbreact\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst AllWarehouser = () => {\r\n\r\n  const [users, setUsers] = useState([]);\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [editModal, setEditModal] = useState(false);\r\n  const [feedback, setFeedback] = useState(null);\r\n\r\n  const toggleEdit = (user) => {\r\n    setUser(user);\r\n    setEditModal(!editModal);\r\n  }\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"S/N\",\r\n        field: \"sn\",\r\n      },\r\n      {\r\n        label: \"User ID\",\r\n        field: \"id\"\r\n      },\r\n      {\r\n        label: \"Name\",\r\n        field: \"name\",\r\n      },\r\n      {\r\n        label: \"Phone\",\r\n        field: \"phone\",\r\n      },\r\n      {\r\n        label: \"Email\",\r\n        field: \"email\",\r\n      },\r\n      {\r\n        label: \"Account Status\",\r\n        field: \"accountStatus\"\r\n      },\r\n      {\r\n        label: \"Action\",\r\n        field: \"action\",\r\n      }\r\n    ],\r\n    rows: !loading ? users : [{\r\n      sn: <Skeleton />,\r\n      id: <Skeleton />,\r\n      name: <Skeleton />,\r\n      email: <Skeleton />,\r\n      phone: <Skeleton />,\r\n      accountStatus: <Skeleton />,\r\n      action: <Skeleton />\r\n    }]\r\n  };\r\n\r\n  const loadUsers = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/users`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        let sn = users.length;\r\n        const rows = res.data.data.map(user => {\r\n          if (user.type.name === \"warehouser\") {\r\n            const row = {\r\n              sn: sn + 1,\r\n              id: user.id,\r\n              name: `${user.firstName} ${user.lastName}`,\r\n              email: user.email,\r\n              phone: user.phoneNumber,\r\n              accountStatus: user.status === 2 ? <MDBBadge className=\"success-color\">Active</MDBBadge> : <MDBBadge className=\"danger-color\">Banned</MDBBadge>,\r\n              action: (<div>\r\n                <Link to={`/user/${user.id}`}><MDBBadge className=\"teal\"><MDBIcon icon=\"eye\" className=\"white-text\" /></MDBBadge></Link>\r\n                <MDBBadge className=\"primary-color mx-1\" onClick={() => toggleEdit(user)}><MDBIcon icon=\"edit\" className=\"white-text\" /></MDBBadge>\r\n                {user.status === 2 ? <MDBBadge className=\"danger-color\" onClick={() => handleBanUser(user)}><MDBIcon icon=\"ban\" className=\"white-text\" /></MDBBadge> : <MDBBadge className=\"success-color\" onClick={() => handleActivateUser(user)}><MDBIcon icon=\"check\" className=\"white-text\" /></MDBBadge>}\r\n              </div>)\r\n            };\r\n            sn++;\r\n            return row;\r\n          }\r\n          return null;\r\n        })\r\n        setLoading(false);\r\n        setUsers([...rows]);\r\n      })\r\n      .catch(err => {\r\n        return [];\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadUsers();\r\n  }, []);\r\n\r\n\r\n\r\n\r\n  const handleBanUser = (user) => {\r\n    if (window.confirm(`Are you sure you want to ban ${user.firstName}`)) {\r\n      axios.put(`${apiUrl}/users/${user.id}`, { status: 1 }, {\r\n        headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n      })\r\n        .then(res => {\r\n          if (res.data.success) {\r\n            window.location.reload();\r\n          }\r\n        })\r\n        .catch(err => {\r\n          return err;\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleActivateUser = (user) => {\r\n    if (window.confirm(`Are you sure you want to Unblock ${user.firstName}`)) {\r\n      axios.put(`${apiUrl}/users/${user.id}`, { status: 2 }, {\r\n        headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n      })\r\n        .then(res => {\r\n          if (res.data.success) {\r\n            window.location.reload();\r\n          }\r\n        })\r\n        .catch(err => {\r\n          return err;\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleEditInput = (val, data) => {\r\n    user[data] = val.target.value;\r\n    setUser({ ...user });\r\n  }\r\n  const handleEditUser = () => {\r\n    setLoading(true);\r\n    const data = {\r\n      firstName: user.firstName,\r\n      lastName: user.lastName,\r\n      phoneNumber: user.phoneNumber,\r\n      email: user.email\r\n    }\r\n    axios.put(`${apiUrl}/users/${user.id}`, data, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        if (res.data.success) {\r\n          window.location.reload();\r\n          return toggleEdit(user);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        setFeedback(\"Unable to update user!\");\r\n        return err;\r\n      })\r\n  }\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCard>\r\n        <MDBCard narrow className=\"z-depth-0\">\r\n          <MDBView\r\n            cascade\r\n            className=\"teal accent-4 narrower py-2 my-3 d-flex justify-content-between align-items-center\"\r\n          >\r\n            <div className=\"text-left\"></div>\r\n            <span className=\"white-text text-bold mx-3\">All Warehousers</span>\r\n            <div className=\"text-right\"></div>\r\n          </MDBView>\r\n        </MDBCard>\r\n        <MDBCardBody>\r\n          <MDBDataTable striped responsive bordered small hover data={data} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n\r\n\r\n\r\n      <MDBModal\r\n        isOpen={editModal}\r\n        toggle={() => this.toggleEdit(user)}\r\n        inline={editModal === false}\r\n        backdrop={editModal === false ? false : true}\r\n        cascading\r\n        disableFocusTrap={editModal === false ? true : false}>\r\n        <MDBModalHeader\r\n          toggle={editModal === false ? () => { } : () => toggleEdit(user)}\r\n          className='teal accent-4 white-text'\r\n        >\r\n          <MDBIcon icon=\"add\" className='mr-2' />{' '}\r\n          Edit {user && user.firstName}'s Info\r\n        </MDBModalHeader>\r\n        <div className=\"alert-danger\">{feedback && feedback}</div>\r\n        <MDBModalBody className='mb-0'>\r\n          <MDBInput label='First Name' value={user && user.firstName} onChange={(val) => handleEditInput(val, \"firstName\")} />\r\n          <MDBInput label='Last Name' value={user && user.lastName} onChange={(val) => handleEditInput(val, \"lastName\")} />\r\n          <MDBInput label='Email' type=\"email\" value={user && user.email} onChange={(val) => handleEditInput(val, \"email\")} />\r\n          <MDBInput label='Phone Number' type=\"number\" value={user && user.phoneNumber} onChange={(val) => handleEditInput(val, \"phoneNumber\")} />\r\n          <div className='text-center mb-1-half'>\r\n            <MDBBtn\r\n              className='teal accent-4 mb-2'\r\n              onClick={() => handleEditUser()}\r\n            >{loading && (\r\n              <div className=\"spinner-border spinner-border-sm text-white\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </div>)}\r\n              Update\r\n              <MDBIcon icon=\"plus\" className='ml-1' />\r\n            </MDBBtn>\r\n          </div>\r\n        </MDBModalBody>\r\n      </MDBModal>\r\n\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default AllWarehouser;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBContainer,\r\n  MDBDataTable,\r\n  MDBView,\r\n  MDBIcon,\r\n  MDBBadge,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBBtn,\r\n  MDBInput,\r\n  MDBModal\r\n} from \"mdbreact\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst BannedUsers = () => {\r\n\r\n  const [users, setUsers] = useState([]);\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [editModal, setEditModal] = useState(false);\r\n  const [feedback, setFeedback] = useState(null);\r\n\r\n  const toggleEdit = (user) => {\r\n    setUser(user);\r\n    setEditModal(!editModal);\r\n  }\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"S/N\",\r\n        field: \"sn\",\r\n      },\r\n      {\r\n        label: \"User ID\",\r\n        field: \"id\"\r\n      },\r\n      {\r\n        label: \"Name\",\r\n        field: \"name\",\r\n      },\r\n      {\r\n        label: \"Email\",\r\n        field: \"email\",\r\n      },\r\n      {\r\n        label: \"Phone\",\r\n        field: \"phone\",\r\n      },\r\n      {\r\n        label: \"Account Status\",\r\n        field: \"accountStatus\",\r\n      },\r\n      {\r\n        label: \"Action\",\r\n        field: \"action\",\r\n      }\r\n    ],\r\n    rows: !loading ? users : [{\r\n      sn: <Skeleton />,\r\n      id: <Skeleton />,\r\n      name: <Skeleton />,\r\n      email: <Skeleton />,\r\n      phone: <Skeleton />,\r\n      accountStatus: <Skeleton />,\r\n      action: <Skeleton />\r\n    }]\r\n  };\r\n\r\n  const loadUsers = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/users`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        const rows = res.data.data.map(user => {\r\n          let sn = users.length;\r\n          if (user.status !== 2) {\r\n            const row = {\r\n              sn: sn + 1,\r\n              id: user.id,\r\n              name: `${user.firstName} ${user.lastName}`,\r\n              email: user.email,\r\n              phone: user.phoneNumber,\r\n              type: user.type.name,\r\n              accountStatus: <MDBBadge className=\"danger-color\">Banned</MDBBadge>,\r\n              action: (<div>\r\n                <Link to={`/user/${user.id}`}><MDBBadge className=\"teal\"><MDBIcon icon=\"eye\" className=\"white-text\" /></MDBBadge></Link>\r\n                <MDBBadge className=\"primary-color mx-1\" onClick={() => toggleEdit(user)}><MDBIcon icon=\"edit\" className=\"white-text\" /></MDBBadge>\r\n                <MDBBadge className=\"success-color\" onClick={() => handleActivateUser(user)}><MDBIcon icon=\"check\" className=\"white-text\" /></MDBBadge>\r\n              </div>)\r\n            };\r\n            return row;\r\n          }\r\n          sn++;\r\n          return null;\r\n        })\r\n        setLoading(false);\r\n        setUsers([...rows]);\r\n      })\r\n      .catch(err => {\r\n        return [];\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadUsers();\r\n  }, []);\r\n\r\n  const handleActivateUser = (user) => {\r\n    if (window.confirm(`Are you sure you want to Unblock ${user.firstName}`)) {\r\n      axios.put(`${apiUrl}/users/${user.id}`, { status: 2 }, {\r\n        headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n      })\r\n        .then(res => {\r\n          if (res.data.success) {\r\n            window.location.reload();\r\n          }\r\n        })\r\n        .catch(err => {\r\n          return err;\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleEditInput = (val, data) => {\r\n    user[data] = val.target.value;\r\n    setUser({ ...user });\r\n  }\r\n  const handleEditUser = () => {\r\n    setLoading(true);\r\n    const data = {\r\n      firstName: user.firstName,\r\n      lastName: user.lastName,\r\n      phoneNumber: user.phoneNumber,\r\n      email: user.email\r\n    }\r\n    axios.put(`${apiUrl}/users/${user.id}`, data, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        if (res.data.success) {\r\n          window.location.reload();\r\n          return toggleEdit(user);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        setFeedback(\"Unable to update user!\");\r\n        return err;\r\n      })\r\n  }\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCard>\r\n        <MDBCard narrow className=\"z-depth-0\">\r\n          <MDBView\r\n            cascade\r\n            className=\"teal accent-4 narrower py-2 my-3 d-flex justify-content-between align-items-center\"\r\n          >\r\n            <div className=\"text-left\"></div>\r\n            <span className=\"white-text text-bold mx-3\">Banned Users</span>\r\n            <div className=\"text-right\"></div>\r\n          </MDBView>\r\n        </MDBCard>\r\n        <MDBCardBody>\r\n          <MDBDataTable striped responsive bordered small hover data={data} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n\r\n\r\n\r\n      <MDBModal\r\n        isOpen={editModal}\r\n        toggle={() => this.toggleEdit(user)}\r\n        inline={editModal === false}\r\n        backdrop={editModal === false ? false : true}\r\n        cascading\r\n        disableFocusTrap={editModal === false ? true : false}>\r\n        <MDBModalHeader\r\n          toggle={editModal === false ? () => { } : () => toggleEdit(user)}\r\n          className='teal accent-4 white-text'\r\n        >\r\n          <MDBIcon icon=\"add\" className='mr-2' />{' '}\r\n          Edit {user && user.firstName}'s Info\r\n        </MDBModalHeader>\r\n        <div className=\"alert-danger\">{feedback && feedback}</div>\r\n        <MDBModalBody className='mb-0'>\r\n          <MDBInput label='First Name' value={user && user.firstName} onChange={(val) => handleEditInput(val, \"firstName\")} />\r\n          <MDBInput label='Last Name' value={user && user.lastName} onChange={(val) => handleEditInput(val, \"lastName\")} />\r\n          <MDBInput label='Email' type=\"email\" value={user && user.email} onChange={(val) => handleEditInput(val, \"email\")} />\r\n          <MDBInput label='Phone Number' type=\"number\" value={user && user.phoneNumber} onChange={(val) => handleEditInput(val, \"phoneNumber\")} />\r\n          <div className='text-center mb-1-half'>\r\n            <MDBBtn\r\n              className='teal accent-4 mb-2'\r\n              onClick={() => handleEditUser()}\r\n            >{loading && (\r\n              <div className=\"spinner-border spinner-border-sm text-white\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </div>)}\r\n              Update\r\n              <MDBIcon icon=\"plus\" className='ml-1' />\r\n            </MDBBtn>\r\n          </div>\r\n        </MDBModalBody>\r\n      </MDBModal>\r\n\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default BannedUsers;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBContainer,\r\n  MDBDataTable,\r\n  MDBView,\r\n  MDBIcon,\r\n  MDBBadge,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBBtn,\r\n  MDBInput\r\n} from \"mdbreact\";\r\n\r\nconst AllListings = () => {\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [listings, setListings] = useState([]);\r\n  const [listing, setListing] = useState(null);\r\n  const [feedback, setFeedback] = useState(null);\r\n  const [editModal, setEditModal] = useState(false);\r\n\r\n  const toggleEdit = (listing) => {\r\n    setListing(listing);\r\n    setEditModal(!editModal);\r\n  }\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"S/N\",\r\n        field: \"sn\",\r\n      },\r\n      {\r\n        label: \"Listin Id\",\r\n        field: \"id\",\r\n      },\r\n      {\r\n        label: \"Name\",\r\n        field: \"name\",\r\n      },\r\n      {\r\n        label: \"Description\",\r\n        field: \"description\",\r\n      },\r\n      {\r\n        label: \"Price\",\r\n        field: \"price\",\r\n      },\r\n      {\r\n        label: \"Discount\",\r\n        field: \"discount\",\r\n      },\r\n      {\r\n        label: \"User\",\r\n        field: \"user\",\r\n      },\r\n      {\r\n        label: \"Availability\",\r\n        field: \"availability\",\r\n      },\r\n      {\r\n        label: \"Status\",\r\n        field: \"status\",\r\n      },\r\n      {\r\n        label: \"Action\",\r\n        field: \"action\",\r\n      },\r\n    ],\r\n    rows: !loading ? listings : [{\r\n      sn: <Skeleton />,\r\n      id: <Skeleton />,\r\n      name: <Skeleton />,\r\n      description: <Skeleton />,\r\n      price: <Skeleton />,\r\n      discount: <Skeleton />,\r\n      user: <Skeleton />,\r\n      availability: <Skeleton />,\r\n      action: <Skeleton />,\r\n      status: <Skeleton />\r\n    }]\r\n  };\r\n\r\n  const loadListings = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/listings`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        let sn = listings.length;\r\n        const rows = res.data.data.map(listing => {\r\n          const row = {\r\n            sn: sn + 1,\r\n            id: listing.id,\r\n            name: listing.name,\r\n            description: listing.description,\r\n            price: listing.price,\r\n            discount: listing.discount,\r\n            user: <Link className=\"teal-text\" to={`/user/${listing.user.id}`}>{listing.user.firstName} {listing.user.lastName}</Link>,\r\n            availability: listing.availability.to > Date.now() ? <MDBBadge color=\"success\">Available</MDBBadge> : <MDBBadge color=\"danger\">Expired</MDBBadge>,\r\n            status: listing.status === 2 ? <MDBBadge color=\"success\">Active</MDBBadge> : <MDBBadge className=\"danger-color\">Blocked</MDBBadge>,\r\n            action: listing.availability.to < Date.now() ? (<div>\r\n              <MDBBadge className=\"primary-color mr-1\" onClick={() => toggleEdit(listing)}><MDBIcon icon=\"edit\" className=\"white-text\" /></MDBBadge>\r\n              <MDBBadge className=\"danger-color\" onClick={() => handleDeleteListing(listing)}><MDBIcon icon=\"trash\" className=\"white-text\" /></MDBBadge>\r\n            </div>) : listing.status !== 2 ? (<div>\r\n              <MDBBadge className=\"primary-color\" onClick={() => toggleEdit(listing)}><MDBIcon icon=\"edit\" className=\"white-text\" /></MDBBadge>\r\n              <MDBBadge className=\"success-color mx-1\" onClick={() => handleActivateListing(listing)}><MDBIcon icon=\"check\" className=\"white-text\" /></MDBBadge>\r\n              <MDBBadge className=\"danger-color\" onClick={() => handleDeleteListing(listing)}><MDBIcon icon=\"trash\" className=\"white-text\" /></MDBBadge>\r\n            </div>) : (<div>\r\n              <MDBBadge className=\"primary-color mr-1\" onClick={() => toggleEdit(listing)}><MDBIcon icon=\"edit\" className=\"white-text\" /></MDBBadge>\r\n              <MDBBadge className=\"danger-color\" onClick={() => handleBlockListing(listing)}><MDBIcon icon=\"ban\" className=\"white-text\" /></MDBBadge>\r\n            </div>)\r\n          };\r\n          sn++;\r\n          return row;\r\n        })\r\n        setLoading(false);\r\n        setListings(rows);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        return [];\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadListings();\r\n  }, []);\r\n\r\n  const handleDeleteListing = (listing) => {\r\n    if (window.confirm(\"Are you sure you want to Delete this listing? \\nNB: This cannot be undone!\")) {\r\n      axios.delete(`${apiUrl}/listings/${listing.id}`, {\r\n        headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n      })\r\n        .then(res => {\r\n          if (res.data.success) {\r\n            window.location.reload();\r\n          }\r\n        })\r\n        .catch(err => {\r\n          return err;\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleActivateListing = (listing) => {\r\n    if (window.confirm(\"Are you sure you want to unblock this listing?\")) {\r\n      axios.put(`${apiUrl}/listings/${listing.id}`, { status: 2 }, {\r\n        headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n      })\r\n        .then(res => {\r\n          if (res.data.success) {\r\n            window.location.reload();\r\n          }\r\n        })\r\n        .catch(err => {\r\n          return err;\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleBlockListing = (listing) => {\r\n    if (window.confirm(\"Are you sure you want to Block this listing?\")) {\r\n      axios.put(`${apiUrl}/listings/${listing.id}`, { status: 1 }, {\r\n        headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n      })\r\n        .then(res => {\r\n          if (res.data.success) {\r\n            window.location.reload();\r\n          }\r\n        })\r\n        .catch(err => {\r\n          return err;\r\n        })\r\n    }\r\n  }\r\n\r\n\r\n  const handleEditInput = (val, data) => {\r\n    listing[data] = val.target.value;\r\n    setListing({ ...listing });\r\n  }\r\n  const handleEditListing = () => {\r\n    setLoading(true);\r\n    const data = {\r\n      name: listing.name,\r\n      proofOfOwnership: listing.proofOfOwnership,\r\n      description: listing.description,\r\n      price: parseInt(listing.price),\r\n      slug: listing.slug,\r\n      currency: listing.currency,\r\n      discount: parseInt(listing.discount),\r\n      windows: parseInt(listing.windows),\r\n    }\r\n    axios.put(`${apiUrl}/listings/${listing.id}`, data, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        if (res.data.success) {\r\n          window.location.reload();\r\n          return toggleEdit(listing);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        setFeedback(\"Unable to update listing!\");\r\n        return err;\r\n      })\r\n  }\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCard>\r\n        <MDBCard narrow className=\"z-depth-0\">\r\n          <MDBView\r\n            cascade\r\n            className=\"teal accent-4 narrower py-2 my-3 d-flex justify-content-between align-items-center\"\r\n          >\r\n            <div className=\"text-left\"></div>\r\n            <span className=\"white-text text-bold mx-3\">\r\n              All Listings\r\n            </span>\r\n            <div className=\"text-right\"></div>\r\n          </MDBView>\r\n        </MDBCard>\r\n        <MDBCardBody>\r\n          <MDBDataTable striped responsive bordered small hover data={data} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n\r\n\r\n      <MDBModal\r\n        isOpen={editModal}\r\n        toggle={() => this.toggleEdit(listing)}\r\n        inline={editModal === false}\r\n        backdrop={editModal === false ? false : true}\r\n        cascading\r\n        disableFocusTrap={editModal === false ? true : false}>\r\n        <MDBModalHeader\r\n          toggle={editModal === false ? () => { } : () => toggleEdit(listing)}\r\n          className='teal accent-4 white-text'\r\n        >\r\n          <MDBIcon icon=\"add\" className='mr-2' />{' '}\r\n          Edit {listing && listing.name}'s Details\r\n        </MDBModalHeader>\r\n        <div className=\"alert-danger\">{feedback && feedback}</div>\r\n        <MDBModalBody className='mb-0'>\r\n          <MDBInput label='Name' value={listing && listing.name} onChange={(val) => handleEditInput(val, \"name\")} />\r\n          <MDBInput label='Proof Of  Ownership' value={listing && listing.proofOfOwnership} onChange={(val) => handleEditInput(val, \"proofOfOwnership\")} />\r\n          <MDBInput label='Description' value={listing && listing.description} onChange={(val) => handleEditInput(val, \"description\")} />\r\n          <MDBInput label='Price' value={listing && listing.price} onChange={(val) => handleEditInput(val, \"price\")} />\r\n          <MDBInput label='Slug' value={listing && listing.slug} onChange={(val) => handleEditInput(val, \"slug\")} />\r\n          <MDBInput label='Currency' value={listing && listing.currency} onChange={(val) => handleEditInput(val, \"currency\")} />\r\n          <MDBInput label='Discount' value={listing && listing.discount} onChange={(val) => handleEditInput(val, \"discount\")} />\r\n          <MDBInput label='Windows' value={listing && listing.windows} onChange={(val) => handleEditInput(val, \"windows\")} />\r\n          <div className='text-center mb-1-half'>\r\n            <MDBBtn\r\n              className='teal accent-4 mb-2'\r\n              onClick={() => handleEditListing()}\r\n            >{loading && (\r\n              <div className=\"spinner-border spinner-border-sm text-white\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </div>)}\r\n              Update\r\n              <MDBIcon icon=\"plus\" className='ml-1' />\r\n            </MDBBtn>\r\n          </div>\r\n        </MDBModalBody>\r\n      </MDBModal>\r\n\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default AllListings;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { Link } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport { money } from \"../../functions\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBContainer,\r\n  MDBDataTable,\r\n  MDBView,\r\n  MDBBadge,\r\n  MDBIcon,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBBtn,\r\n  MDBInput\r\n} from \"mdbreact\";\r\n\r\nconst AvailableListings = () => {\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [listings, setListings] = useState([]);\r\n  const [listing, setListing] = useState(null);\r\n  const [feedback, setFeedback] = useState(null);\r\n  const [editModal, setEditModal] = useState(false);\r\n\r\n  const toggleEdit = (listing) => {\r\n    setListing(listing);\r\n    setEditModal(!editModal);\r\n  }\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"S/N\",\r\n        field: \"sn\",\r\n      },\r\n      {\r\n        label: \"Listin Id\",\r\n        field: \"id\",\r\n      },\r\n      {\r\n        label: \"Name\",\r\n        field: \"name\",\r\n      },\r\n      {\r\n        label: \"Description\",\r\n        field: \"description\",\r\n      },\r\n      {\r\n        label: \"Price\",\r\n        field: \"price\",\r\n      },\r\n      {\r\n        label: \"Discount\",\r\n        field: \"discount\",\r\n      },\r\n      {\r\n        label: \"User\",\r\n        field: \"user\",\r\n      },\r\n      {\r\n        label: \"Status\",\r\n        field: \"status\",\r\n      },\r\n      {\r\n        label: \"Expiry Date\",\r\n        field: \"date\",\r\n      },\r\n      {\r\n        label: \"Action\",\r\n        field: \"action\",\r\n      },\r\n    ],\r\n    rows: !loading ? listings : [{\r\n      sn: <Skeleton />,\r\n      id: <Skeleton />,\r\n      name: <Skeleton />,\r\n      description: <Skeleton />,\r\n      price: <Skeleton />,\r\n      discount: <Skeleton />,\r\n      user: <Skeleton />,\r\n      action: <Skeleton />,\r\n      status: <Skeleton />,\r\n      date: <Skeleton />\r\n    }]\r\n  };\r\n\r\n  const loadListings = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/listings`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        let sn = listings.length;\r\n        const rows = res.data.data.map(listing => {\r\n          if (listing.availability.to > Date.now()) {\r\n            const row = {\r\n              sn: sn + 1,\r\n              id: listing.id,\r\n              name: listing.name,\r\n              description: listing.description,\r\n              price: <>&#8358; {money.format(listing.price)}</>,\r\n              discount: <>&#8358; {money.format(listing.discount)} </>,\r\n              user: <Link className=\"teal-text\" to={`/user/${listing.user.id}`}>{listing.user.firstName} {listing.user.lastName}</Link>,\r\n              status: listing.status === 2 ? <MDBBadge color=\"success\">Active</MDBBadge> : <MDBBadge className=\"danger-color\">Blocked</MDBBadge>,\r\n              date: moment(parseInt(listing.availability.to)).format('L'),\r\n              action: listing.status === 2 ? (<div>\r\n                <MDBBadge className=\"primary-color mr-1\" onClick={() => toggleEdit(listing)}><MDBIcon icon=\"edit\" className=\"white-text\" /></MDBBadge>\r\n                <MDBBadge className=\"danger-color\" onClick={() => handleBlockListing(listing)}><MDBIcon icon=\"ban\" className=\"white-text\" /></MDBBadge>\r\n              </div>) : (<div>\r\n                <MDBBadge className=\"primary-color\" onClick={() => toggleEdit(listing)}><MDBIcon icon=\"edit\" className=\"white-text\" /></MDBBadge>\r\n                <MDBBadge className=\"success-color mx-1\" onClick={() => handleActivateListing(listing)}><MDBIcon icon=\"check\" className=\"white-text\" /></MDBBadge>\r\n                <MDBBadge className=\"danger-color\" onClick={() => handleDeleteListing(listing)}><MDBIcon icon=\"trash\" className=\"white-text\" /></MDBBadge>\r\n              </div>)\r\n            };\r\n            sn++;\r\n            return row;\r\n          }\r\n          return null;\r\n        })\r\n        setLoading(false);\r\n        setListings(rows);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        return [];\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadListings();\r\n  }, []);\r\n\r\n  const handleActivateListing = (listing) => {\r\n    if (window.confirm(\"Are you sure you want to unblock this listing?\")) {\r\n      axios.put(`${apiUrl}/listings/${listing.id}`, { status: 2 }, {\r\n        headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n      })\r\n        .then(res => {\r\n          if (res.data.success) {\r\n            window.location.reload();\r\n          }\r\n        })\r\n        .catch(err => {\r\n          return err;\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleDeleteListing = (listing) => {\r\n    if (window.confirm(\"Are you sure you want to Delete this listing? \\nNB: This cannot be undone!\")) {\r\n      axios.delete(`${apiUrl}/listings/${listing.id}`, {\r\n        headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n      })\r\n        .then(res => {\r\n          if (res.data.success) {\r\n            window.location.reload();\r\n          }\r\n        })\r\n        .catch(err => {\r\n          return err;\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleBlockListing = (listing) => {\r\n    if (window.confirm(\"Are you sure you want to Block this listing?\")) {\r\n      axios.put(`${apiUrl}/listings/${listing.id}`, { status: 1 }, {\r\n        headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n      })\r\n        .then(res => {\r\n          if (res.data.success) {\r\n            window.location.reload();\r\n          }\r\n        })\r\n        .catch(err => {\r\n          return err;\r\n        })\r\n    }\r\n  }\r\n\r\n\r\n  const handleEditInput = (val, data) => {\r\n    listing[data] = val.target.value;\r\n    setListing({ ...listing });\r\n  }\r\n  const handleEditListing = () => {\r\n    setLoading(true);\r\n    const data = {\r\n      name: listing.name,\r\n      proofOfOwnership: listing.proofOfOwnership,\r\n      description: listing.description,\r\n      price: parseInt(listing.price),\r\n      slug: listing.slug,\r\n      currency: listing.currency,\r\n      discount: parseInt(listing.discount),\r\n      windows: parseInt(listing.windows),\r\n    }\r\n    axios.put(`${apiUrl}/listings/${listing.id}`, data, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        if (res.data.success) {\r\n          window.location.reload();\r\n          return toggleEdit(listing);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        setFeedback(\"Unable to update listing!\");\r\n        return err;\r\n      })\r\n  }\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCard>\r\n        <MDBCard narrow className=\"z-depth-0\">\r\n          <MDBView\r\n            cascade\r\n            className=\"teal accent-4 narrower py-2 my-3 d-flex justify-content-between align-items-center\"\r\n          >\r\n            <div className=\"text-left\"></div>\r\n            <span className=\"white-text text-bold mx-3\">\r\n              Available Listings\r\n            </span>\r\n            <div className=\"text-right\"></div>\r\n          </MDBView>\r\n        </MDBCard>\r\n        <MDBCardBody>\r\n          <MDBDataTable striped responsive bordered small hover data={data} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n\r\n\r\n      <MDBModal\r\n        isOpen={editModal}\r\n        toggle={() => this.toggleEdit(listing)}\r\n        inline={editModal === false}\r\n        backdrop={editModal === false ? false : true}\r\n        cascading\r\n        disableFocusTrap={editModal === false ? true : false}>\r\n        <MDBModalHeader\r\n          toggle={editModal === false ? () => { } : () => toggleEdit(listing)}\r\n          className='teal accent-4 white-text'\r\n        >\r\n          <MDBIcon icon=\"add\" className='mr-2' />{' '}\r\n          Edit {listing && listing.name}'s Details\r\n        </MDBModalHeader>\r\n        <div className=\"alert-danger\">{feedback && feedback}</div>\r\n        <MDBModalBody className='mb-0'>\r\n          <MDBInput label='Name' value={listing && listing.name} onChange={(val) => handleEditInput(val, \"name\")} />\r\n          <MDBInput label='Proof Of  Ownership' value={listing && listing.proofOfOwnership} onChange={(val) => handleEditInput(val, \"proofOfOwnership\")} />\r\n          <MDBInput label='Description' value={listing && listing.description} onChange={(val) => handleEditInput(val, \"description\")} />\r\n          <MDBInput label='Price' value={listing && listing.price} onChange={(val) => handleEditInput(val, \"price\")} />\r\n          <MDBInput label='Slug' value={listing && listing.slug} onChange={(val) => handleEditInput(val, \"slug\")} />\r\n          <MDBInput label='Currency' value={listing && listing.currency} onChange={(val) => handleEditInput(val, \"currency\")} />\r\n          <MDBInput label='Discount' value={listing && listing.discount} onChange={(val) => handleEditInput(val, \"discount\")} />\r\n          <MDBInput label='Windows' value={listing && listing.windows} onChange={(val) => handleEditInput(val, \"windows\")} />\r\n          <div className='text-center mb-1-half'>\r\n            <MDBBtn\r\n              className='teal accent-4 mb-2'\r\n              onClick={() => handleEditListing()}\r\n            >{loading && (\r\n              <div className=\"spinner-border spinner-border-sm text-white\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </div>)}\r\n              Update\r\n              <MDBIcon icon=\"plus\" className='ml-1' />\r\n            </MDBBtn>\r\n          </div>\r\n        </MDBModalBody>\r\n      </MDBModal>\r\n\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default AvailableListings;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport moment from \"moment\";\r\nimport { money } from \"../../functions\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBContainer,\r\n  MDBDataTable,\r\n  MDBView,\r\n  MDBBadge\r\n} from \"mdbreact\";\r\n\r\nconst AllRequisitions = () => {\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [requisitions, setRequisitions] = useState([]);\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"S/N\",\r\n        field: \"sn\",\r\n      },\r\n      {\r\n        label: \"Requisition ID\",\r\n        field: \"id\",\r\n      },\r\n      {\r\n        label: \"Listing\",\r\n        field: \"listing\",\r\n      },\r\n      {\r\n        label: \"Products\",\r\n        field: \"products\",\r\n      },\r\n      {\r\n        label: \"Cost\",\r\n        field: \"cost\",\r\n      },\r\n      {\r\n        label: \"Duration\",\r\n        field: \"duration\",\r\n      },\r\n      {\r\n        label: \"Space\",\r\n        field: \"space\",\r\n      },\r\n      {\r\n        label: \"Expires\",\r\n        field: \"expires\",\r\n      },\r\n      {\r\n        label: \"Status\",\r\n        field: \"status\",\r\n      },\r\n    ],\r\n    rows: !loading ? requisitions : [{\r\n      sn: <Skeleton />,\r\n      id: <Skeleton />,\r\n      listing: <Skeleton />,\r\n      products: <Skeleton />,\r\n      cost: <Skeleton />,\r\n      duration: <Skeleton />,\r\n      space: <Skeleton />,\r\n      expires: <Skeleton />,\r\n      status: <Skeleton />\r\n    }]\r\n  };\r\n\r\n  const loadRequisitions = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/requisitions`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        let sn = requisitions.length;\r\n        const rows = res.data.data.map(requisition => {\r\n          const row = {\r\n            sn: sn + 1,\r\n            id: requisition.id,\r\n            listing: requisition.listing.id,\r\n            products: requisition.products.length,\r\n            cost: <>&#8358; {money.format(requisition.cost.baseCost)}</>,\r\n            duration: requisition.duration.name,\r\n            space: requisition.space,\r\n            expires: moment(parseInt(requisition.expires)).format(\"L\"),\r\n            status: requisition.status === 2 ? <MDBBadge color=\"success\">Active</MDBBadge> : <MDBBadge className=\"danger-color\">Canclled</MDBBadge>,\r\n          };\r\n          sn++;\r\n          return row;\r\n        })\r\n        setLoading(false);\r\n        setRequisitions(rows);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        return [];\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadRequisitions();\r\n  }, []);\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCard>\r\n        <MDBCard narrow className=\"z-depth-0\">\r\n          <MDBView\r\n            cascade\r\n            className=\"teal accent-4 narrower py-2 my-3 d-flex justify-content-between align-items-center\"\r\n          >\r\n            <div className=\"text-left\"></div>\r\n            <span className=\"white-text text-bold mx-3\">\r\n              All Requisitions\r\n            </span>\r\n            <div className=\"text-right\"></div>\r\n          </MDBView>\r\n        </MDBCard>\r\n        <MDBCardBody>\r\n          <MDBDataTable striped responsive bordered small hover data={data} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default AllRequisitions;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { money } from \"../../functions\";\r\nimport moment from \"moment\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBContainer,\r\n  MDBDataTable,\r\n  MDBView,\r\n  MDBBadge,\r\n  MDBIcon,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBBtn,\r\n  MDBInput\r\n} from \"mdbreact\";\r\n\r\nconst ExpiredListings = () => {\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [listings, setListings] = useState([]);\r\n  const [listing, setListing] = useState(null);\r\n  const [feedback, setFeedback] = useState(null);\r\n  const [editModal, setEditModal] = useState(false);\r\n\r\n  const toggleEdit = (listing) => {\r\n    setListing(listing);\r\n    setEditModal(!editModal);\r\n  }\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"S/N\",\r\n        field: \"sn\",\r\n      },\r\n      {\r\n        label: \"Listin Id\",\r\n        field: \"id\",\r\n      },\r\n      {\r\n        label: \"Name\",\r\n        field: \"name\",\r\n      },\r\n      {\r\n        label: \"Description\",\r\n        field: \"description\",\r\n      },\r\n      {\r\n        label: \"Price\",\r\n        field: \"price\",\r\n      },\r\n      {\r\n        label: \"Discount\",\r\n        field: \"discount\",\r\n      },\r\n      {\r\n        label: \"User\",\r\n        field: \"user\",\r\n      },\r\n      {\r\n        label: \"Status\",\r\n        field: \"status\",\r\n      },\r\n      {\r\n        label: \"Date Expired\",\r\n        field: \"date\",\r\n      },\r\n      {\r\n        label: \"Action\",\r\n        field: \"action\",\r\n      },\r\n    ],\r\n    rows: !loading ? listings : [{\r\n      sn: <Skeleton />,\r\n      id: <Skeleton />,\r\n      name: <Skeleton />,\r\n      description: <Skeleton />,\r\n      price: <Skeleton />,\r\n      discount: <Skeleton />,\r\n      user: <Skeleton />,\r\n      action: <Skeleton />,\r\n      status: <Skeleton />,\r\n      date: <Skeleton />\r\n    }]\r\n  };\r\n\r\n  const loadListings = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/listings`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        let sn = listings.length;\r\n        const rows = res.data.data.map(listing => {\r\n          if (listing.availability.to < Date.now()) {\r\n            const row = {\r\n              sn: sn + 1,\r\n              id: listing.id,\r\n              name: listing.name,\r\n              description: listing.description,\r\n              price: listing.price,\r\n              discount: <>&#8358; {money.format(listing.discount)} </>,\r\n              user: <Link className=\"teal-text\" to={`/user/${listing.user.id}`}>{listing.user.firstName} {listing.user.lastName}</Link>,\r\n              status: listing.status === 2 ? <MDBBadge color=\"success\">Active</MDBBadge> : <MDBBadge className=\"danger-color\">Blocked</MDBBadge>,\r\n              date: moment(parseInt(listing.availability.to)).format('L'),\r\n              action: (<div>\r\n                <MDBBadge className=\"primary-color mx-1\" onClick={() => toggleEdit(listing)}><MDBIcon icon=\"edit\" className=\"white-text\" /></MDBBadge>\r\n                <MDBBadge className=\"danger-color\" onClick={() => handleDeleteListing(listing)}><MDBIcon icon=\"trash\" className=\"white-text\" /></MDBBadge>\r\n              </div>)\r\n            };\r\n            sn++;\r\n            return row;\r\n          }\r\n          return null;\r\n        })\r\n        setLoading(false);\r\n        setListings(rows);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        return [];\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadListings();\r\n  }, []);\r\n\r\n\r\n  const handleDeleteListing = (listing) => {\r\n    if (window.confirm(\"Are you sure you want to Delete this listing? \\nNB: This cannot be undone!\")) {\r\n      axios.delete(`${apiUrl}/listings/${listing.id}`, {\r\n        headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n      })\r\n        .then(res => {\r\n          if (res.data.success) {\r\n            window.location.reload();\r\n          }\r\n        })\r\n        .catch(err => {\r\n          return err;\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleEditInput = (val, data) => {\r\n    listing[data] = val.target.value;\r\n    setListing({ ...listing });\r\n  }\r\n  const handleEditListing = () => {\r\n    setLoading(true);\r\n    const data = {\r\n      name: listing.name,\r\n      proofOfOwnership: listing.proofOfOwnership,\r\n      description: listing.description,\r\n      price: parseInt(listing.price),\r\n      slug: listing.slug,\r\n      currency: listing.currency,\r\n      discount: parseInt(listing.discount),\r\n      windows: parseInt(listing.windows),\r\n    }\r\n    axios.put(`${apiUrl}/listings/${listing.id}`, data, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        if (res.data.success) {\r\n          window.location.reload();\r\n          return toggleEdit(listing);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        setFeedback(\"Unable to update listing!\");\r\n        return err;\r\n      })\r\n  }\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCard>\r\n        <MDBCard narrow className=\"z-depth-0\">\r\n          <MDBView\r\n            cascade\r\n            className=\"teal accent-4 narrower py-2 my-3 d-flex justify-content-between align-items-center\"\r\n          >\r\n            <div className=\"text-left\"></div>\r\n            <span className=\"white-text text-bold mx-3\">\r\n              Available Listings\r\n            </span>\r\n            <div className=\"text-right\"></div>\r\n          </MDBView>\r\n        </MDBCard>\r\n        <MDBCardBody>\r\n          <MDBDataTable striped responsive bordered small hover data={data} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n\r\n      <MDBModal\r\n        isOpen={editModal}\r\n        toggle={() => this.toggleEdit(listing)}\r\n        inline={editModal === false}\r\n        backdrop={editModal === false ? false : true}\r\n        cascading\r\n        disableFocusTrap={editModal === false ? true : false}>\r\n        <MDBModalHeader\r\n          toggle={editModal === false ? () => { } : () => toggleEdit(listing)}\r\n          className='teal accent-4 white-text'\r\n        >\r\n          <MDBIcon icon=\"add\" className='mr-2' />{' '}\r\n          Edit {listing && listing.name}'s Details\r\n        </MDBModalHeader>\r\n        <div className=\"alert-danger\">{feedback && feedback}</div>\r\n        <MDBModalBody className='mb-0'>\r\n          <MDBInput label='Name' value={listing && listing.name} onChange={(val) => handleEditInput(val, \"name\")} />\r\n          <MDBInput label='Proof Of  Ownership' value={listing && listing.proofOfOwnership} onChange={(val) => handleEditInput(val, \"proofOfOwnership\")} />\r\n          <MDBInput label='Description' value={listing && listing.description} onChange={(val) => handleEditInput(val, \"description\")} />\r\n          <MDBInput label='Price' value={listing && listing.price} onChange={(val) => handleEditInput(val, \"price\")} />\r\n          <MDBInput label='Slug' value={listing && listing.slug} onChange={(val) => handleEditInput(val, \"slug\")} />\r\n          <MDBInput label='Currency' value={listing && listing.currency} onChange={(val) => handleEditInput(val, \"currency\")} />\r\n          <MDBInput label='Discount' value={listing && listing.discount} onChange={(val) => handleEditInput(val, \"discount\")} />\r\n          <MDBInput label='Windows' value={listing && listing.windows} onChange={(val) => handleEditInput(val, \"windows\")} />\r\n          <div className='text-center mb-1-half'>\r\n            <MDBBtn\r\n              className='teal accent-4 mb-2'\r\n              onClick={() => handleEditListing()}\r\n            >{loading && (\r\n              <div className=\"spinner-border spinner-border-sm text-white\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </div>)}\r\n              Update\r\n              <MDBIcon icon=\"plus\" className='ml-1' />\r\n            </MDBBtn>\r\n          </div>\r\n        </MDBModalBody>\r\n      </MDBModal>\r\n\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default ExpiredListings;\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// PAGES\r\nimport Dashboard from \"../pages/Dashboard\";\r\nimport EmailNotifications from \"../pages/EmailNotifications\";\r\nimport SingleUser from \"../pages/SingleUser\";\r\n\r\n// INVENTORY LOG\r\nimport DispatchOrderLog from \"../pages/InventoryLog/DispatchOrderLog\";\r\nimport RejectedStockLog from \"../pages/InventoryLog/RejectedStockLog\";\r\nimport StockReceiptLog from \"../pages/InventoryLog/StockReceiptLog\";\r\n\r\n// SETTNIGS\r\nimport EditPassword from \"../pages/Settings/EditPassword\";\r\nimport EmailSettings from \"../pages/Settings/EmailSettings\";\r\nimport SmsSettings from \"../pages/Settings/SmsSettings\";\r\n\r\n// STAFF MANAGEMENT\r\nimport AddNewStaff from \"../pages/StaffManagement/AddNewStaff\";\r\nimport AllStaff from \"../pages/StaffManagement/AllStaff\";\r\nimport RoleManagement from \"../pages/StaffManagement/RoleManagement\";\r\n\r\n// TRANSACTION LOG\r\nimport ExpiredRentLog from \"../pages/TransactionLog/ExpiredRentLog\";\r\nimport MerchantPayoutLog from \"../pages/TransactionLog/MerchantPayoutLog\";\r\nimport ReferralLog from \"../pages/TransactionLog/ReferralLog\";\r\nimport WareHousersPaymentLog from \"../pages/TransactionLog/WareHousersPaymentLog\";\r\nimport WithdrawalLog from \"../pages/TransactionLog/WithdrawalLog\";\r\n\r\n// USER MANAGEMENT\r\nimport AllMerchants from \"../pages/UserManagement/AllMerchants\";\r\nimport AllUsers from \"../pages/UserManagement/AllUsers\";\r\nimport AllWarehouser from \"../pages/UserManagement/AllWarehouser\";\r\nimport BannedUsers from \"../pages/UserManagement/BannedUsers\";\r\n\r\n// LISTING MANAGEMENT\r\nimport AllListings from \"../pages/ListingManagement/AllListings\"\r\nimport AvailableListings from \"../pages/ListingManagement/AvailableListings\"\r\nimport AllRequisitions from \"../pages/ListingManagement/AllRequisitions\"\r\nimport ExpiredListings from \"../pages/ListingManagement/ExpiredListings\"\r\n\r\n\r\n\r\nconst FourToFour = () => <h1 className=\"text-center\">404</h1>;\r\n\r\nconst mapStateToProps = state => ({\r\n  permit: state.permission\r\n})\r\n\r\nclass Routes extends React.Component {\r\n\r\n  isLogged = this.props.isLogged;\r\n\r\n  requiresAuth = (Comp, match = \"\") => {\r\n    if (this.isLogged || localStorage.getItem(\"token\")) {\r\n      return <Comp match={match} />;\r\n    } else {\r\n      return <Redirect to=\"/login\" />\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { permit } = this.props;\r\n    return (\r\n      <Switch>\r\n        <Route path=\"/\" exact render={({ match }) => this.requiresAuth(Dashboard, match)} />\r\n        <Route\r\n          path=\"/email-notification\"\r\n          exact\r\n          render={({ match }) => this.requiresAuth(EmailNotifications, match)}\r\n        />\r\n        <Route\r\n          path=\"/user/:id\"\r\n          exact\r\n          render={({ match }) => this.requiresAuth(SingleUser, match)}\r\n        />\r\n\r\n        {/* INVENTORY LOG */}\r\n        <Route\r\n          path=\"/logs/dispatch-order-log\"\r\n          exact\r\n          render={({ match }) => this.requiresAuth(DispatchOrderLog, match)}\r\n        />\r\n        <Route\r\n          path=\"/logs/rejected-stock-log\"\r\n          exact\r\n          render={({ match }) => this.requiresAuth(RejectedStockLog)}\r\n        />\r\n        <Route\r\n          path=\"/logs/stock-receipt-log\"\r\n          exact\r\n          render={({ match }) => this.requiresAuth(StockReceiptLog)}\r\n        />\r\n\r\n        {/* SETTINGS */}\r\n        <Route path=\"/settings/edit-password\" exact render={({ match }) => this.requiresAuth(EditPassword)} />\r\n        {/* {(permission === 1 || this.permission === 2) && (<> */}\r\n        <Route\r\n          path=\"/settings/email-settings\"\r\n          exact\r\n          render={({ match }) => this.requiresAuth(EmailSettings)}\r\n        />\r\n        <Route path=\"/settings/sms-settings\" exact render={({ match }) => this.requiresAuth(SmsSettings)} />\r\n        {/* </>)} */}\r\n\r\n        {/* STAFF MANAGEMENT */}\r\n        {permit.management && <Route path=\"/staff/add-staff\" exact render={({ match }) => this.requiresAuth(AddNewStaff, match)} />}\r\n        {permit.management && <Route path=\"/staff/all-staff\" exact render={({ match }) => this.requiresAuth(AllStaff, match)} />}\r\n        {permit.management && <Route path=\"/staff/role-management\" exact render={({ match }) => this.requiresAuth(RoleManagement, match)} />}\r\n\r\n        {/* TRANSACTION LOG */}\r\n        {permit.management && <Route path=\"/logs/expired-rent-log\" exact render={({ match }) => this.requiresAuth(ExpiredRentLog, match)} />}\r\n        {permit.management && <Route\r\n          path=\"/logs/merchant-payout-log\"\r\n          exact\r\n          render={({ match }) => this.requiresAuth(MerchantPayoutLog, match)}\r\n        />}\r\n        {permit.management && <Route path=\"/logs/referral-log\" exact render={({ match }) => this.requiresAuth(ReferralLog, match)} />}\r\n        {permit.management && <Route\r\n          path=\"/logs/warehousers-payment-log\"\r\n          exact\r\n          render={({ match }) => this.requiresAuth(WareHousersPaymentLog, match)}\r\n        />}\r\n        {permit.management && <Route path=\"/logs/withdrawal-log\" exact render={({ match }) => this.requiresAuth(WithdrawalLog, match)} />}\r\n\r\n        {/* USER MANAGEMENT */}\r\n        <Route path=\"/users/merchants\" exact render={({ match }) => this.requiresAuth(AllMerchants, match)} />\r\n        <Route path=\"/users/all-users\" exact render={({ match }) => this.requiresAuth(AllUsers, match)} />\r\n        <Route path=\"/users/warehousers\" exact render={({ match }) => this.requiresAuth(AllWarehouser, match)} />\r\n        <Route path=\"/users/banned-users\" exact render={({ match }) => this.requiresAuth(BannedUsers, match)} />\r\n\r\n        {/* LISTING MANAGEMENT */}\r\n        <Route path=\"/listings\" exact render={({ match }) => this.requiresAuth(AllListings, match)} />\r\n        <Route path=\"/listings/available-listings\" exact render={({ match }) => this.requiresAuth(AvailableListings, match)} />\r\n        <Route path=\"/listings/requisitions\" exact render={({ match }) => this.requiresAuth(AllRequisitions, match)} />\r\n        <Route path=\"/listings/expired-listings\" exact render={({ match }) => this.requiresAuth(ExpiredListings, match)} />\r\n\r\n\r\n        <Route render={({ location }) => {\r\n          if (location.pathname === \"/login\") return <Redirect to=\"/\" />;\r\n          return <FourToFour />\r\n        }} />\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Routes);\r\n","import React, { Component } from \"react\";\r\nimport \"../App.css\";\r\nimport SideNavigation from \"./SideNavigation\";\r\nimport TopNavigation from \"./TopNavigation\";\r\nimport Copyrights from \"./Footer\";\r\nimport Routes from \"./Routes\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      toggle: false,\r\n      windowWidth: 0,\r\n      currentPage: \"\",\r\n      sideNavToggled: false,\r\n      breakWidth: 1400\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps, nextProps, snapshot) {\r\n    if (this.props.location.pathname !== prevProps.location.pathname) {\r\n      this.assessLocation(this.props.location.pathname);\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.handleResize();\r\n    window.addEventListener(\"resize\", this.handleResize);\r\n    this.assessLocation(this.props.location.pathname);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.handleResize);\r\n  }\r\n\r\n  handleResize = () => {\r\n    this.setState({\r\n      windowWidth: window.innerWidth\r\n    });\r\n  };\r\n\r\n  toggleSideNav = () => {\r\n    if (this.state.windowWidth < this.state.breakWidth) {\r\n      this.setState({\r\n        sideNavToggled: !this.state.sideNavToggled\r\n      });\r\n    }\r\n  };\r\n\r\n  assessLocation = location => {\r\n    let locationString;\r\n    switch (location) {\r\n      // Dashboards:\r\n      case \"/\":\r\n        locationString = \"Dashboard\";\r\n        break;\r\n      case \"/email-notifications\":\r\n        locationString = \"Email Notification\";\r\n        break;\r\n      case \"/logs/dispatch-order-log\":\r\n        locationString = \"Dispatch Orders\";\r\n        break;\r\n      case \"/logs/rejected-stock-log\":\r\n        locationString = \"Rejected Stocks\";\r\n        break;\r\n      case \"/logs/stock-receipt-log\":\r\n        locationString = \"Stock Receipts\";\r\n        break;\r\n      case \"/settings/edit-password\":\r\n        locationString = \"Edit Password\";\r\n        break;\r\n      case \"/settings/email-settings\":\r\n        locationString = \"Email Setting\";\r\n        break;\r\n      case \"/settings/sms-settings\":\r\n        locationString = \"SMS Setting\";\r\n        break;\r\n      case \"/staff/add-staff\":\r\n        locationString = \"Add Staff\";\r\n        break;\r\n      case \"/staff/all-staff\":\r\n        locationString = \"All Staff\";\r\n        break;\r\n      case \"/staff/management\":\r\n        locationString = \"Management\";\r\n        break;\r\n      case \"/staff/super-admin\":\r\n        locationString = \"Super Admin\";\r\n        break;\r\n      case \"/staff/support\":\r\n        locationString = \"Support\";\r\n        break;\r\n      case \"/staff/team-lead\":\r\n        locationString = \"Team Lead\";\r\n        break;\r\n      case \"/logs/expired-rent-log\":\r\n        locationString = \"Expired Rents\";\r\n        break;\r\n      case \"/logs/merchant-payout-log\":\r\n        locationString = \"Merchant Payouts\";\r\n        break;\r\n      case \"/logs/referral-log\":\r\n        locationString = \"Referrals\";\r\n        break;\r\n      case \"/logs/warehousers-payment-log\":\r\n        locationString = \"Wayhousers' Payments\";\r\n        break;\r\n      case \"/logs/withdrawal-log\":\r\n        locationString = \"Withdrawals\";\r\n        break;\r\n      case \"/users/merchants\":\r\n        locationString = \"Merchants\";\r\n        break;\r\n      case \"/users/all-users\":\r\n        locationString = \"All Users\";\r\n        break;\r\n      case \"/users/warehousers\":\r\n        locationString = \"WareHousers\";\r\n        break;\r\n      case \"/users/banned-users\":\r\n        locationString = \"Banned Users\";\r\n        break;\r\n      case \"/users/user-rating-history\":\r\n        locationString = \"User Rating History\";\r\n        break;\r\n      case \"/listings\":\r\n        locationString = \"All Listings\";\r\n        break;\r\n      case \"/listings/available-listings\":\r\n        locationString = \"Available Listings\";\r\n        break;\r\n      case \"/listings/expired-listings\":\r\n        locationString = \"Expired Listings\";\r\n        break;\r\n      case \"/listings/requisitions\":\r\n        locationString = \"All Requisitions\";\r\n        break;\r\n      default:\r\n    }\r\n    this.setState({\r\n      currentPage: locationString\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const dynamicLeftPadding = {\r\n      paddingLeft:\r\n        this.state.windowWidth > this.state.breakWidth ? \"240px\" : \"0\"\r\n    };\r\n\r\n    return (\r\n      <div className=\"app\">\r\n        <div className=\"white-skin\">\r\n          <SideNavigation\r\n            breakWidth={this.state.breakWidth}\r\n            style={{ transition: \"all .3s\" }}\r\n            triggerOpening={this.state.sideNavToggled}\r\n            onLinkClick={() => this.toggleSideNav()}\r\n          />\r\n        </div>\r\n        <div className=\"flexible-content white-skin\">\r\n          <TopNavigation\r\n            toggle={this.state.windowWidth < this.state.breakWidth}\r\n            onSideNavToggleClick={this.toggleSideNav}\r\n            routeName={this.state.currentPage}\r\n            className=\"white-skin\"\r\n          />\r\n          <main style={{ ...dynamicLeftPadding, margin: \"8rem 6% 6rem\" }}>\r\n            <Routes onChange={() => this.assessLocation()} />\r\n          </main>\r\n          <Copyrights\r\n            style={{ ...dynamicLeftPadding, position: \"fixed\", width: \"100%\" }}\r\n            className=\"d-none d-lg-block\"\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  MDBBtn,\r\n  MDBContainer,\r\n  MDBCol,\r\n  MDBInput,\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBLink,\r\n} from 'mdbreact';\r\nimport { useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { LogIn } from \"../../Redux/actions/authentication\";\r\nimport Logo from \"../../assets/ginjabox.png\";\r\nimport { apiUrl } from \"../../config\";\r\n\r\nconst validateEmail = (email) => {\r\n  const exp = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i;\r\n  return exp.test(String(email).toLowerCase());\r\n}\r\n\r\nconst Login = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  // const firstTimeLaunch = () => {\r\n  //   axios.post(`${apiUrl}/`, { create: \"Super Admin\" })\r\n  //     .then(res => {\r\n  //       console.log(res.data);\r\n  //     })\r\n  //     .catch(err => {\r\n  //       console.log(err.response);\r\n  //     })\r\n  // }\r\n  // useEffect(() => {\r\n  //   firstTimeLaunch();\r\n  // }, []);\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [feedback, setFeedback] = useState(null);\r\n  const [success, setSuccess] = useState(null);\r\n  const [loader, setLoader] = useState(false);\r\n\r\n  const authenticate = async (email, password) => {\r\n    email.toLowerCase();\r\n    setLoader(true);\r\n    const data = { email, password }\r\n\r\n    await axios.post(`${apiUrl}/authenticate`, data)\r\n      .then(res => {\r\n        const { data, message } = res.data\r\n        dispatch(LogIn(data));\r\n        setLoader(false);\r\n        setSuccess(message);\r\n      })\r\n      .catch(err => {\r\n        setLoader(false);\r\n        setFeedback(err.response.data.message);\r\n      })\r\n\r\n  }\r\n\r\n  const goToDashboard = () => {\r\n    setFeedback(null);\r\n    if (!email) {\r\n      setLoader(false);\r\n      return setFeedback(\"Email field cannot be empty!\")\r\n    };\r\n    if (!validateEmail(email)) {\r\n      setLoader(false);\r\n      return setFeedback(\"Invalid email address!\")\r\n    };\r\n    if (!password) {\r\n      setLoader(false);\r\n      return setFeedback(\"Password field cannot be empty!\")\r\n    }\r\n    authenticate(email, password);\r\n  }\r\n\r\n  return (\r\n    <MDBContainer className=\"d-flex justify-content-center\">\r\n      <MDBCol md='12' lg='5'>\r\n        <div className=\"teal px-5 py-3\">\r\n          <img src={Logo} style={{ width: \"100%\" }} alt=\"logo\" />\r\n        </div>\r\n        <MDBCard className=\"mt-2\">\r\n          <MDBCardBody>\r\n            <p className='h5 text-center mb-4'>Sign in</p>\r\n            <MDBInput\r\n              icon='envelope'\r\n              iconClass='grey-text'\r\n              label='Your email'\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              value={email}\r\n            />\r\n            <MDBInput\r\n              type='password'\r\n              icon='lock'\r\n              iconClass='grey-text'\r\n              label='Your password'\r\n              onChange={e => setPassword(e.target.value)}\r\n              value={password}\r\n            />\r\n            <div className=\"alert-danger\">\r\n              {feedback && feedback}\r\n            </div>\r\n            <div className=\"alert-success\">\r\n              {success && success}\r\n            </div>\r\n            <div className='text-center'>\r\n              <MDBBtn className=\"teal accent-4\" onClick={() => goToDashboard()}>Login {loader && (\r\n                <div className=\"spinner-border spinner-border-sm text-white\" role=\"status\">\r\n                  <span className=\"sr-only\">Loading...</span>\r\n                </div>)}</MDBBtn>\r\n              <MDBLink className=\"teal-text\" to=\"/password-reset\">Forgot Password?</MDBLink>\r\n            </div>\r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </MDBCol>\r\n    </MDBContainer>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport {\r\n  MDBBtn,\r\n  MDBContainer,\r\n  MDBCol,\r\n  MDBInput,\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBLink\r\n} from 'mdbreact';\r\nimport Logo from \"../../assets/ginjabox.png\";\r\n\r\nconst Login = props => {\r\n  console.log(props);\r\n  return (\r\n    <MDBContainer className=\"d-flex justify-content-center\">\r\n      <MDBCol md='12' lg='5'>\r\n        <div className=\"teal px-5 py-3\">\r\n          <img src={Logo} style={{ width: \"100%\" }} alt=\"logo\" />\r\n        </div>\r\n        <MDBCard className=\"mt-2\">\r\n          <MDBCardBody>\r\n            <p className='h5 text-center mb-4'>Reset password</p>\r\n            <p className=\"text-center\">Enter your email below, you are going to receive a mail to reset your password.</p>\r\n            <MDBInput\r\n              icon='envelope'\r\n              iconClass='grey-text'\r\n              label='Your email'\r\n            />\r\n            <div className='text-center'>\r\n              <MDBBtn className=\"teal accent-4\">Reset</MDBBtn>\r\n              <MDBLink className=\"teal-text\" to=\"/login\">Back To Login</MDBLink>\r\n            </div>\r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </MDBCol>\r\n    </MDBContainer>\r\n  );\r\n}\r\n\r\nexport default Login;","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\n// PAGES\r\nimport Login from \"../pages/auth/Login\";\r\nimport PasswordReset from \"../pages/auth/PasswordReset\";\r\n\r\nclass AuthRoutes extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <main style={{ margin: \"8rem 6% 6rem\" }}>\r\n          <Route path=\"/login\" exact component={Login} />\r\n          <Route path=\"/password-reset\" exact component={PasswordReset} />\r\n          <Route render={() => {\r\n            return <Redirect to=\"/login\" />\r\n          }} />\r\n        </main>\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AuthRoutes;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { Switch } from 'react-router-dom';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport RoutesWithNavigation from './components/RoutesWithNavigation';\r\nimport AuthRoutes from \"./components/AuthRoutes\";\r\n\r\n\r\nconst App = () => {\r\n  const isLogged = useSelector(state => state.isLogged);\r\n\r\n  return (\r\n    <Switch>\r\n      {(!localStorage.getItem('email')) && <AuthRoutes />}\r\n      {(isLogged || localStorage.getItem('email')) && <RoutesWithNavigation />}\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const isLoggedReducer = (state = false, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN\":\r\n      const { email, token, roleId } = action.payload;\r\n      if (!token) return state = false;\r\n      localStorage.setItem(\"token\", token);\r\n      localStorage.setItem(\"email\", email);\r\n      localStorage.setItem(\"roleId\", roleId);\r\n      return state = true;\r\n    case \"LOGOUT\":\r\n      return state = false;\r\n    default:\r\n      return state = false;\r\n  }\r\n}\r\n\r\nexport default isLoggedReducer;","const permissionReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case \"GET_PERMISSION\":\r\n      const permit = {\r\n        superAdmin: localStorage.getItem(\"roleId\") == 1,\r\n        management: localStorage.getItem(\"roleId\") <= 2,\r\n        teamLead: localStorage.getItem(\"roleId\") <= 3,\r\n        support: localStorage.getItem(\"roleId\") <= 4,\r\n      };\r\n      return state = permit;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default permissionReducer;","const userReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"ALL_USERS\":\r\n      return state = action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default userReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport isLoggedReducer from \"./isLoggedReducer\";\r\nimport permissionReducer from \"./permissionReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\n\r\nconst allReducers = combineReducers({\r\n  isLogged: isLoggedReducer,\r\n  permission: permissionReducer,\r\n  users: usersReducer\r\n});\r\n\r\nexport default allReducers;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Router } from 'react-router-dom';\r\nimport { createBrowserHistory } from 'history';\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\"\r\nimport { Provider as KeepAliveProvider } from \"react-keep-alive\";\r\nimport allReducers from \"./Redux/reducers\";\r\n\r\nlet store = createStore(allReducers);\r\n\r\nconst customHistory = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router history={customHistory}>\r\n      <KeepAliveProvider>\r\n        <App />\r\n      </KeepAliveProvider>\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/ginjabox.96de654a.png\";"],"sourceRoot":""}