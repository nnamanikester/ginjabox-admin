{"version":3,"sources":["assets/ginjabox.png","components/SideNavigation.js","Redux/actions/permission.js","components/TopNavigation.js","Redux/actions/authentication.js","components/Footer.js","config.js","functions.js","pages/auth/Login.js","pages/auth/PasswordReset.js","pages/auth/NewPassword.js","components/AuthRoutes.js","pages/Statistics/Users.js","pages/Statistics/AppStatistics.js","pages/Statistics/AvailableWarehouse.js","pages/Statistics/Commissions.js","pages/Statistics/Transactions.js","pages/Statistics/TransactionsGraph.js","pages/Statistics/UsersByOs.js","pages/Dashboard.js","pages/EmailNotifications.js","pages/SingleUser.js","pages/InventoryLog/DispatchOrderLog.js","pages/InventoryLog/RejectedStockLog.js","pages/InventoryLog/StockReceiptLog.js","pages/Settings/EditPassword.js","pages/Settings/EmailSettings.js","pages/Settings/SmsSettings.js","pages/StaffManagement/AddNewStaff.js","pages/StaffManagement/AllStaff.js","pages/StaffManagement/RoleManagement.js","pages/TransactionLog/ExpiredRentLog.js","pages/TransactionLog/MerchantPayoutLog.js","pages/TransactionLog/ReferralLog.js","pages/TransactionLog/WareHousersPaymentLog.js","pages/TransactionLog/WithdrawalLog.js","pages/UserManagement/AllMerchants.js","pages/UserManagement/AllUsers.js","pages/UserManagement/AllWarehouser.js","pages/UserManagement/BannedUsers.js","pages/ListingManagement/AllListings.js","pages/ListingManagement/AvailableListings.js","pages/ListingManagement/AllRequisitions.js","pages/ListingManagement/ExpiredListings.js","components/Routes.js","components/RoutesWithNavigation.js","App.js","serviceWorker.js","Redux/reducers/isLoggedReducer.js","Redux/reducers/permissionReducer.js","Redux/reducers/usersReducer.js","Redux/reducers/index.js","index.js"],"names":["module","exports","SideNavigation","React","Component","componentWillMount","this","props","permission","rSNL","to","text","icon","onClick","onLinkClick","render","permit","className","logo","Logo","bg","mask","fixed","breakWidth","triggerOpening","style","transition","exact","topLevel","name","id","connect","state","dispatch","type","TopNavigation","useDispatch","navStyle","paddingLeft","toggle","light","expand","scrolling","zIndex","onSideNavToggleClick","key","lineHeight","marginleft","verticalAlign","cursor","color","size","href","routeName","right","flexDirection","nav","caret","minWidth","localStorage","clear","window","location","reload","Copyrights","date","Date","getFullYear","apiUrl","money","Intl","NumberFormat","formatShortNumber","num","Math","abs","sign","toFixed","validateEmail","email","test","String","toLowerCase","Login","useState","setEmail","password","setPassword","feedback","setFeedback","success","setSuccess","loader","setLoader","authenticate","a","data","axios","post","then","res","message","payload","catch","err","response","md","lg","src","width","alt","iconClass","label","onChange","e","target","value","role","loading","setLoading","sendMail","appUrl","error","resetPassword","NewPassword","match","newPassword","setNewPassword","confirmPassword","setConfirmPassword","pageLoading","setPageLoading","expiredToken","setExpiredToken","validateToken","token","params","console","log","useEffect","handleEditpassword","put","AuthRoutes","margin","path","component","PasswordReset","Users","totalUsers","setTotalUsers","loadTotalUsers","get","headers","getItem","xl","cascade","barClassName","height","wrapperStyle","opacity","AppStatistics","signupsToday","setSignupsToday","signupsLastWeek","setSignupsLastWeek","signupsLastMonth","setSignupsLastMonth","totalSignups","setTotalSignups","commissionsToday","setCommissionsToday","commissionsLastWeek","setCommissionsLastWeek","commissionsLastMonth","setCommissionsLastMonth","totalCommissions","setTotalCommissions","transactionsToday","setTransactionsToday","transactionsLastWeek","setTransactionsLastWeek","transactionsLastMonth","setTransactionsLastMonth","totalTransactions","setTotalTransactions","getSignups","today","lastWeek","lastMonth","total","getCommissions","getTransactions","sm","AvailableWarehouse","loadTotalCommissions","Commissions","format","Transactions","loadTotalTransactions","TransactionGraph","LineOptions","setData","labels","setLabels","transactionStatistics","reverse","datasets","backgroundColor","borderColor","borderWidth","pointBorderColor","pointBorderWidth","dat","map","item","narrow","getValue","val","api","parseInt","handleSelect","selected","options","UsersByOs","android","setAndroid","ios","setIos","loadUsersOs","mobileChartData","hoverBackgroundColor","responsive","maintainAspectRatio","legend","fontColor","fontSize","scales","xAxes","gridLines","display","ticks","yAxes","Dashboard","fluid","TransactionsGraph","EmailNotifications","col","disabled","multiple","SingleUser","user","setUser","loadUser","transactions","columns","field","rows","tr","sn","indexOf","transactionId","desc","description","commission","fees","status","moment","createdAt","listings","listing","price","discount","ratingHistory","ratings","rating","listingId","rate","ratingId","userId","ErrorLoading","count","firstName","lastName","phoneNumber","dob","wallet","availableBalance","ledgerBalance","length","striped","bordered","small","hover","DispatchOrderLog","orders","setOrders","agentName","agentPhone","agentIdNo","agentIdentification","pickupDateFrom","pickupDateTo","loadOrders","order","row","pickupAgentIdNumber","pickupAgentName","pickupAgentPhone","pickupAgentIdentification","pickupDate","min","max","RejectedStockLog","stocks","setStocks","products","requisition","diapatch","loadStocks","stock","StockReceiptLog","EditPassword","oldPassword","setOldPassword","EmailSettings","SmsSettings","AddNewStaff","roles","setRoles","roleId","form","setForm","loadRoles","items","handleSubmit","cnt","AllStaff","staff","setStaff","phone","action","loadUsers","handleEditStaff","handleDeleteStaff","confirm","delete","alert","RoleManagement","openModal","setOpenModal","openEdit","setOpenEdit","setRole","roleName","setRoleName","toggleModal","toggleEdit","dateCreated","dateUpdated","updatedAt","handleDeleteRole","filter","r","handleRoleName","isOpen","inline","backdrop","cascading","disableFocusTrap","createRole","editRole","amount","datePurchased","dateExpired","ExpiredRentLog","userName","userEmail","MerchantPayoutLog","ReferralLog","referrals","setReferrals","refId","refCode","loadReferrals","ref","refs","WareHousersPaymentLog","payments","setPayments","paymentId","channel","info","customerEmail","expires","loadPayments","payment","customer","WithdrawalLog","trans","setTrans","loadTransactions","tran","AllWarehouser","users","setUsers","editModal","setEditModal","accountStatus","handleBanUser","handleActivateUser","handleEditInput","handleEditUser","AllUsers","BannedUsers","AllListings","setListings","setListing","availability","loadListings","now","handleDeleteListing","handleActivateListing","handleBlockListing","proofOfOwnership","slug","currency","windows","handleEditListing","AvailableListings","AllRequisitions","requisitions","setRequisitions","cost","duration","space","loadRequisitions","baseCost","ExpiredListings","FourToFour","Routes","isLogged","requiresAuth","Comp","management","AllMerchants","pathname","App","constructor","super","handleResize","setState","windowWidth","innerWidth","toggleSideNav","sideNavToggled","assessLocation","locationString","currentPage","componentDidUpdate","prevProps","nextProps","snapshot","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","dynamicLeftPadding","position","useSelector","RoutesWithNavigation","Boolean","hostname","isLoggedReducer","setItem","permissionReducer","superAdmin","teamLead","support","userReducer","allReducers","combineReducers","usersReducer","store","createStore","customHistory","createBrowserHistory","ReactDOM","history","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ec3b3a11.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ginjabox.96de654a.png\";","import React from \"react\";\r\nimport {\r\n  MDBSideNavLink,\r\n  MDBSideNavCat,\r\n  MDBSideNavNav,\r\n  MDBSideNav,\r\n  MDBIcon\r\n} from \"mdbreact\";\r\nimport Logo from \"../assets/ginjabox.png\";\r\nimport { connect } from \"react-redux\";\r\nimport { getPermission } from \"../Redux/actions/permission\";\r\n\r\n// const permission = useSelector(state => state.permission);\r\n// const dispatch = useDispatch();\r\n\r\nconst mapStateToProps = state => ({\r\n  permit: state.permission\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    permission: () => dispatch(getPermission())\r\n  }\r\n}\r\n\r\nclass SideNavigation extends React.Component {\r\n\r\n  componentWillMount() {\r\n    this.props.permission();\r\n  }\r\n\r\n  rSNL(to, text, icon) {\r\n    return (\r\n      <MDBSideNavLink to={to} onClick={this.props.onLinkClick}>\r\n        <MDBIcon icon={`${icon} mr-2`} />\r\n        {text}\r\n      </MDBSideNavLink>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { onLinkClick, permit } = this.props;\r\n    return (\r\n      <div className=\"white-skin\">\r\n        <MDBSideNav\r\n          logo={Logo}\r\n          bg=\"https://mdbootstrap.com/img/Photos/Others/sidenav4.jpg\"\r\n          mask=\"strong\"\r\n          fixed\r\n          breakWidth={this.props.breakWidth}\r\n          triggerOpening={this.props.triggerOpening}\r\n          style={{ transition: \"padding-left .3s\" }}\r\n        >\r\n          <MDBSideNavNav>\r\n            <MDBSideNavLink exact topLevel to=\"/\" onClick={onLinkClick}>\r\n              <MDBIcon icon=\"tachometer-alt mr-2\" />\r\n              Dashboard\r\n            </MDBSideNavLink>\r\n\r\n            <MDBSideNavCat name=\"Listing Management\" id=\"user-cat\" icon=\"list\">\r\n              {this.rSNL(\"/listings\", \"All Lisitngs\", \"list\")}\r\n              {this.rSNL(\"/listings/available-listings\", \"Available Listings\", \"list\")}\r\n              {this.rSNL(\"/listings/requisitions\", \"All Requisitions\", \"list\")}\r\n              {this.rSNL(\"/listings/expired-listings\", \"Expired Listings\", \"list\")}\r\n            </MDBSideNavCat>\r\n\r\n            <MDBSideNavCat name=\"User Management\" id=\"user-cat\" icon=\"users\">\r\n              {this.rSNL(\"/users/all-users\", \"All Users\", \"users\")}\r\n              {this.rSNL(\"/users/merchants\", \"All Merchants\", \"users\")}\r\n              {this.rSNL(\"/users/warehousers\", \"All Warehousers\", \"users\")}\r\n              {this.rSNL(\"/users/banned-users\", \"Banned Users\", \"ban\")}\r\n            </MDBSideNavCat>\r\n\r\n            <MDBSideNavCat\r\n              name=\"Transaction Log\"\r\n              id=\"transaction-cat\"\r\n              icon=\"filter\"\r\n            >\r\n              {/* {this.rSNL(\r\n                \"/logs/merchant-payout-log\",\r\n                \"Merchant Payout Log\",\r\n                \"history\"\r\n              )} */}\r\n              {this.rSNL(\r\n                \"/logs/warehousers-payment-log\",\r\n                \"Warehouse Payment Log\",\r\n                \"history\"\r\n              )}\r\n              {this.rSNL(\"/logs/withdrawal-log\", \"Withdrawal Log\", \"history\")}\r\n              {/* {this.rSNL(\r\n                \"/logs/expired-rent-log\",\r\n                \"Expired Rent Log\",\r\n                \"history\"\r\n              )} */}\r\n              {this.rSNL(\"/logs/referral-log\", \"Referral Log\", \"history\")}\r\n            </MDBSideNavCat>\r\n\r\n            <MDBSideNavCat name=\"Inventory Log\" id=\"inventory-cat\" icon=\"sort\">\r\n              {this.rSNL(\r\n                \"/logs/dispatch-order-log\",\r\n                \"Dispatch Order Log\",\r\n                \"history\"\r\n              )}\r\n              {this.rSNL(\r\n                \"/logs/rejected-stock-log\",\r\n                \"Rejected Stock Log\",\r\n                \"history\"\r\n              )}\r\n              {this.rSNL(\r\n                \"/logs/stock-receipt-log\",\r\n                \"Stock Receipt Log\",\r\n                \"history\"\r\n              )}\r\n            </MDBSideNavCat>\r\n\r\n            <MDBSideNavCat name=\"Staff Management\" id=\"staff-cat\" icon=\"tasks\">\r\n              {this.rSNL(\"/staff/add-staff\", \"Add Staff\", \"plus\")}\r\n              {this.rSNL(\"/staff/all-staff\", \"All Staff\", \"users\")}\r\n              {this.rSNL(\"/staff/role-management\", \"Role Management\", \"tasks\")}\r\n            </MDBSideNavCat>\r\n\r\n            {/* <MDBSideNavLink exact topLevel to=\"/email-notification\">\r\n              <MDBIcon icon=\"envelope mr-2\" />\r\n              Email Notification\r\n            </MDBSideNavLink> */}\r\n\r\n            <MDBSideNavCat name=\"Settings\" id=\"settings-cat\" icon=\"cog\">\r\n              {/* {this.rSNL(\r\n                \"/settings/email-settings\",\r\n                \"Email Setting\",\r\n                \"envelope\"\r\n              )} */}\r\n              {/* {this.rSNL(\"/settings/sms-settings\", \"SMS Setting\", \"sms\")} */}\r\n              {this.rSNL(\"/settings/edit-password\", \"Edit Password\", \"lock\")}\r\n            </MDBSideNavCat>\r\n\r\n          </MDBSideNavNav>\r\n        </MDBSideNav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideNavigation);\r\n","export const getPermission = () => {\r\n  return {\r\n    type: \"GET_PERMISSION\"\r\n  }\r\n}","import React from \"react\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport {\r\n  MDBNavbar,\r\n  MDBNavbarBrand,\r\n  MDBNavbarNav,\r\n  MDBIcon,\r\n  MDBDropdown,\r\n  MDBDropdownToggle,\r\n  MDBDropdownMenu,\r\n  MDBDropdownItem,\r\n  MDBBadge\r\n} from \"mdbreact\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { LogOut } from \"../Redux/actions/authentication\";\r\nimport { Redirect } from \"react-router\"\r\n\r\nconst TopNavigation = (props) => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const navStyle = {\r\n    paddingLeft: props.toggle ? \"16px\" : \"240px\",\r\n    transition: \"padding-left .3s\"\r\n  };\r\n\r\n  const handleToggleClickA = () => {\r\n    props.onSideNavToggleClick();\r\n  }\r\n\r\n  const logout = () => {\r\n    localStorage.clear();\r\n    dispatch(LogOut());\r\n    window.location.reload();\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <MDBNavbar\r\n        className=\"flexible-MDBNavbar\"\r\n        light\r\n        expand=\"md\"\r\n        scrolling\r\n        fixed=\"top\"\r\n        style={{ zIndex: 3 }}\r\n      >\r\n        <div\r\n          onClick={() => handleToggleClickA()}\r\n          key=\"sideNavToggleA\"\r\n          style={{\r\n            lineHeight: \"32px\",\r\n            marginleft: \"1em\",\r\n            verticalAlign: \"middle\",\r\n            cursor: \"pointer\"\r\n          }}\r\n        >\r\n          <MDBIcon icon=\"bars\" color=\"white\" size=\"lg\" />\r\n        </div>\r\n\r\n        <MDBNavbarBrand href=\"/\" style={navStyle}>\r\n          <strong>{props.routeName}</strong>\r\n        </MDBNavbarBrand>\r\n\r\n        <MDBNavbarNav expand=\"sm\" right style={{ flexDirection: \"row\" }}>\r\n          <MDBDropdown>\r\n            <MDBDropdownToggle nav caret>\r\n              <MDBBadge color=\"red\" className=\"mr-2\">\r\n                3\r\n                </MDBBadge>\r\n              <MDBIcon icon=\"bell\" />{\" \"}\r\n              <span className=\"d-none d-md-inline\">Notifications</span>\r\n            </MDBDropdownToggle>\r\n            <MDBDropdownMenu right style={{ minWidth: \"400px\" }}>\r\n              <MDBDropdownItem href=\"#!\">\r\n                <MDBIcon icon=\"money-bill-alt\" className=\"mr-2\" />\r\n                  New order received\r\n                  <span className=\"float-right\">\r\n                  <MDBIcon icon=\"clock\" /> 13 min\r\n                  </span>\r\n              </MDBDropdownItem>\r\n              <MDBDropdownItem href=\"#!\">\r\n                <MDBIcon icon=\"money-bill-alt\" className=\"mr-2\" />\r\n                  New order received\r\n                  <span className=\"float-right\">\r\n                  <MDBIcon icon=\"clock\" /> 33 min\r\n                  </span>\r\n              </MDBDropdownItem>\r\n              <MDBDropdownItem href=\"#!\">\r\n                <MDBIcon icon=\"chart-line\" className=\"mr-2\" />\r\n                  Your campaign is about to end\r\n                  <span className=\"float-right\">\r\n                  <MDBIcon icon=\"clock\" /> 53 min\r\n                  </span>\r\n              </MDBDropdownItem>\r\n            </MDBDropdownMenu>\r\n          </MDBDropdown>\r\n          <MDBDropdown>\r\n            <MDBDropdownToggle nav caret>\r\n              <MDBIcon icon=\"user\" />{\" \"}\r\n              <span className=\"d-none d-md-inline\">Profile</span>\r\n            </MDBDropdownToggle>\r\n            <MDBDropdownMenu right style={{ minWidth: \"200px\" }}>\r\n              <MDBDropdownItem onClick={() => logout()}>Log Out</MDBDropdownItem>\r\n              <MDBDropdownItem>My Account</MDBDropdownItem>\r\n            </MDBDropdownMenu>\r\n          </MDBDropdown>\r\n        </MDBNavbarNav>\r\n      </MDBNavbar>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default TopNavigation;\r\n","export const LogIn = (payload) => {\r\n  return {\r\n    type: \"LOGIN\",\r\n    payload: payload\r\n  }\r\n}\r\n\r\nexport const LogOut = () => {\r\n  return {\r\n    type: \"LOGOUT\"\r\n  }\r\n}","import React from 'react';\r\nimport { MDBFooter } from 'mdbreact';\r\n\r\nconst Copyrights = props => {\r\n  const date = new Date().getFullYear();\r\n  return (\r\n    <MDBFooter\r\n      className={props.className}\r\n      style={{ ...props.style, zIndex: 2 }}\r\n    >\r\n      <p className='footer-copyright mb-0 py-3 text-center'>\r\n        &copy; {date} Copyright:{' '}\r\n        <a href='/'> GinjaBox.com </a>\r\n      </p>\r\n    </MDBFooter>\r\n  );\r\n};\r\nexport default Copyrights;\r\n","export const appUrl = \"http://localhost:3000\";\r\nexport const apiUrl = \"http://localhost:9800/api/admin\";\r\n","export const money = new Intl.NumberFormat('en-US')\r\n\r\nexport const formatShortNumber = (num) => {\r\n  if (Math.abs(num) > 999999999) return Math.sign(num) * ((Math.abs(num) / 1000000000).toFixed(1)) + 'b';\r\n  if (Math.abs(num) > 999999) return Math.sign(num) * ((Math.abs(num) / 1000000).toFixed(1)) + 'm';\r\n  if (Math.abs(num) > 999) return Math.sign(num) * ((Math.abs(num) / 1000).toFixed(1)) + 'k';\r\n  return Math.sign(num) * Math.abs(num);\r\n}\r\n\r\nexport const validateEmail = (email) => {\r\n  const exp = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i;\r\n  return exp.test(String(email).toLowerCase());\r\n};\r\n","import React, { useState } from 'react';\r\nimport {\r\n  MDBBtn,\r\n  MDBContainer,\r\n  MDBCol,\r\n  MDBInput,\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBLink,\r\n} from 'mdbreact';\r\nimport { useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { LogIn } from \"../../Redux/actions/authentication\";\r\nimport Logo from \"../../assets/ginjabox.png\";\r\nimport { apiUrl } from \"../../config\";\r\nimport { validateEmail } from \"../../functions\";\r\n\r\nconst Login = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  // const firstTimeLaunch = () => {\r\n  //   axios.post(`${apiUrl}/`, { create: \"Super Admin\" })\r\n  //     .then(res => {\r\n  //       console.log(res.data);\r\n  //     })\r\n  //     .catch(err => {\r\n  //       console.log(err.response);\r\n  //     })\r\n  // }\r\n  // useEffect(() => {\r\n  //   firstTimeLaunch();\r\n  // }, []);\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [feedback, setFeedback] = useState(null);\r\n  const [success, setSuccess] = useState(null);\r\n  const [loader, setLoader] = useState(false);\r\n\r\n  const authenticate = async (email, password) => {\r\n    email.toLowerCase();\r\n    setLoader(true);\r\n    const data = { email, password }\r\n\r\n    await axios.post(`${apiUrl}/authenticate`, data)\r\n      .then(res => {\r\n        const { data, message } = res.data\r\n        dispatch(LogIn(data));\r\n        setLoader(false);\r\n        setSuccess(message);\r\n      })\r\n      .catch(err => {\r\n        setLoader(false);\r\n        setFeedback(err.response.data.message);\r\n      })\r\n\r\n  }\r\n\r\n  const goToDashboard = () => {\r\n    setFeedback(null);\r\n    if (!email) {\r\n      setLoader(false);\r\n      return setFeedback(\"Email field cannot be empty!\")\r\n    };\r\n    if (!validateEmail(email)) {\r\n      setLoader(false);\r\n      return setFeedback(\"Invalid email address!\")\r\n    };\r\n    if (!password) {\r\n      setLoader(false);\r\n      return setFeedback(\"Password field cannot be empty!\")\r\n    }\r\n    authenticate(email, password);\r\n  }\r\n\r\n  return (\r\n    <MDBContainer className=\"d-flex justify-content-center\">\r\n      <MDBCol md='12' lg='5'>\r\n        <div className=\"teal px-5 py-3\">\r\n          <img src={Logo} style={{ width: \"100%\" }} alt=\"logo\" />\r\n        </div>\r\n        <MDBCard className=\"mt-2\">\r\n          <MDBCardBody>\r\n            <p className='h5 text-center mb-4'>Sign in</p>\r\n            <MDBInput\r\n              icon='envelope'\r\n              iconClass='grey-text'\r\n              label='Your email'\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              value={email}\r\n            />\r\n            <MDBInput\r\n              type='password'\r\n              icon='lock'\r\n              iconClass='grey-text'\r\n              label='Your password'\r\n              onChange={e => setPassword(e.target.value)}\r\n              value={password}\r\n            />\r\n            <div className=\"alert-danger\">\r\n              {feedback && feedback}\r\n            </div>\r\n            <div className=\"alert-success\">\r\n              {success && success}\r\n            </div>\r\n            <div className='text-center'>\r\n              <MDBBtn className=\"teal accent-4\" onClick={() => goToDashboard()}>Login {loader && (\r\n                <div className=\"spinner-border spinner-border-sm text-white\" role=\"status\">\r\n                  <span className=\"sr-only\">Loading...</span>\r\n                </div>)}</MDBBtn>\r\n              <MDBLink className=\"teal-text\" to=\"/password-reset\">Forgot Password?</MDBLink>\r\n            </div>\r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </MDBCol>\r\n    </MDBContainer>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport axios from \"axios\";\r\nimport {\r\n  MDBBtn,\r\n  MDBContainer,\r\n  MDBCol,\r\n  MDBInput,\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBLink\r\n} from 'mdbreact';\r\nimport Logo from \"../../assets/ginjabox.png\";\r\nimport { validateEmail } from \"../../functions\";\r\nimport { apiUrl, appUrl } from \"../../config\";\r\n\r\nconst Login = props => {\r\n\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [feedback, setFeedback] = useState(null);\r\n  const [success, setSuccess] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const sendMail = async (email) => {\r\n    email.toLowerCase();\r\n    setLoading(true);\r\n    const data = { email, appUrl }\r\n\r\n    await axios.post(`${apiUrl}/password-reset`, data)\r\n      .then(res => {\r\n        if (res.data.error) {\r\n          setLoading(false);\r\n          return setFeedback(res.data.message);\r\n        }\r\n        setLoading(false);\r\n        setSuccess(\"An email has been sent to you to help you reset your password. \\nPlease check your mail for instructions on how to reset your password. \\nDon't forget to also check your spam folder.\");\r\n      })\r\n      .catch(err => {\r\n        setLoading(false);\r\n        setFeedback(err.response.data.message);\r\n      })\r\n\r\n  }\r\n\r\n  const resetPassword = () => {\r\n    setFeedback(null);\r\n    if (!email) {\r\n      setLoading(false);\r\n      return setFeedback(\"Email field cannot be empty!\")\r\n    };\r\n    if (!validateEmail(email)) {\r\n      setLoading(false);\r\n      return setFeedback(\"Invalid email address!\")\r\n    };\r\n    sendMail(email);\r\n  }\r\n\r\n  if (success) {\r\n    return (\r\n      <MDBContainer className=\"d-flex justify-content-center\">\r\n        <MDBCol md='12' lg='5'>\r\n          <div className=\"teal px-5 py-3\">\r\n            <img src={Logo} style={{ width: \"100%\" }} alt=\"logo\" />\r\n          </div>\r\n          <MDBCard className=\"mt-2\">\r\n            <MDBCardBody>\r\n              <p className='h5 text-center mb-4 text-success'>SUCCESS!!!</p>\r\n              <div className=\"alert-success\">\r\n                {success && success}\r\n              </div>\r\n              <div className='text-center'>\r\n                <p className=\"text-center\">\r\n                  Didn't get the mail?\r\n                </p>\r\n                <MDBBtn className=\"teal accent-4\" onClick={() => {\r\n                  setSuccess(null);\r\n                  resetPassword();\r\n                }\r\n                }>Resend</MDBBtn>\r\n                <MDBLink className=\"teal-text\" to=\"/login\">Back To Login</MDBLink>\r\n              </div>\r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </MDBCol>\r\n      </MDBContainer>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <MDBContainer className=\"d-flex justify-content-center\">\r\n      <MDBCol md='12' lg='5'>\r\n        <div className=\"teal px-5 py-3\">\r\n          <img src={Logo} style={{ width: \"100%\" }} alt=\"logo\" />\r\n        </div>\r\n        <MDBCard className=\"mt-2\">\r\n          <MDBCardBody>\r\n            <div className=\"alert-success\">\r\n              {success && success}\r\n            </div>\r\n            <p className='h5 text-center mb-4'>Reset password</p>\r\n            <p className=\"text-center\">Enter your email below, you are going to receive a mail to reset your password.</p>\r\n            <MDBInput\r\n              icon='envelope'\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              iconClass='grey-text'\r\n              label='Your email'\r\n            />\r\n            <div className='text-center'>\r\n              <div className=\"alert-danger\">\r\n                {feedback && feedback}\r\n              </div>\r\n              <MDBBtn className=\"teal accent-4\" onClick={() => resetPassword()}>Reset {loading && (\r\n                <div className=\"spinner-border spinner-border-sm text-white\" role=\"status\">\r\n                  <span className=\"sr-only\">Loading...</span>\r\n                </div>)}</MDBBtn>\r\n              <MDBLink className=\"teal-text\" to=\"/login\">Back To Login</MDBLink>\r\n            </div>\r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </MDBCol>\r\n    </MDBContainer>\r\n  );\r\n}\r\n\r\nexport default Login;","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  MDBBtn,\r\n  MDBContainer,\r\n  MDBCol,\r\n  MDBInput,\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBLink\r\n} from \"mdbreact\";\r\nimport axios from \"axios\";\r\nimport { apiUrl } from \"../../config\";\r\n\r\nconst NewPassword = ({ match }) => {\r\n\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [feedback, setFeedback] = useState(null);\r\n  const [success, setSuccess] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [pageLoading, setPageLoading] = useState(true);\r\n  const [expiredToken, setExpiredToken] = useState(false);\r\n  const [email, setEmail] = useState(null);\r\n\r\n\r\n  const validateToken = async () => {\r\n    await axios.post(`${apiUrl}/password-reset/validate-token`, { token: match.params.token })\r\n      .then(res => {\r\n        if (res.data.error) {\r\n          return setExpiredToken(res.data.data.message);\r\n        }\r\n        setEmail(res.data.data.email);\r\n        return setPageLoading(false);\r\n      })\r\n      .catch(err => {\r\n        console.log(err.response);\r\n        setExpiredToken(err.response.data.message);\r\n        return setPageLoading(false);\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    validateToken();\r\n  }, [])\r\n\r\n  const handleEditpassword = async () => {\r\n    setLoading(true);\r\n    setFeedback(null);\r\n    setSuccess(null);\r\n    if (!newPassword) {\r\n      setLoading(false);\r\n      return setFeedback(\"You must specify a new password!\")\r\n    }\r\n    if (!confirmPassword) {\r\n      setLoading(false);\r\n      return setFeedback(\"Please confirm your password!\")\r\n    }\r\n    if (confirmPassword !== newPassword) {\r\n      setLoading(false);\r\n      return setFeedback(\"Passwords do not match!\")\r\n    }\r\n    setFeedback(null);\r\n    await axios.put(`${apiUrl}/set-new-password`, { email, newPassword })\r\n      .then(res => {\r\n        if (res.data.error) {\r\n          setLoading(false);\r\n          return setFeedback(\"An Error occured while setting your password \\nPlease try again!\");\r\n        }\r\n        setLoading(false);\r\n        setNewPassword('');\r\n        setConfirmPassword('');\r\n        return setSuccess(\"Password Updated Successfully!\");\r\n      })\r\n      .catch(err => {\r\n        setLoading(false);\r\n        return setFeedback(\"There's a problem reseting your password!\");\r\n      })\r\n  }\r\n\r\n\r\n  if (pageLoading) {\r\n    return (\r\n      <h1 className=\"text-center\">\r\n        <div className=\"spinner-border spinner-border-lg teal-text\" role=\"status\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </div>\r\n      </h1>\r\n    );\r\n  }\r\n\r\n  if (success) {\r\n    return (\r\n      <MDBContainer className=\"d-flex justify-content-center\">\r\n        <MDBCol md='12' lg='5'>\r\n          <MDBCard className=\"mt-2\">\r\n            <MDBCardBody>\r\n              <div className=\"alert-success\">\r\n                {success && success}\r\n              </div>\r\n              <div className='text-center'>\r\n                <MDBLink to=\"/login\" >\r\n                  <MDBBtn className=\"teal accent-4\">LOGIN</MDBBtn>\r\n                </MDBLink>\r\n              </div>\r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </MDBCol>\r\n      </MDBContainer>\r\n    );\r\n  }\r\n\r\n  if (expiredToken) {\r\n    return <h1 className=\"text-center\">{expiredToken}</h1>;\r\n  } else {\r\n    return (\r\n      <MDBContainer className=\"d-flex justify-content-center\">\r\n        <MDBCol md='12' lg='5'>\r\n          <MDBCard className=\"mt-2\">\r\n            <MDBCardBody>\r\n              <p className='h5 text-center mb-4'>New Password</p>\r\n              <MDBInput\r\n                type='password'\r\n                label='New Password'\r\n                onChange={e => setNewPassword(e.target.value)}\r\n                value={newPassword}\r\n              />\r\n              <MDBInput\r\n                type='password'\r\n                label='Confirm Password'\r\n                onChange={e => setConfirmPassword(e.target.value)}\r\n                value={confirmPassword}\r\n              />\r\n              <div className=\"alert-danger\">\r\n                {feedback && feedback}\r\n              </div>\r\n              <div className=\"alert-success\">\r\n                {success && success}\r\n              </div>\r\n              <div className='text-center'>\r\n                <MDBBtn className=\"teal accent-4\" onClick={() => handleEditpassword()}>SAVE {loading && (\r\n                  <div className=\"spinner-border spinner-border-sm text-white\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                  </div>)}</MDBBtn>\r\n              </div>\r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </MDBCol>\r\n      </MDBContainer>\r\n    );\r\n  }\r\n};\r\n\r\nexport default NewPassword;\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\n// PAGES\r\nimport Login from \"../pages/auth/Login\";\r\nimport PasswordReset from \"../pages/auth/PasswordReset\";\r\nimport NewPassword from \"../pages/auth/NewPassword\";\r\n\r\nconst FourToFour = () => <h1 className=\"text-center\">404</h1>;\r\n\r\nclass AuthRoutes extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <main style={{ margin: \"8rem 6% 6rem\" }}>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Login} />\r\n          <Route path=\"/login\" exact component={Login} />\r\n          <Route path=\"/password-reset\" exact component={PasswordReset} />\r\n          <Route path=\"/password-reset/:token\" exact component={NewPassword} />\r\n          <Route render={() => {\r\n            return <Redirect to=\"/login\" />\r\n          }} />\r\n        </Switch>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AuthRoutes;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport {\r\n  MDBCol,\r\n  MDBCardBody,\r\n  MDBCard,\r\n  MDBIcon,\r\n  MDBProgress\r\n} from \"mdbreact\"\r\n\r\nconst Users = () => {\r\n  const [totalUsers, setTotalUsers] = useState(0);\r\n\r\n  const loadTotalUsers = async () => {\r\n    axios.get(`${apiUrl}/statistics/total-users`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        setTotalUsers(res.data.data);\r\n      })\r\n      .catch(err => {\r\n        return 0;\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadTotalUsers();\r\n  }, []);\r\n\r\n  return (\r\n    <MDBCol xl=\"3\" md=\"6\" className=\"mb-4\">\r\n      <MDBCard cascade className=\"cascading-admin-card\">\r\n        <div className=\"admin-up\">\r\n          <MDBIcon icon=\"users\" className=\"teal accent-4\" />\r\n          <div className=\"data\">\r\n            <p>Total Users</p>\r\n            <h5 className=\"font-weight-bold dark-grey-text\">\r\n              {totalUsers || <Skeleton />}\r\n            </h5>\r\n          </div>\r\n        </div>\r\n        <MDBCardBody cascade>\r\n          <MDBProgress\r\n            value={100}\r\n            barClassName=\"teal accent-3\"\r\n            height=\"6px\"\r\n            wrapperStyle={{ opacity: \".7\" }}\r\n            className=\"mb-3\"\r\n          />\r\n          <p className=\"card-text\">Total Number of registered users</p>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBCol>\r\n  );\r\n}\r\n\r\nexport default Users;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  MDBCol,\r\n  MDBCardBody,\r\n  MDBCard,\r\n  MDBRow,\r\n  MDBCardHeader\r\n} from \"mdbreact\"\r\nimport { formatShortNumber } from \"../../functions\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst AppStatistics = () => {\r\n  const [signupsToday, setSignupsToday] = useState(0);\r\n  const [signupsLastWeek, setSignupsLastWeek] = useState(0);\r\n  const [signupsLastMonth, setSignupsLastMonth] = useState(0);\r\n  const [totalSignups, setTotalSignups] = useState(0);\r\n\r\n  const [commissionsToday, setCommissionsToday] = useState(0);\r\n  const [commissionsLastWeek, setCommissionsLastWeek] = useState(0);\r\n  const [commissionsLastMonth, setCommissionsLastMonth] = useState(0);\r\n  const [totalCommissions, setTotalCommissions] = useState(0);\r\n\r\n  const [transactionsToday, setTransactionsToday] = useState(0);\r\n  const [transactionsLastWeek, setTransactionsLastWeek] = useState(0);\r\n  const [transactionsLastMonth, setTransactionsLastMonth] = useState(0);\r\n  const [totalTransactions, setTotalTransactions] = useState(0);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n\r\n  const getSignups = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/statistics/signups`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        setSignupsToday(res.data.data.today);\r\n        setSignupsLastWeek(res.data.data.lastWeek);\r\n        setSignupsLastMonth(res.data.data.lastMonth);\r\n        setTotalSignups(res.data.data.total);\r\n        setLoading(false);\r\n      })\r\n      .catch(err => {\r\n        return 0;\r\n      })\r\n  }\r\n\r\n\r\n  const getCommissions = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/statistics/commissions-by-date`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        setCommissionsToday(res.data.data.today);\r\n        setCommissionsLastWeek(res.data.data.lastWeek);\r\n        setCommissionsLastMonth(res.data.data.lastMonth);\r\n        setTotalCommissions(res.data.data.total);\r\n        setLoading(false);\r\n      })\r\n      .catch(err => {\r\n        return 0;\r\n      })\r\n  }\r\n\r\n  const getTransactions = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/statistics/transactions-by-date`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        setTransactionsToday(res.data.data.today);\r\n        setTransactionsLastWeek(res.data.data.lastWeek);\r\n        setTransactionsLastMonth(res.data.data.lastMonth);\r\n        setTotalTransactions(res.data.data.total);\r\n        setLoading(false);\r\n      })\r\n      .catch(err => {\r\n        return 0;\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    getSignups();\r\n    getCommissions();\r\n    getTransactions();\r\n  }, []);\r\n\r\n  return (\r\n    <MDBCol lg=\"6\" md=\"12\">\r\n      <MDBCard className=\"mb-4\">\r\n        <MDBCardHeader className=\"teal accent-4 text-white\">\r\n          App Statistics\r\n        </MDBCardHeader>\r\n        <MDBCardBody>\r\n          <MDBRow className=\"mb-1\">\r\n            <MDBCol lg=\"4\" md=\"4\" sm=\"6\">\r\n              <small className=\"grey-text\">Total Signups</small>\r\n              {loading ? <Skeleton /> : <h5>{formatShortNumber(totalSignups)}</h5>}\r\n            </MDBCol>\r\n            <MDBCol lg=\"2\" md=\"2\" sm=\"6\">\r\n              <small className=\"grey-text\">Today</small>\r\n              {loading ? <Skeleton /> : <h5>{formatShortNumber(signupsToday)}</h5>}\r\n            </MDBCol>\r\n            <MDBCol lg=\"3\" md=\"3\" sm=\"6\">\r\n              <small className=\"grey-text\">Last week</small>\r\n              {loading ? <Skeleton /> : <h5>{formatShortNumber(signupsLastWeek)}</h5>}\r\n            </MDBCol>\r\n            <MDBCol lg=\"3\" md=\"3\" sm=\"6\">\r\n              <small className=\"grey-text\">Last Month</small>\r\n              {loading ? <Skeleton /> : <h5>{formatShortNumber(signupsLastMonth)}</h5>}\r\n            </MDBCol>\r\n          </MDBRow>\r\n\r\n          {/* <MDBRow className=\"mb-1\">\r\n            <MDBCol lg=\"4\" md=\"4\" sm=\"6\">\r\n              <small className=\"grey-text\">Available Warehouse</small>\r\n              <h5>{formatShortNumber(95)}</h5>\r\n            </MDBCol>\r\n            <MDBCol lg=\"2\" md=\"2\" sm=\"6\">\r\n              <small className=\"grey-text\">Today</small>\r\n              <h5>{formatShortNumber(95)}</h5>\r\n            </MDBCol>\r\n            <MDBCol lg=\"3\" md=\"3\" sm=\"6\">\r\n              <small className=\"grey-text\">Last week</small>\r\n              <h5>{formatShortNumber(127)}</h5>\r\n            </MDBCol>\r\n            <MDBCol lg=\"3\" md=\"3\" sm=\"6\">\r\n              <small className=\"grey-text\">Last Month</small>\r\n              <h5>{formatShortNumber(374)}</h5>\r\n            </MDBCol>\r\n          </MDBRow> */}\r\n\r\n          <MDBRow className=\"mb-1\">\r\n            <MDBCol lg=\"4\" md=\"4\" sm=\"6\">\r\n              <small className=\"grey-text\">\r\n                Total Commissions(&#8358;)\r\n                    </small>\r\n              {loading ? <Skeleton /> : <h5>{formatShortNumber(totalCommissions)}</h5>}\r\n            </MDBCol>\r\n            <MDBCol lg=\"2\" md=\"2\" sm=\"6\">\r\n              <small className=\"grey-text\">Today</small>\r\n              {loading ? <Skeleton /> : <h5>{formatShortNumber(commissionsToday)}</h5>}\r\n            </MDBCol>\r\n            <MDBCol lg=\"3\" md=\"3\" sm=\"6\">\r\n              <small className=\"grey-text\">Last week</small>\r\n              {loading ? <Skeleton /> : <h5>{formatShortNumber(commissionsLastWeek)}</h5>}\r\n            </MDBCol>\r\n            <MDBCol lg=\"3\" md=\"3\" sm=\"6\">\r\n              <small className=\"grey-text\">Last Month</small>\r\n              {loading ? <Skeleton /> : <h5>{formatShortNumber(commissionsLastMonth)}</h5>}\r\n            </MDBCol>\r\n          </MDBRow>\r\n\r\n          <MDBRow className=\"mb-1\">\r\n            <MDBCol lg=\"4\" md=\"4\" sm=\"6\">\r\n              <small className=\"grey-text\">\r\n                Total Transactions(&#8358;)\r\n              </small>{loading ? <Skeleton /> : <h5>{formatShortNumber(totalTransactions)}</h5>}\r\n            </MDBCol>\r\n            <MDBCol lg=\"2\" md=\"2\" sm=\"6\">\r\n              <small className=\"grey-text\">Today</small>\r\n              {loading ? <Skeleton /> : <h5>{formatShortNumber(transactionsToday)}</h5>}\r\n            </MDBCol>\r\n            <MDBCol lg=\"3\" md=\"3\" sm=\"6\">\r\n              <small className=\"grey-text\">Last week</small>\r\n              {loading ? <Skeleton /> : <h5>{formatShortNumber(transactionsLastWeek)}</h5>}\r\n            </MDBCol>\r\n            <MDBCol lg=\"3\" md=\"3\" sm=\"6\">\r\n              <small className=\"grey-text\">Last Month</small>\r\n              {loading ? <Skeleton /> : <h5>{formatShortNumber(transactionsLastMonth)}</h5>}\r\n            </MDBCol> \r\n          </MDBRow>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBCol>\r\n  );\r\n}\r\n\r\nexport default AppStatistics;","import React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport {\r\n  MDBCol,\r\n  MDBCardBody,\r\n  MDBCard,\r\n  MDBIcon,\r\n  MDBProgress\r\n} from \"mdbreact\"\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst AvailableWarehouse = () => {\r\n  const [totalCommissions, setTotalCommissions] = useState(0);\r\n\r\n  const loadTotalCommissions = async () => {\r\n    axios.get(`${apiUrl}/statistics/total-available-warehouses`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        setTotalCommissions(res.data.data);\r\n      })\r\n      .catch(err => {\r\n        return 0;\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadTotalCommissions();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <MDBCol xl=\"3\" md=\"6\" className=\"mb-4\">\r\n      <MDBCard cascade className=\"cascading-admin-card\">\r\n        <div className=\"admin-up\">\r\n          <MDBIcon icon=\"home\" className=\"teal accent-4\" />\r\n          <div className=\"data\">\r\n            <p>Available Warehouse</p>\r\n            <h5 className=\"font-weight-bold dark-grey-text\">\r\n              {totalCommissions || <Skeleton />}\r\n            </h5>\r\n          </div>\r\n        </div>\r\n        <MDBCardBody cascade>\r\n          <MDBProgress\r\n            value={100}\r\n            barClassName=\"teal accent-3\"\r\n            height=\"6px\"\r\n            wrapperStyle={{ opacity: \".7\" }}\r\n            className=\"mb-3\"\r\n          />\r\n          <p className=\"card-text\">Total available Warehouses</p>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBCol>\r\n  );\r\n}\r\n\r\nexport default AvailableWarehouse;","import React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport {\r\n  MDBCol,\r\n  MDBCardBody,\r\n  MDBCard,\r\n  MDBIcon,\r\n  MDBProgress\r\n} from \"mdbreact\"\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { money } from \"../../functions\";\r\n\r\nconst Commissions = () => {\r\n  const [totalCommissions, setTotalCommissions] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const loadTotalCommissions = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/statistics/total-commissions`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        setLoading(false);\r\n        setTotalCommissions(res.data.data);\r\n      })\r\n      .catch(err => {\r\n        return 0;\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadTotalCommissions();\r\n  }, []);\r\n\r\n  return (\r\n    <MDBCol xl=\"3\" md=\"6\" className=\"mb-4\">\r\n      <MDBCard cascade className=\"cascading-admin-card\">\r\n        <div className=\"admin-up\">\r\n          <MDBIcon icon=\"dollar-sign\" className=\"teal accent-4\" />\r\n          <div className=\"data\">\r\n            <p>Total Commissions</p>\r\n            <h5 className=\"font-weight-bold dark-grey-text\">\r\n              {loading ? <Skeleton /> : <>&#8358; {money.format(totalCommissions)}</>}\r\n           </h5>\r\n          </div>\r\n        </div>\r\n        <MDBCardBody cascade>\r\n          <MDBProgress\r\n            value={100}\r\n            barClassName=\"teal accent-3\"\r\n            height=\"6px\"\r\n            wrapperStyle={{ opacity: \".7\" }}\r\n            className=\"mb-3\"\r\n          />\r\n          <p className=\"card-text\">Total commissions earned</p>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBCol>\r\n  );\r\n}\r\n\r\nexport default Commissions;","import React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport {\r\n  MDBCol,\r\n  MDBCardBody,\r\n  MDBCard,\r\n  MDBIcon,\r\n  MDBProgress\r\n} from \"mdbreact\"\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst Transactions = () => {\r\n  const [totalTransactions, setTotalTransactions] = useState(0);\r\n\r\n  const loadTotalTransactions = async () => {\r\n    axios.get(`${apiUrl}/statistics/total-transactions`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        setTotalTransactions(res.data.data);\r\n      })\r\n      .catch(err => {\r\n        return 0;\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadTotalTransactions();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <MDBCol xl=\"3\" md=\"6\" className=\"mb-4\">\r\n      <MDBCard cascade className=\"cascading-admin-card\">\r\n        <div className=\"admin-up\">\r\n          <MDBIcon icon=\"exchange-alt\" className=\"teal accent-4\" />\r\n          <div className=\"data\">\r\n            <p>Total Transactions</p>\r\n            <h5 className=\"font-weight-bold dark-grey-text\">\r\n              {totalTransactions || <Skeleton />}\r\n              {/* {loading && <div className=\"spinner-border spinner-border-sm teal-text\" role=\"status\" ><span className=\"sr-only\">Loading...</span></div >} */}\r\n            </h5>\r\n          </div>\r\n        </div>\r\n        <MDBCardBody cascade>\r\n          <MDBProgress\r\n            value={100}\r\n            barClassName=\"teal accent-3\"\r\n            height=\"6px\"\r\n            wrapperStyle={{ opacity: \".7\" }}\r\n            className=\"mb-3\"\r\n          />\r\n          <p className=\"card-text\">Total number of transactions</p>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBCol>\r\n  );\r\n}\r\n\r\nexport default Transactions;","import React, { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport { apiUrl } from \"../../config\";\r\nimport {\r\n  MDBCol,\r\n  MDBCardBody,\r\n  MDBCard,\r\n  MDBSelect,\r\n  MDBSelectInput,\r\n  MDBSelectOption,\r\n  MDBSelectOptions,\r\n  MDBCardHeader,\r\n  MDBView\r\n} from \"mdbreact\"\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nconst TransactionGraph = ({ LineOptions }) => {\r\n  const [data, setData] = useState([]);\r\n  const [labels, setLabels] = useState([]);\r\n\r\n  const transactionStatistics = {\r\n    labels: labels.reverse(),\r\n    datasets: [\r\n      {\r\n        label: 'Transactions',\r\n        data: data.reverse(),\r\n        backgroundColor: '#0900',\r\n        borderColor: ['rgba(0,230,0)'],\r\n        borderWidth: 2,\r\n        pointBorderColor: '#fff',\r\n        pointBorderWidth: 2,\r\n      }\r\n    ]\r\n  };\r\n\r\n  const handleSelect = (val) => {\r\n    let api = '';\r\n    if (parseInt(val) === 1) api = `${apiUrl}/statistics/transactions-graph-week`;\r\n    if (parseInt(val) === 2) api = `${apiUrl}/statistics/transactions-graph-month`;\r\n    setLabels([]);\r\n    setData([]);\r\n\r\n    axios.get(api, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        const dat = res.data.data.map(item => {\r\n          setData([...data, item.data]);;\r\n          return item.label;\r\n        })\r\n        setLabels([...labels, ...dat])\r\n      })\r\n      .catch(err => {\r\n        return err;\r\n      })\r\n  }\r\n\r\n  const loadTransactionsGraph = () => {\r\n    axios.get(`${apiUrl}/statistics/transactions-graph-week`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        const dat = res.data.data.map(item => {\r\n          setData([...data, item.data]);;\r\n          return item.label;\r\n        })\r\n        setLabels([...labels, ...dat])\r\n      })\r\n      .catch(err => {\r\n        return err;\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadTransactionsGraph();\r\n  }, [])\r\n\r\n  return (\r\n    <MDBCol md='12' lg='12'>\r\n      <MDBCard narrow className='mb-4'>\r\n        <MDBCardHeader className=\"teal accent-4 text-white\">\r\n          Transactions Statistics\r\n        </MDBCardHeader>\r\n        <MDBCardBody>\r\n          <MDBCol md='12'>\r\n            <p className='lead'>\r\n              <span className='badge teal accent-4 p-2'>Data range</span>\r\n            </p>\r\n            <MDBSelect getValue={(val) => handleSelect(val)}>\r\n              <MDBSelectInput selected='Last 7 days' />\r\n              <MDBSelectOptions>\r\n                <MDBSelectOption value='1'>Last 7 days</MDBSelectOption>\r\n                <MDBSelectOption value='2'>Last 30 days</MDBSelectOption>\r\n              </MDBSelectOptions>\r\n            </MDBSelect>\r\n          </MDBCol>\r\n          <MDBView className='gradient-card-header teal accent-4 px-3'>\r\n            <Line\r\n              data={transactionStatistics}\r\n              options={LineOptions}\r\n              height={150}\r\n            />\r\n          </MDBView>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBCol>\r\n  );\r\n}\r\n\r\nexport default TransactionGraph;","import React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport {\r\n  MDBCol,\r\n  MDBCardBody,\r\n  MDBCard,\r\n  MDBCardHeader\r\n} from \"mdbreact\"\r\nimport { Doughnut } from \"react-chartjs-2\";\r\n\r\nconst UsersByOs = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [android, setAndroid] = useState(0);\r\n  const [ios, setIos] = useState(0);\r\n\r\n  const loadUsersOs = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/statistics/users-os`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        setAndroid(res.data.data.android);\r\n        setIos(res.data.data.ios);\r\n        setLoading(false);\r\n      })\r\n      .catch(err => {\r\n        return 0;\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadUsersOs();\r\n  }, []);\r\n\r\n\r\n  const mobileChartData = {\r\n    labels: [\"Android\", \"IOS\"],\r\n    datasets: [\r\n      {\r\n        data: [android, ios],\r\n        backgroundColor: [\"#F7464A\", \"#46BFBD\"],\r\n        hoverBackgroundColor: [\"#FF5A5E\", \"#5AD3D1\"]\r\n      }\r\n    ]\r\n  };\r\n\r\n  const mobileChartOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: true,\r\n    legend: {\r\n      labels: {\r\n        fontColor: \"black\"\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MDBCol lg=\"6\" md=\"12\">\r\n      <MDBCard className=\"mb-4\">\r\n        <MDBCardHeader className=\"teal accent-4 text-white\">\r\n          Users By OS\r\n        </MDBCardHeader>\r\n        <MDBCardBody>\r\n          <Doughnut\r\n            data={mobileChartData}\r\n            options={mobileChartOptions}\r\n            height={103}\r\n          />\r\n          {loading && <div className=\"spinner-border spinner-border-lg teal-text\" role=\"status\" ><span className=\"sr-only\">Loading...</span></div>}\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBCol>\r\n  );\r\n}\r\n\r\nexport default UsersByOs;","import React from \"react\";\r\nimport Users from \"./Statistics/Users\";\r\nimport AppStatistics from \"./Statistics/AppStatistics\";\r\nimport AvailableWarehouseGraph from \"./Statistics/AvailableWarehouseGraph\";\r\nimport AvailableWarehouse from \"./Statistics/AvailableWarehouse\";\r\nimport Commissions from \"./Statistics/Commissions\";\r\nimport Transactions from \"./Statistics/Transactions\";\r\nimport TransactionsGraph from \"./Statistics/TransactionsGraph\";\r\nimport UsersByOs from \"./Statistics/UsersByOs\";\r\nimport UsersGraph from \"./Statistics/UsersGraph\";\r\n\r\nimport {\r\n  MDBContainer,\r\n  MDBRow\r\n} from \"mdbreact\";\r\n\r\nconst LineOptions = {\r\n  responsive: true,\r\n  maintainAspectRatio: true,\r\n  legend: {\r\n    labels: {\r\n      fontColor: 'white',\r\n      fontSize: 18\r\n    }\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false,\r\n          color: 'rgba(255, 255, 255, 0.2)'\r\n        },\r\n        ticks: {\r\n          fontColor: '#fff',\r\n          fontSize: 10\r\n        }\r\n      }\r\n    ],\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: true,\r\n          color: 'rgba(255, 255, 255, 0.2)'\r\n        },\r\n        ticks: {\r\n          fontColor: '#fff'\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nconst Dashboard = (props) => {\r\n  return (\r\n    <MDBContainer fluid className=\"mb-5\">\r\n      <section>\r\n        <MDBRow>\r\n          <Users />\r\n          <Transactions />\r\n          <Commissions />\r\n          <AvailableWarehouse />\r\n        </MDBRow>\r\n      </section >\r\n\r\n      <section>\r\n        <MDBRow>\r\n          <AppStatistics />\r\n          <UsersByOs />\r\n          <TransactionsGraph LineOptions={LineOptions} />\r\n          {/* <AvailableWarehouseGraph LineOptions={LineOptions} /> */}\r\n          {/* <UsersGraph LineOptions={LineOptions} /> */}\r\n        </MDBRow>\r\n      </section>\r\n    </MDBContainer >\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nimport {\r\n  MDBContainer,\r\n  MDBCol,\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBIcon,\r\n  MDBInput,\r\n  MDBSelect,\r\n  MDBSelectOptions,\r\n  MDBSelectInput,\r\n  MDBSelectOption,\r\n  MDBBtn,\r\n  MDBRow\r\n} from \"mdbreact\";\r\n\r\nconst EmailNotifications = () => {\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCol className='mb-4'>\r\n        <MDBCard col=\"3\">\r\n          <MDBCardBody>\r\n            <div className='form-header teal accent-4'>\r\n              <h3>\r\n                <MDBIcon icon='envelope' /> Send An Email:\r\n              </h3>\r\n            </div>\r\n\r\n            <MDBInput label='Subject' />\r\n            <MDBRow>\r\n              <MDBCol>\r\n                <MDBSelect label=\"To\" >\r\n                  <MDBSelectInput />\r\n                  <MDBSelectOptions>\r\n                    <MDBSelectOption disabled>Select Receipient</MDBSelectOption>\r\n                    <MDBSelectOption value=\"1\">All Users</MDBSelectOption>\r\n                    <MDBSelectOption value=\"2\">Banned Users</MDBSelectOption>\r\n                    <MDBSelectOption value=\"3\">Select Users</MDBSelectOption>\r\n                  </MDBSelectOptions>\r\n                </MDBSelect>\r\n              </MDBCol>\r\n              <MDBCol>\r\n                <MDBSelect multiple label=\"If Select Users\" >\r\n                  <MDBSelectInput />\r\n                  <MDBSelectOptions>\r\n                    <MDBSelectOption disabled>Select  Users</MDBSelectOption>\r\n                    <MDBSelectOption value=\"1\">email1@email.com</MDBSelectOption>\r\n                    <MDBSelectOption value=\"2\">email2@email.com</MDBSelectOption>\r\n                    <MDBSelectOption value=\"3\">email3@email.com</MDBSelectOption>\r\n                  </MDBSelectOptions>\r\n                </MDBSelect>\r\n              </MDBCol>\r\n            </MDBRow>\r\n            <MDBInput\r\n              type='textarea'\r\n              icon='pencil-alt'\r\n              iconClass='grey-text'\r\n              label='Message'\r\n            />\r\n            <div className='text-center'>\r\n              <MDBBtn color='green' className=\"teal \">SEND</MDBBtn>\r\n            </div>\r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </MDBCol>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default EmailNotifications;\r\n","/*\r\n* A Page that displays the users information including; Listings Log,\r\n* transactions Log, and other necessary information. \r\n*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../config\";\r\nimport axios from \"axios\";\r\nimport {\r\n  MDBContainer,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBCard,\r\n  MDBCardTitle,\r\n  MDBCardBody,\r\n  MDBBadge,\r\n  MDBDataTable,\r\n  MDBCardHeader\r\n} from 'mdbreact';\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport moment from \"moment\";\r\nimport { money } from \"../functions\";\r\n\r\nconst SingleUser = ({ match }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const loadUser = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/users/${match.params.id}`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        setUser(res.data.data)\r\n        setLoading(false);\r\n      })\r\n      .catch(err => {\r\n        setLoading(null);\r\n        return [];\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadUser()\r\n  }, [])\r\n\r\n\r\n\r\n  const transactions = {\r\n    columns: [\r\n      {\r\n        label: \"S/N\",\r\n        field: \"sn\",\r\n      },\r\n      {\r\n        label: \"Transaction ID\",\r\n        field: \"transactionId\",\r\n      },\r\n      {\r\n        label: \"Type\",\r\n        field: \"type\",\r\n      },\r\n      {\r\n        label: \"Description\",\r\n        field: \"desc\",\r\n      },\r\n      {\r\n        label: \"Commission\",\r\n        field: \"commission\",\r\n      },\r\n      {\r\n        label: \"Status\",\r\n        field: \"status\",\r\n      },\r\n      {\r\n        label: \"Date\",\r\n        field: \"date\",\r\n      }\r\n    ],\r\n    rows: user ? user.transactions.map(tr => {\r\n      let sn = user.transactions.indexOf(tr);\r\n      const row = {\r\n        sn: sn + 1,\r\n        transactionId: tr.id,\r\n        type: tr.type,\r\n        desc: tr.description,\r\n        commission: <>&#8358; {money.format(tr.fees)} </>,\r\n        status: tr.status === 2 ? <MDBBadge color=\"success\">Success</MDBBadge> : <MDBBadge className=\"danger-color\">Failed</MDBBadge>,\r\n        date: moment(tr.createdAt).format('L')\r\n      }\r\n      return row;\r\n    }) : []\r\n  };\r\n\r\n\r\n\r\n  const listings = {\r\n    columns: [\r\n      {\r\n        label: \"S/N\",\r\n        field: \"sn\",\r\n      },\r\n      {\r\n        label: \"Listing ID\",\r\n        field: \"id\"\r\n      },\r\n      {\r\n        label: \"Name\",\r\n        field: \"name\",\r\n      },\r\n      {\r\n        label: \"Description\",\r\n        field: \"description\",\r\n      },\r\n      {\r\n        label: <span>Price &#8358;</span>,\r\n        field: \"price\",\r\n      },\r\n      {\r\n        label: \"Discount\",\r\n        field: \"discount\",\r\n      }\r\n    ],\r\n    rows: user ? user.listings.map(listing => {\r\n      let sn = user.listings.indexOf(listing);\r\n      const row = {\r\n        sn: sn + 1,\r\n        id: listing.id,\r\n        name: listing.name,\r\n        description: listing.description,\r\n        price: <> &#8358; {money.format(parseInt(listing.price))} </>,\r\n        discount: <> &#8358; {money.format(parseInt(listing.discount))} </>\r\n      }\r\n      return row;\r\n    }) : []\r\n  };\r\n\r\n  const ratingHistory = {\r\n    columns: [\r\n      {\r\n        label: \"S/N\",\r\n        field: \"sn\",\r\n      },\r\n      {\r\n        label: \"Rating ID\",\r\n        field: \"ratingId\"\r\n      },\r\n      {\r\n        label: \"Rate\",\r\n        field: \"rate\",\r\n      },\r\n      {\r\n        label: \"User\",\r\n        field: \"user\",\r\n      },\r\n      {\r\n        label: \"Listing\",\r\n        field: \"listingId\",\r\n      }\r\n    ],\r\n    rows: user ? user.ratings.map(rating => {\r\n      let sn = user.ratings.indexOf(rating);\r\n      const row = {\r\n        sn: sn + 1,\r\n        listingId: rating.listingId,\r\n        rate: rating.rate,\r\n        ratingId: rating.ratingId,\r\n        user: rating.userId\r\n      }\r\n      return row;\r\n    }) : []\r\n  };\r\n\r\n  const ErrorLoading = () => {\r\n    return (\r\n      <MDBContainer className=\"d-flex justify-content-center\">\r\n        <div className=\"mt-5\">\r\n          <h1>NETWORK ERROR!</h1><br />\r\n          <p>Please Check your Internet and reload the page.</p>\r\n        </div>\r\n      </MDBContainer>\r\n    );\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div id='profile-ex' className='mb-5'>\r\n        <MDBContainer fluid>\r\n          <MDBRow>\r\n            <MDBCol lg='4' md='12'>\r\n              <MDBCard className='profile-card text-center mb-4'>\r\n                <MDBCardHeader className=\"teal accent-4 text-white\">\r\n                  <Skeleton />\r\n                </MDBCardHeader>\r\n                <MDBCardBody>\r\n                  <Skeleton count={4} />\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n              <MDBCard className='mb-4'>\r\n                <MDBCardHeader className=\"teal accent-4 text-white\">\r\n                  <Skeleton />\r\n                </MDBCardHeader>\r\n                <MDBCardBody>\r\n                  <Skeleton count={4} />\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n            </MDBCol>\r\n            <MDBCol lg='8' md='12' className='text-center'>\r\n              <MDBCard className=\"mb-4\">\r\n                <MDBCardHeader className=\"teal accent-4 text-white\">\r\n                  <Skeleton />\r\n                </MDBCardHeader>\r\n                <MDBCardBody>\r\n                  <Skeleton count={8} />\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n              <MDBCard className=\"mb-4\">\r\n                <MDBCardHeader className=\"teal accent-4 text-white\">\r\n                  <Skeleton />\r\n                </MDBCardHeader>\r\n                <MDBCardBody>\r\n                  <Skeleton count={8} />\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n              <MDBCard className=\"mb-4\">\r\n                <MDBCardHeader className=\"teal accent-4 text-white\">\r\n                  <Skeleton />\r\n                </MDBCardHeader>\r\n                <MDBCardBody>\r\n                  <Skeleton count={8} />\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n            </MDBCol>\r\n          </MDBRow>\r\n        </MDBContainer>\r\n      </div>\r\n    );\r\n  } else if (loading === null) {\r\n    return <ErrorLoading />\r\n  } else {\r\n    return (\r\n      <div id='profile-ex' className='mb-5'>\r\n        <MDBContainer fluid>\r\n          <MDBRow>\r\n            <MDBCol lg='4' md='12'>\r\n              <MDBCard className='profile-card text-center mb-4'>\r\n                <MDBCardBody>\r\n                  <MDBCardTitle>\r\n                    <strong>{user.firstName} {user.lastName}</strong>\r\n                  </MDBCardTitle>\r\n                  <span>\r\n                    <span className=\"teal-text\">{user.email}</span>\r\n                    {' | '}\r\n                    <span className=\"teal-text\">{user.phoneNumber}</span>\r\n                  </span>\r\n                  <ul className='list-unstyled pt-4 text-left'>\r\n\r\n                    <hr />\r\n                    <li>\r\n                      <p>\r\n                        Date of Birth{' '}\r\n                        <span className='float-right'>\r\n                          {moment(parseInt(user.dob)).format('L')}\r\n                        </span>\r\n                      </p>\r\n                    </li>\r\n                    <hr />\r\n                    <li>\r\n                      <p>\r\n                        Available Balance (&#8358;){' '}\r\n                        <span className='float-right'>\r\n                          {money.format(user.wallet.availableBalance)}\r\n                        </span>\r\n                      </p>\r\n                    </li>\r\n                    <hr />\r\n                    <li>\r\n                      <p>\r\n                        Ledger Balance (&#8358;){' '}\r\n                        <span className='float-right'>\r\n                          {money.format(user.wallet.ledgerBalance)}\r\n                        </span>\r\n                      </p>\r\n                    </li>\r\n                    <hr />\r\n                  </ul>\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n\r\n\r\n              <MDBCard className='mb-4'>\r\n                <MDBCardBody>\r\n                  <h5 className='text-center mb-4'>\r\n                    <strong>{user.firstName}'s Statistics </strong>\r\n                  </h5>\r\n                  <ul className='list-unstyled pt-4'>\r\n                    <li>\r\n                      <p>\r\n                        Total Listings{' '}\r\n                        <MDBBadge className='teal accent-4 float-right'>\r\n                          {user.listings.length}\r\n                        </MDBBadge>\r\n                      </p>\r\n                    </li>\r\n                    <hr />\r\n                    <li>\r\n                      <p>\r\n                        Total Transactions{' '}\r\n                        <MDBBadge className='teal accent-4 float-right'>\r\n                          {user.transactions.length}\r\n                        </MDBBadge>\r\n                      </p>\r\n                    </li>\r\n                  </ul>\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n            </MDBCol>\r\n            <MDBCol lg='8' md='12' className='text-center'>\r\n              <MDBCard className=\"mb-4\">\r\n                <MDBCardHeader className=\"teal accent-4 text-white\">\r\n                  {user.firstName}'s Transactions Log\r\n                </MDBCardHeader>\r\n                <MDBCardBody>\r\n                  <MDBDataTable striped responsive bordered small hover data={transactions} />\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n\r\n              <MDBCard className=\"mb-4\">\r\n                <MDBCardHeader className=\"teal accent-4 text-white\">\r\n                  {user.firstName}'s Listings Log\r\n                </MDBCardHeader>\r\n                <MDBCardBody>\r\n                  <MDBDataTable striped responsive bordered small hover data={listings} />\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n\r\n              <MDBCard className=\"mb-4\">\r\n                <MDBCardHeader className=\"teal accent-4 text-white\">\r\n                  {user.firstName}'s Rating History\r\n                </MDBCardHeader>\r\n                <MDBCardBody>\r\n                  <MDBDataTable striped responsive bordered small hover data={ratingHistory} />\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n\r\n            </MDBCol>\r\n          </MDBRow>\r\n        </MDBContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SingleUser;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBContainer,\r\n  MDBDataTable,\r\n  MDBView,\r\n  MDBBadge\r\n} from \"mdbreact\";\r\nimport moment from \"moment\";\r\n\r\nconst DispatchOrderLog = () => {\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [orders, setOrders] = useState([]);\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"S/N\",\r\n        field: \"sn\",\r\n      },\r\n      {\r\n        label: \"Order ID\",\r\n        field: \"id\",\r\n      },\r\n      {\r\n        label: \"Agent ID Number\",\r\n        field: \"agentIdNo\",\r\n      },\r\n      {\r\n        label: \"Agent Name\",\r\n        field: \"agentName\",\r\n      },\r\n      {\r\n        label: \"Agent Phone\",\r\n        field: \"agentPhone\",\r\n      },\r\n      {\r\n        label: \"Agent Identification\",\r\n        field: \"agentIdentification\",\r\n      },\r\n      {\r\n        label: \"Pickup Date From\",\r\n        field: \"pickupDateFrom\",\r\n      },\r\n      {\r\n        label: \"Pickup Date To\",\r\n        field: \"pickupDateTo\",\r\n      },\r\n      {\r\n        label: \"Order Status\",\r\n        field: \"status\",\r\n      },\r\n    ],\r\n    rows: !loading ? orders : [{\r\n      sn: <Skeleton />,\r\n      id: <Skeleton />,\r\n      agentName: <Skeleton />,\r\n      agentPhone: <Skeleton />,\r\n      agentIdNo: <Skeleton />,\r\n      agentIdentification: <Skeleton />,\r\n      pickupDateFrom: <Skeleton />,\r\n      pickupDateTo: <Skeleton />,\r\n      status: <Skeleton />\r\n    }]\r\n  };\r\n\r\n  const loadOrders = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/dispatch-orders`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        let sn = orders.length;\r\n        const rows = res.data.data.map(order => {\r\n          const row = {\r\n            sn: sn + 1,\r\n            id: order.id,\r\n            agentIdNo: order.pickupAgentIdNumber,\r\n            agentName: order.pickupAgentName,\r\n            agentPhone: order.pickupAgentPhone,\r\n            agentIdentification: order.pickupAgentIdentification,\r\n            pickupDateFrom: moment(parseInt(order.pickupDate.min)).format('L'),\r\n            pickupDateTo: moment(parseInt(order.pickupDate.max)).format('L'),\r\n            status: order.status === 1 ? <MDBBadge color=\"primary\">Sent</MDBBadge> : order.status === 2 ? <MDBBadge className=\"warning-color\">Released</MDBBadge> : order.status === 3 ? <MDBBadge className=\"success-color\">Dispatched</MDBBadge> : <MDBBadge className=\"danger-color\">Rejected</MDBBadge>,\r\n          };\r\n          sn++;\r\n          return row;\r\n        })\r\n        setLoading(false);\r\n        setOrders(rows);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        return [];\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadOrders();\r\n  }, []);\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCard>\r\n        <MDBCard narrow className=\"z-depth-0\">\r\n          <MDBView\r\n            cascade\r\n            className=\"teal accent-4 narrower py-2 my-3 d-flex justify-content-between align-items-center\"\r\n          >\r\n            <div className=\"text-left\"></div>\r\n            <span className=\"white-text text-bold mx-3\">\r\n              Dispatch Order Log\r\n            </span>\r\n            <div className=\"text-right\"></div>\r\n          </MDBView>\r\n        </MDBCard>\r\n        <MDBCardBody>\r\n          <MDBDataTable striped responsive bordered small hover data={data} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default DispatchOrderLog;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBContainer,\r\n  MDBDataTable,\r\n  MDBView,\r\n  MDBBadge\r\n} from \"mdbreact\";\r\nconst RejectedStockLog = () => {\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [stocks, setStocks] = useState([]);\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"S/N\",\r\n        field: \"sn\",\r\n      },\r\n      {\r\n        label: \"Stock ID\",\r\n        field: \"id\",\r\n      },\r\n      {\r\n        label: \"Stock Type\",\r\n        field: \"type\",\r\n      },\r\n      {\r\n        label: \"Products\",\r\n        field: \"products\",\r\n      },\r\n      {\r\n        label: \"Requisitioin\",\r\n        field: \"requisition\",\r\n      },\r\n      {\r\n        label: \"Stock Dispatch\",\r\n        field: \"dispatch\",\r\n      },\r\n      {\r\n        label: \"Status\",\r\n        field: \"status\",\r\n      }\r\n    ],\r\n    rows: !loading ? stocks : [{\r\n      sn: <Skeleton />,\r\n      id: <Skeleton />,\r\n      type: <Skeleton />,\r\n      products: <Skeleton />,\r\n      requisition: <Skeleton />,\r\n      diapatch: <Skeleton />,\r\n      status: <Skeleton />\r\n    }]\r\n  };\r\n\r\n\r\n  const loadStocks = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/stocks`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        let sn = stocks.length;\r\n        const rows = res.data.data.map(stock => {\r\n          if(stock.status === 4) {\r\n          const row = {\r\n            sn: sn + 1,\r\n            id: stock.id,\r\n            type: stock.type,\r\n            products: stock.products.length,\r\n            dispatch: stock.dispatch.id,\r\n            requisition: stock.requisition.id,\r\n            status: <MDBBadge className=\"danger-color\">Rejected</MDBBadge>,\r\n          };\r\n          sn++;\r\n          return row;\r\n        }\r\n        return null;\r\n        })\r\n        setLoading(false);\r\n        setStocks(rows);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        return [];\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadStocks();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCard>\r\n        <MDBCard narrow className=\"z-depth-0\">\r\n          <MDBView\r\n            cascade\r\n            className=\"teal accent-4 narrower py-2 my-3 d-flex justify-content-between align-items-center\"\r\n          >\r\n            <div className=\"text-left\"></div>\r\n            <span className=\"white-text text-bold mx-3\">\r\n              Rejected Stock Log\r\n            </span>\r\n            <div className=\"text-right\"></div>\r\n          </MDBView>\r\n        </MDBCard>\r\n        <MDBCardBody>\r\n          <MDBDataTable striped responsive bordered small hover data={data} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default RejectedStockLog;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBContainer,\r\n  MDBDataTable,\r\n  MDBView,\r\n  MDBBadge\r\n} from \"mdbreact\";\r\nconst StockReceiptLog = () => {\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [stocks, setStocks] = useState([]);\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"S/N\",\r\n        field: \"sn\",\r\n      },\r\n      {\r\n        label: \"Stock ID\",\r\n        field: \"id\",\r\n      },\r\n      {\r\n        label: \"Stock Type\",\r\n        field: \"type\",\r\n      },\r\n      {\r\n        label: \"Products\",\r\n        field: \"products\",\r\n      },\r\n      {\r\n        label: \"Requisitioin\",\r\n        field: \"requisition\",\r\n      },\r\n      {\r\n        label: \"Stock Dispatch\",\r\n        field: \"dispatch\",\r\n      },\r\n      {\r\n        label: \"Status\",\r\n        field: \"status\",\r\n      }\r\n    ],\r\n    rows: !loading ? stocks : [{\r\n      sn: <Skeleton />,\r\n      id: <Skeleton />,\r\n      type: <Skeleton />,\r\n      products: <Skeleton />,\r\n      requisition: <Skeleton />,\r\n      diapatch: <Skeleton />,\r\n      status: <Skeleton />\r\n    }]\r\n  };\r\n\r\n\r\n  const loadStocks = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/stocks`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        let sn = stocks.length;\r\n        const rows = res.data.data.map(stock => {\r\n          if(stock.status === 3) {\r\n          const row = {\r\n            sn: sn + 1,\r\n            id: stock.id,\r\n            type: stock.type,\r\n            products: stock.products.length,\r\n            dispatch: stock.dispatch.id,\r\n            requisition: stock.requisition.id,\r\n            status: <MDBBadge className=\"success-color\">Received</MDBBadge>,\r\n          };\r\n          sn++;\r\n          return row;\r\n        }\r\n        return null;\r\n        })\r\n        setLoading(false);\r\n        setStocks(rows);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        return [];\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadStocks();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCard>\r\n        <MDBCard narrow className=\"z-depth-0\">\r\n          <MDBView\r\n            cascade\r\n            className=\"teal accent-4 narrower py-2 my-3 d-flex justify-content-between align-items-center\"\r\n          >\r\n            <div className=\"text-left\"></div>\r\n            <span className=\"white-text text-bold mx-3\">\r\n              Stock Receipt Log\r\n            </span>\r\n            <div className=\"text-right\"></div>\r\n          </MDBView>\r\n        </MDBCard>\r\n        <MDBCardBody>\r\n          <MDBDataTable striped responsive bordered small hover data={data} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default StockReceiptLog;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  MDBBtn,\r\n  MDBContainer,\r\n  MDBCol,\r\n  MDBInput,\r\n  MDBCard,\r\n  MDBCardBody\r\n} from \"mdbreact\";\r\nimport axios from \"axios\";\r\nimport { apiUrl } from \"../../config\";\r\n\r\nconst EditPassword = () => {\r\n\r\n  const [oldPassword, setOldPassword] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [feedback, setFeedback] = useState(null);\r\n  const [success, setSuccess] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleEditpassword = async () => {\r\n    setLoading(true);\r\n    setFeedback(null);\r\n    setSuccess(null);\r\n    if (!oldPassword) {\r\n      setLoading(false);\r\n      return setFeedback(\"Old password is required to reset your password!\")\r\n    }\r\n    if (!newPassword) {\r\n      setLoading(false);\r\n      return setFeedback(\"You must specify a new password!\")\r\n    }\r\n    if (!confirmPassword) {\r\n      setLoading(false);\r\n      return setFeedback(\"Please confirm your password!\")\r\n    }\r\n    if (confirmPassword !== newPassword) {\r\n      setLoading(false);\r\n      return setFeedback(\"Passwords do not match!\")\r\n    }\r\n    setFeedback(null);\r\n    await axios.put(`${apiUrl}/admin-users/update-password`, { email: localStorage.getItem('email'), oldPassword, newPassword }, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        if (res.data.error) {\r\n          setLoading(false);\r\n          return setFeedback(res.data.message);\r\n        }\r\n        setLoading(false);\r\n        setOldPassword('');\r\n        setNewPassword('');\r\n        setConfirmPassword('');\r\n        return setSuccess(\"Password Updated Successfully!\");\r\n      })\r\n      .catch(err => {\r\n        setLoading(false);\r\n        return setFeedback(\"There's a problem reseting your password!\");\r\n      })\r\n  }\r\n\r\n\r\n  return (\r\n    <MDBContainer className=\"d-flex justify-content-center\">\r\n      <MDBCol md='12' lg='5'>\r\n        <MDBCard className=\"mt-2\">\r\n          <MDBCardBody>\r\n            <p className='h5 text-center mb-4'>Reset Password</p>\r\n            <MDBInput\r\n              type=\"password\"\r\n              label='Old Password'\r\n              onChange={(e) => setOldPassword(e.target.value)}\r\n              value={oldPassword}\r\n            />\r\n            <MDBInput\r\n              type='password'\r\n              label='New Password'\r\n              onChange={e => setNewPassword(e.target.value)}\r\n              value={newPassword}\r\n            />\r\n            <MDBInput\r\n              type='password'\r\n              label='Confirm Password'\r\n              onChange={e => setConfirmPassword(e.target.value)}\r\n              value={confirmPassword}\r\n            />\r\n            <div className=\"alert-danger\">\r\n              {feedback && feedback}\r\n            </div>\r\n            <div className=\"alert-success\">\r\n              {success && success}\r\n            </div>\r\n            <div className='text-center'>\r\n              <MDBBtn className=\"teal accent-4\" onClick={() => handleEditpassword()}>RESET {loading && (\r\n                <div className=\"spinner-border spinner-border-sm text-white\" role=\"status\">\r\n                  <span className=\"sr-only\">Loading...</span>\r\n                </div>)}</MDBBtn>\r\n            </div>\r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </MDBCol>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default EditPassword;\r\n","import React from \"react\";\r\n\r\nconst EmailSettings = () => {\r\n  return (\r\n    <div>\r\n      <p>Email Settings</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmailSettings;\r\n","import React from \"react\";\r\n\r\nconst SmsSettings = () => {\r\n  return (\r\n    <div>\r\n      <p>SmsSettings</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SmsSettings;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {\r\n  MDBContainer,\r\n  MDBCol,\r\n  MDBCard,\r\n  MDBInput,\r\n  MDBCardBody,\r\n  MDBBtn,\r\n  MDBSelectInput,\r\n  MDBSelect,\r\n  MDBSelectOption,\r\n  MDBSelectOptions\r\n} from 'mdbreact';\r\n\r\nconst AddNewStaff = () => {\r\n  const [roles, setRoles] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [feedback, setFeedback] = useState(null);\r\n  const [success, setSuccess] = useState(null);\r\n  const [form, setForm] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    phoneNumber: '',\r\n    roleId: '',\r\n    role: '',\r\n    password: ''\r\n  });\r\n  const loadRoles = async () => {\r\n    axios.get(`${apiUrl}/admin-roles`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        const items = res.data.data.map(role => {\r\n          return role;\r\n        })\r\n        setRoles([...items]);\r\n      })\r\n      .catch(err => {\r\n        return [];\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadRoles();\r\n  }, []);\r\n\r\n  const validateEmail = (email) => {\r\n    const exp = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i;\r\n    return exp.test(String(email).toLowerCase());\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    setLoading(true);\r\n    setFeedback(null);\r\n    if (!form.email || !form.phoneNumber || !form.roleId || !form.role || !form.password || !form.firstName || !form.lastName) {\r\n      setLoading(false);\r\n      return setFeedback(\"All fields are required to create a staff.\");\r\n    }\r\n    if (!validateEmail(form.email)) {\r\n      setLoading(false);\r\n      return setFeedback(\"Invalid Email\");\r\n    };\r\n    axios.post(`${apiUrl}/admin-users`, form, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        setLoading(false);\r\n        setForm({\r\n          firstName: '',\r\n          lastName: '',\r\n          email: '',\r\n          phoneNumber: '',\r\n          roleId: '',\r\n          role: '',\r\n          password: ''\r\n        });\r\n        setSuccess(\"Staff Created Successfully!\");\r\n        window.location.href = '/staff/all-staff';\r\n      })\r\n      .catch(err => {\r\n        setLoading(false);\r\n      })\r\n  }\r\n  let cnt = 2;\r\n\r\n  return (\r\n    <MDBContainer className=\"d-flex justify-content-center\">\r\n      <MDBCol lg='5' className='mb-4'>\r\n        <MDBCard>\r\n          <MDBCardBody>\r\n            <div className='form-header teal accent-4'>\r\n              <h3> Add New Staff </h3>\r\n            </div>\r\n            <div className=\"mx-2 alert-danger\">{feedback && feedback}</div>\r\n            <div className=\"mx-2 alert-success\">{success && success}</div>\r\n            <MDBInput label='First Name' value={form.firstName} onChange={(e) => setForm({ ...form, firstName: e.target.value })} />\r\n            <MDBInput label='Last Name' value={form.lastName} onChange={(e) => setForm({ ...form, lastName: e.target.value })} />\r\n            <MDBInput label='Email' value={form.email} type=\"email\" onChange={(e) => setForm({ ...form, email: e.target.value })} />\r\n            <MDBInput label='Phone' value={form.phoneNumber} type=\"number\" onChange={(e) => setForm({ ...form, phoneNumber: e.target.value })} />\r\n            <MDBInput label='Default Password' value={form.password} onChange={(e) => setForm({ ...form, password: e.target.value })} />\r\n            <MDBSelect label=\"Select Role ID\" value={form.roleId} getValue={(val) => setForm({ ...form, roleId: val[0] })}>\r\n              <MDBSelectInput />\r\n              <MDBSelectOptions>\r\n                <MDBSelectOption disabled>Select Role ID</MDBSelectOption>\r\n\r\n                {roles.map(role => {\r\n                  if (roles[0] === role) return null;\r\n                  return <MDBSelectOption key={role.id} value={cnt}>{`${cnt++} - ${role.name}`}</MDBSelectOption>\r\n                })}\r\n              </MDBSelectOptions>\r\n            </MDBSelect>\r\n            <MDBSelect label=\"Select Role\" value={form.role} getValue={(val) => setForm({ ...form, role: val[0] })}>\r\n              <MDBSelectInput />\r\n              <MDBSelectOptions>\r\n                <MDBSelectOption disabled>Select Role</MDBSelectOption>\r\n                {roles.map(role => {\r\n                  if (roles[0] === role) return null;\r\n                  return <MDBSelectOption key={role.id} value={role.id}>{role.name}</MDBSelectOption>\r\n                })}\r\n              </MDBSelectOptions>\r\n            </MDBSelect>\r\n            <div className='text-center'>\r\n              <MDBBtn className='teal accent-4' onClick={() => handleSubmit()}>\r\n                {loading && (\r\n                  <div className=\"spinner-border spinner-border-sm text-white\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                  </div>)}\r\n                  Create\r\n                  </MDBBtn>\r\n            </div>\r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </MDBCol>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default AddNewStaff;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBContainer,\r\n  MDBDataTable,\r\n  MDBView,\r\n  MDBBadge,\r\n  MDBIcon\r\n} from \"mdbreact\";\r\nimport moment from \"moment\";\r\n\r\n\r\nconst AllStaff = () => {\r\n  const [staff, setStaff] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [success, setSuccess] = useState(null);\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"S/N\",\r\n        field: \"sn\"\r\n      },\r\n      {\r\n        label: \"Name\",\r\n        field: \"name\"\r\n      },\r\n      {\r\n        label: \"Email\",\r\n        field: \"email\"\r\n      },\r\n      {\r\n        label: \"Phone\",\r\n        field: \"phone\"\r\n      },\r\n      {\r\n        label: \"Role\",\r\n        field: \"role\"\r\n      },\r\n      {\r\n        label: \"Created At\",\r\n        field: \"createdAt\"\r\n      },\r\n      {\r\n        label: \"Action\",\r\n        field: \"action\"\r\n      }\r\n    ],\r\n    rows: !loading ? staff : [{\r\n      sn: <div className=\"spinner-border spinner-border-sm teal-text\" role=\"status\" ><span className=\"sr-only\">Loading...</span></div >,\r\n      name: <div className=\"spinner-border spinner-border-sm teal-text\" role=\"status\" ><span className=\"sr-only\">Loading...</span></div >,\r\n      email: <div className=\"spinner-border spinner-border-sm teal-text\" role=\"status\" ><span className=\"sr-only\">Loading...</span></div >,\r\n      phone: <div className=\"spinner-border spinner-border-sm teal-text\" role=\"status\" ><span className=\"sr-only\">Loading...</span></div >,\r\n      role: <div className=\"spinner-border spinner-border-sm teal-text\" role=\"status\" ><span className=\"sr-only\">Loading...</span></div >,\r\n      createdAt: <div className=\"spinner-border spinner-border-sm teal-text\" role=\"status\" ><span className=\"sr-only\">Loading...</span></div >,\r\n      action: <div className=\"spinner-border spinner-border-sm teal-text\" role=\"status\" ><span className=\"sr-only\">Loading...</span></div >\r\n    }]\r\n  };\r\n\r\n  const loadUsers = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/admin-users`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        let sn = staff.length;\r\n        const rows = res.data.data.map(user => {\r\n          const row = {\r\n            sn: sn + 1,\r\n            name: `${user.firstName} ${user.lastName}`,\r\n            email: user.email,\r\n            phone: user.phoneNumber,\r\n            role: user.role.name,\r\n            createdAt: moment(parseInt(user.createdAt)).format('L'),\r\n            action: user.roleId !== 1 ? (<div>\r\n              <MDBBadge className=\"primary-color mx-1\" onClick={() => handleEditStaff(user)}><MDBIcon icon=\"edit\" className=\"white-text\" /></MDBBadge>\r\n              <MDBBadge className=\"danger-color\" onClick={() => handleDeleteStaff(user)}><MDBIcon icon=\"trash\" className=\"white-text\" /></MDBBadge>\r\n            </div>) : null\r\n          };\r\n          sn++;\r\n          return row;\r\n        })\r\n        setLoading(false);\r\n        setStaff(rows);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        return [];\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadUsers();\r\n  }, []);\r\n\r\n  const handleDeleteStaff = (user) => {\r\n    if (window.confirm(`Are you sure you want to delete ${user.firstName} as an Admin? \\nNB: This cannot be undone!`)) {\r\n      axios.delete(`${apiUrl}/admin-users/${user.id}`, {\r\n        headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n      })\r\n        .then(res => {\r\n          if (res.data.success) {\r\n            setSuccess(\"Staff deleted successfuly!\");\r\n            window.location.reload();\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        })\r\n    }\r\n  }\r\n  const handleEditStaff = (user) => {\r\n    alert(user.email);\r\n  }\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCard>\r\n        <MDBCard narrow className=\"z-depth-0\">\r\n          <MDBView\r\n            cascade\r\n            className=\"teal accent-4 narrower py-2 my-3 d-flex justify-content-between align-items-center\"\r\n          >\r\n            <div className=\"text-left\"></div>\r\n            <span className=\"white-text text-bold mx-3\">All Staff</span>\r\n            <div className=\"text-right\"></div>\r\n          </MDBView>\r\n          {success && <div className=\"mx-5 alert-success\">{success}</div>}\r\n        </MDBCard>\r\n        <MDBCardBody>\r\n          <MDBDataTable striped responsive bordered small hover data={data} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default AllStaff;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBContainer,\r\n  MDBDataTable,\r\n  MDBView,\r\n  MDBBtn,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBInput,\r\n  MDBIcon,\r\n  MDBBadge\r\n} from \"mdbreact\";\r\nimport moment from \"moment\";\r\n\r\nconst RoleManagement = () => {\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [openEdit, setOpenEdit] = useState(false);\r\n  const [roles, setRoles] = useState([]);\r\n  const [role, setRole] = useState(null);\r\n  const [roleName, setRoleName] = useState('');\r\n  const [feedback, setFeedback] = useState(null);\r\n  const [success, setSuccess] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n\r\n  const toggleModal = () => {\r\n    setOpenModal(!openModal);\r\n  }\r\n  const toggleEdit = (role) => {\r\n    setRole(role);\r\n    setRoleName(role.name);\r\n    setOpenEdit(!openEdit);\r\n  }\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"S/N\",\r\n        field: \"sn\"\r\n      },\r\n      {\r\n        label: \"Role Name\",\r\n        field: \"roleName\"\r\n      },\r\n      {\r\n        label: \"Date Created\",\r\n        field: \"dateCreated\"\r\n      },\r\n      {\r\n        label: \"Date Updated\",\r\n        field: \"dateUpdated\"\r\n      },\r\n      {\r\n        label: \"Action\",\r\n        field: \"action\"\r\n      }\r\n    ],\r\n    rows: !loading ? roles : [{\r\n      sn: <div className=\"spinner-border spinner-border-sm teal-text\" role=\"status\" ><span className=\"sr-only\">Loading...</span></div >,\r\n      roleName: <div className=\"spinner-border spinner-border-sm teal-text\" role=\"status\" ><span className=\"sr-only\">Loading...</span></div >,\r\n      dateCreated: <div className=\"spinner-border spinner-border-sm teal-text\" role=\"status\" ><span className=\"sr-only\">Loading...</span></div >,\r\n      dateUpdated: <div className=\"spinner-border spinner-border-sm teal-text\" role=\"status\" ><span className=\"sr-only\">Loading...</span></div >,\r\n      action: <div className=\"spinner-border spinner-border-sm teal-text\" role=\"status\" ><span className=\"sr-only\">Loading...</span></div >\r\n    }, ...roles]\r\n  };\r\n\r\n\r\n  const loadRoles = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/admin-roles`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        let cnt = 1;\r\n        let sn = roles.length;\r\n        const rows = res.data.data.map(role => {\r\n          const row = {\r\n            sn: sn + 1,\r\n            roleName: role.name,\r\n            dateCreated: moment(parseInt(role.createdAt)).format('L'),\r\n            dateUpdated: moment(parseInt(role.updatedAt)).format('L'),\r\n            action: (<div>\r\n              {(cnt !== 1) && (<>\r\n                <MDBBadge className=\"primary-color mx-1\" onClick={() => toggleEdit(role)}><MDBIcon icon=\"edit\" className=\"white-text\" /></MDBBadge>\r\n                <MDBBadge className=\"danger-color\" onClick={() => handleDeleteRole(role)}><MDBIcon icon=\"trash-alt\" className=\"white-text\" /></MDBBadge>\r\n              </>)}\r\n            </div>)\r\n          };\r\n          sn++\r\n          cnt++;\r\n          return row;\r\n        })\r\n        setLoading(false);\r\n        setRoles(rows);\r\n      })\r\n      .catch(err => {\r\n        return [];\r\n      })\r\n  }\r\n\r\n  const handleDeleteRole = (role) => {\r\n    if (window.confirm(`Are you sure you want to delete the ${role.name} role? \\n NB: This cannot be undone!`)) {\r\n      axios.delete(`${apiUrl}/admin-roles/${role.id}`, {\r\n        headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n      })\r\n        .then(res => {\r\n          if (res.data.success) {\r\n            setRoles(roles.filter(r => r.id !== res.data.data.id));\r\n            return setSuccess(`${role.name} deleted successfully!`);\r\n          }\r\n          return setFeedback(\"Unable to delete role!\");\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n    }\r\n  }\r\n\r\n  const createRole = () => {\r\n    setLoading(true);\r\n    if (!roleName) {\r\n      setLoading(false);\r\n      return setFeedback(\"Role name cannot be empty!\");\r\n    }\r\n    const name = { name: roleName };\r\n    axios.post(`${apiUrl}/admin-roles`, name, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        const role = res.data.data\r\n        const row = {\r\n          sn: roles.length + 1,\r\n          roleName: role.name,\r\n          dateCreated: role.createdAt,\r\n          dateUpdated: role.updatedAt,\r\n          action: (<div>\r\n            <MDBBadge className=\"primary-color mx-1\"><MDBIcon icon=\"edit\" className=\"white-text\" /></MDBBadge>\r\n            <MDBBadge className=\"danger-color\" onClick={() => handleDeleteRole(role)}><MDBIcon icon=\"trash-alt\" className=\"white-text\" /></MDBBadge>\r\n          </div>)\r\n        };\r\n        setRoles([...roles, row]);\r\n        setLoading(false);\r\n        toggleModal();\r\n      })\r\n      .catch(err => {\r\n        setLoading(false);\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  const editRole = () => {\r\n    setLoading(true);\r\n    if (!roleName) {\r\n      setLoading(false);\r\n      return setFeedback(\"Role name cannot be empty!\");\r\n    }\r\n    const dat = { name: roleName, id: role.id };\r\n    axios.put(`${apiUrl}/admin-roles`, dat, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        if (res.data.success) {\r\n          window.location.reload();\r\n        }\r\n        toggleEdit(role);\r\n        setLoading(false);\r\n        setSuccess(\"Role updated successfully!\");\r\n      })\r\n      .catch(err => {\r\n        setLoading(false);\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadRoles();\r\n  }, []);\r\n\r\n  const handleRoleName = (e) => {\r\n    setRoleName(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <MDBBtn className=\"teal accent-4\" onClick={() => {\r\n        toggleModal();\r\n      }\r\n      }>Create New Role</MDBBtn>\r\n      <MDBCard>\r\n        <MDBCard narrow className=\"z-depth-0\">\r\n          <MDBView\r\n            cascade\r\n            className=\"teal accent-4 narrower py-2 my-3 d-flex justify-content-between align-items-center\"\r\n          >\r\n            <div className=\"text-left\"></div>\r\n            <span className=\"white-text text-bold mx-3\">Role Management</span>\r\n            <div className=\"text-right\"></div>\r\n          </MDBView>\r\n        </MDBCard>\r\n        {success && <div className=\"mx-5 alert-success\">{success}</div>}\r\n        <MDBCardBody>\r\n          <MDBDataTable striped responsive bordered small hover data={data} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n\r\n\r\n      <MDBModal\r\n        isOpen={openModal}\r\n        toggle={() => this.toggleModal()}\r\n        inline={openModal === false}\r\n        backdrop={openModal === false ? false : true}\r\n        cascading\r\n        disableFocusTrap={openModal === false ? true : false}>\r\n        <MDBModalHeader\r\n          toggle={openModal === false ? () => { } : () => toggleModal()}\r\n          className='teal accent-4 white-text'\r\n        >\r\n          <MDBIcon icon=\"add\" className='mr-2' />{' '}\r\n          Create A New Role\r\n        </MDBModalHeader>\r\n        <div className=\"alert-danger\">{feedback && feedback}</div>\r\n        <MDBModalBody className='mb-0'>\r\n          <MDBInput label='Role  Name' value={roleName} onChange={(val) => handleRoleName(val)} />\r\n          <div className='text-center mb-1-half'>\r\n            <MDBBtn\r\n              className='teal accent-4 mb-2'\r\n              onClick={() => createRole()}\r\n            >{loading && (\r\n              <div className=\"spinner-border spinner-border-sm text-white\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </div>)}\r\n              Create\r\n              <MDBIcon icon=\"plus\" className='ml-1' />\r\n            </MDBBtn>\r\n          </div>\r\n        </MDBModalBody>\r\n      </MDBModal>\r\n\r\n      <MDBModal\r\n        isOpen={openEdit}\r\n        toggle={() => this.toggleEdit(role)}\r\n        inline={openEdit === false}\r\n        backdrop={openEdit === false ? false : true}\r\n        cascading\r\n        disableFocusTrap={openEdit === false ? true : false}>\r\n        <MDBModalHeader\r\n          toggle={openEdit === false ? () => { } : () => toggleEdit(role)}\r\n          className='teal accent-4 white-text'\r\n        >\r\n          <MDBIcon icon=\"add\" className='mr-2' />{' '}\r\n          Edit {role && role.name} Role\r\n        </MDBModalHeader>\r\n        <div className=\"alert-danger\">{feedback && feedback}</div>\r\n        <MDBModalBody className='mb-0'>\r\n          <MDBInput label='Role  Name' value={roleName} onChange={(val) => handleRoleName(val)} />\r\n          <div className='text-center mb-1-half'>\r\n            <MDBBtn\r\n              className='teal accent-4 mb-2'\r\n              onClick={() => editRole()}\r\n            >{loading && (\r\n              <div className=\"spinner-border spinner-border-sm text-white\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </div>)}\r\n              Update\r\n              <MDBIcon icon=\"plus\" className='ml-1' />\r\n            </MDBBtn>\r\n          </div>\r\n        </MDBModalBody>\r\n      </MDBModal>\r\n\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default RoleManagement;\r\n","import React from \"react\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBContainer,\r\n  MDBDataTable,\r\n  MDBView\r\n} from \"mdbreact\";\r\n\r\n\r\nconst data = {\r\n  columns: [\r\n    {\r\n      label: \"S/N\",\r\n      field: \"sn\",\r\n    },\r\n    {\r\n      label: \"Listing ID\",\r\n      field: \"listingId\",\r\n    },\r\n    {\r\n      label: \"Amount\",\r\n      field: \"amount\",\r\n    },\r\n    {\r\n      label: \"Date Purchased\",\r\n      field: \"datePurchased\",\r\n    },\r\n    {\r\n      label: \"Date Expired\",\r\n      field: \"dateExpired\",\r\n    }\r\n  ],\r\n  rows: [\r\n    {\r\n      sn: \"1\",\r\n      listingId: \"876483hu384989G94\",\r\n      amount: \"300,000\",\r\n      datePurchased: \"2020/01/04\",\r\n      dateExpired: \"2020/03/23\"\r\n    },\r\n    {\r\n      sn: \"2\",\r\n      listingId: \"876483hu384989G94\",\r\n      amount: \"300,000\",\r\n      datePurchased: \"2020/01/04\",\r\n      dateExpired: \"2020/03/23\"\r\n    },\r\n    {\r\n      sn: \"3\",\r\n      listingId: \"876483hu384989G94\",\r\n      amount: \"300,000\",\r\n      datePurchased: \"2020/01/04\",\r\n      dateExpired: \"2020/03/23\"\r\n    }\r\n  ]\r\n};\r\n\r\n\r\nconst ExpiredRentLog = () => {\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCard>\r\n        <MDBCard narrow className=\"z-depth-0\">\r\n          <MDBView\r\n            cascade\r\n            className=\"teal accent-4 narrower py-2 my-3 d-flex justify-content-between align-items-center\"\r\n          >\r\n            <div className=\"text-left\"></div>\r\n            <span className=\"white-text text-bold mx-3\">Expired Rent Log</span>\r\n            <div className=\"text-right\"></div>\r\n          </MDBView>\r\n        </MDBCard>\r\n        <MDBCardBody>\r\n          <MDBDataTable striped responsive bordered small hover data={data} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default ExpiredRentLog;\r\n","import React from \"react\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBContainer,\r\n  MDBDataTable,\r\n  MDBView,\r\n  MDBBadge\r\n} from \"mdbreact\";\r\n\r\nconst data = {\r\n  columns: [\r\n    {\r\n      label: \"S/N\",\r\n      field: \"sn\",\r\n    },\r\n    {\r\n      label: \"Transaction ID\",\r\n      field: \"transactionId\",\r\n    },\r\n    {\r\n      label: \"User Name\",\r\n      field: \"userName\",\r\n    },\r\n    {\r\n      label: \"User Email\",\r\n      field: \"userEmail\",\r\n    },\r\n    {\r\n      label: \"Amount\",\r\n      field: \"amount\",\r\n    },\r\n    {\r\n      label: \"Status\",\r\n      field: \"status\",\r\n    },\r\n    {\r\n      label: \"Date\",\r\n      field: \"date\",\r\n    }\r\n  ],\r\n  rows: [\r\n    {\r\n      sn: \"1\",\r\n      transactionId: \"876483hu384989G94\",\r\n      userName: \"John Kester\",\r\n      userEmail: \"email@email.com\",\r\n      amount: \"300,000\",\r\n      status: <MDBBadge color=\"success\">Approved</MDBBadge>,\r\n      date: \"2020/03/25\"\r\n    },\r\n    {\r\n      sn: \"2\",\r\n      transactionId: \"876483hu384989G94\",\r\n      userName: \"John Kester\",\r\n      userEmail: \"email@email.com\",\r\n      amount: \"120,000\",\r\n      status: <MDBBadge color=\"warning\">pending</MDBBadge>,\r\n      date: \"2020/03/25\"\r\n    },\r\n    {\r\n      sn: \"3\",\r\n      transactionId: \"876483hu384989G94\",\r\n      userName: \"John Kester\",\r\n      userEmail: \"email@email.com\",\r\n      amount: \"210,000\",\r\n      status: <MDBBadge color=\"grey\">failed</MDBBadge>,\r\n      date: \"2020/03/25\"\r\n    }\r\n  ]\r\n};\r\n\r\nconst MerchantPayoutLog = () => {\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCard>\r\n        <MDBCard narrow className=\"z-depth-0\">\r\n          <MDBView\r\n            cascade\r\n            className=\"teal accent-4 narrower py-2 my-3 d-flex justify-content-between align-items-center\"\r\n          >\r\n            <div className=\"text-left\"></div>\r\n            <span className=\"white-text text-bold mx-3\">\r\n              Merchant Payout Log\r\n            </span>\r\n            <div className=\"text-right\"></div>\r\n          </MDBView>\r\n        </MDBCard>\r\n        <MDBCardBody>\r\n          <MDBDataTable striped responsive bordered small hover data={data} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default MerchantPayoutLog;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { apiUrl } from \"../../config\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBContainer,\r\n  MDBDataTable,\r\n  MDBView\r\n} from \"mdbreact\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\n\r\nconst ReferralLog = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [referrals, setReferrals] = useState([]);\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"S/N\",\r\n        field: \"sn\",\r\n      },\r\n      {\r\n        label: \"Referral ID\",\r\n        field: \"refId\",\r\n      },\r\n      {\r\n        label: \"Referral Code\",\r\n        field: \"refCode\",\r\n      },\r\n      {\r\n        label: \"User ID\",\r\n        field: \"userId\",\r\n      },\r\n      {\r\n        label: \"Referrals\",\r\n        field: \"referrals\",\r\n      },\r\n      {\r\n        label: \"Date Created\",\r\n        field: \"date\",\r\n      }\r\n    ],\r\n    rows: !loading ? referrals : [{\r\n      sn: <Skeleton />,\r\n      refId: <Skeleton />,\r\n      refCode: <Skeleton />,\r\n      userId: <Skeleton />,\r\n      referrals: <Skeleton />,\r\n      date: <Skeleton />\r\n    }]\r\n  };\r\n\r\n\r\n  const loadReferrals = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/referrals`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        let sn = referrals.length;\r\n        const rows = res.data.data.map(ref => {\r\n          const row = {\r\n            sn: sn + 1,\r\n            refId: ref.id,\r\n            refCode: ref.refCode,\r\n            userId: ref.userId,\r\n            referrals: ref.refs.length,\r\n            date: ref.createdAt\r\n          };\r\n          sn++;\r\n          return row;\r\n        })\r\n        setLoading(false);\r\n        setReferrals([...rows]);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        return [];\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadReferrals();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCard>\r\n        <MDBCard narrow className=\"z-depth-0\">\r\n          <MDBView\r\n            cascade\r\n            className=\"teal accent-4 narrower py-2 my-3 d-flex justify-content-between align-items-center\"\r\n          >\r\n            <div className=\"text-left\"></div>\r\n            <span className=\"white-text text-bold mx-3\">Referral Log</span>\r\n            <div className=\"text-right\"></div>\r\n          </MDBView>\r\n        </MDBCard>\r\n        <MDBCardBody>\r\n          <MDBDataTable striped responsive bordered small hover data={data} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default ReferralLog;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport moment from \"moment\";\r\nimport { money } from \"../../functions\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBContainer,\r\n  MDBDataTable,\r\n  MDBView,\r\n  MDBBadge\r\n} from \"mdbreact\";\r\n\r\n\r\nconst WareHousersPaymentLog = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [payments, setPayments] = useState([]);\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"S/N\",\r\n        field: \"sn\",\r\n      },\r\n      {\r\n        label: \"Payment ID\",\r\n        field: \"paymentId\",\r\n      },\r\n      {\r\n        label: \"Amount\",\r\n        field: \"amount\",\r\n      },\r\n      {\r\n        label: \"Channel\",\r\n        field: \"channel\",\r\n      },\r\n      {\r\n        label: \"Info\",\r\n        field: \"info\",\r\n      },\r\n      {\r\n        label: \"Customer Email\",\r\n        field: \"customerEmail\",\r\n      },\r\n      {\r\n        label: \"Expires\",\r\n        field: \"expires\",\r\n      },\r\n      {\r\n        label: \"Status\",\r\n        field: \"status\",\r\n      },\r\n      {\r\n        label: \"Date\",\r\n        field: \"date\",\r\n      }\r\n    ],\r\n    rows: !loading ? payments : [{\r\n      sn: <Skeleton />,\r\n      paymentId: <Skeleton />,\r\n      amount: <Skeleton />,\r\n      channel: <Skeleton />,\r\n      info: <Skeleton />,\r\n      customerEmail: <Skeleton />,\r\n      expires: <Skeleton />,\r\n      status: <Skeleton />,\r\n      date: <Skeleton />\r\n    }]\r\n  };\r\n\r\n  const loadPayments = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/warehousers-payments`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        let sn = payments.length;\r\n        const rows = res.data.data.map(payment => {\r\n          const row = {\r\n            sn: sn + 1,\r\n            paymentId: payment.id,\r\n            amount: <> &#8358; {money.format(parseInt(payment.amount))} </>,\r\n            channel: payment.channel,\r\n            info: payment.info,\r\n            customerEmail: payment.customer.email,\r\n            expires: moment(parseInt(payment.requisition.expires)).format('L'),\r\n            status: payment.status === 2 ? <MDBBadge color=\"success\">Success</MDBBadge> : <MDBBadge className=\"danger-color\">Failed</MDBBadge>,\r\n            date: moment(payment.createdAt).format('L')\r\n          };\r\n          sn++;\r\n          return row;\r\n        })\r\n        setLoading(false);\r\n        setPayments(rows);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        return [];\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadPayments();\r\n  }, []);\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCard>\r\n        <MDBCard narrow className=\"z-depth-0\">\r\n          <MDBView\r\n            cascade\r\n            className=\"teal accent-4 narrower py-2 my-3 d-flex justify-content-between align-items-center\"\r\n          >\r\n            <div className=\"text-left\"></div>\r\n            <span className=\"white-text text-bold mx-3\">\r\n              Warehousers' Payment Log\r\n            </span>\r\n            <div className=\"text-right\"></div>\r\n          </MDBView>\r\n        </MDBCard>\r\n        <MDBCardBody>\r\n          <MDBDataTable striped responsive bordered small hover data={data} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default WareHousersPaymentLog;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { apiUrl } from \"../../config\";\r\nimport { money } from \"../../functions\";\r\nimport moment from \"moment\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBContainer,\r\n  MDBDataTable,\r\n  MDBView,\r\n  MDBBadge\r\n} from \"mdbreact\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\n\r\nconst WithdrawalLog = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [trans, setTrans] = useState([]);\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"S/N\",\r\n        field: \"sn\",\r\n      },\r\n      {\r\n        label: \"Transaction ID\",\r\n        field: \"transactionId\",\r\n      },\r\n      {\r\n        label: \"Type\",\r\n        field: \"type\",\r\n      },\r\n      {\r\n        label: \"User Email\",\r\n        field: \"userEmail\",\r\n      },\r\n      {\r\n        label: \"Amount\",\r\n        field: \"amount\",\r\n      },\r\n      {\r\n        label: \"Commission\",\r\n        field: \"commission\",\r\n      },\r\n      {\r\n        label: \"Description\",\r\n        field: \"desc\",\r\n      },\r\n      {\r\n        label: \"Status\",\r\n        field: \"status\",\r\n      },\r\n      {\r\n        label: \"Transaction Date\",\r\n        field: \"date\",\r\n      }\r\n    ],\r\n    rows: !loading ? trans : [{\r\n      sn: <Skeleton />,\r\n      transactionId: <Skeleton />,\r\n      userEmail: <Skeleton />,\r\n      type: <Skeleton />,\r\n      status: <Skeleton />,\r\n      desc: <Skeleton />,\r\n      amount: <Skeleton />,\r\n      commission: <Skeleton />,\r\n      date: <Skeleton />\r\n    }]\r\n  };\r\n\r\n  const loadTransactions = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/transactions`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        let sn = trans.length;\r\n        const rows = res.data.data.map(tran => {\r\n          if (tran.description === \"withdrawal\") {\r\n            const row = {\r\n              sn: sn + 1,\r\n              transactionId: tran.id,\r\n              userEmail: tran.user.email,\r\n              type: tran.type,\r\n              desc: tran.description,\r\n              commission: <> &#8358; {money.format(parseInt(tran.fees))} </>,\r\n              amount: <> &#8358; {money.format(parseInt(tran.amount))} </>,\r\n              status: tran.status === 2 ? <MDBBadge color=\"success\">Success</MDBBadge> : <MDBBadge className=\"danger-color\">Failed</MDBBadge>,\r\n              date: moment(tran.createdAt).format('L')\r\n            };\r\n            sn++;\r\n            return row;\r\n          }\r\n          return null;\r\n        })\r\n        setLoading(false);\r\n        setTrans([...rows]);\r\n      })\r\n      .catch(err => {\r\n        return [];\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadTransactions();\r\n  }, []);\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCard>\r\n        <MDBCard narrow className=\"z-depth-0\">\r\n          <MDBView\r\n            cascade\r\n            className=\"teal accent-4 narrower py-2 my-3 d-flex justify-content-between align-items-center\"\r\n          >\r\n            <div className=\"text-left\"></div>\r\n            <span className=\"white-text text-bold mx-3\">Withdrawal Log</span>\r\n            <div className=\"text-right\"></div>\r\n          </MDBView>\r\n        </MDBCard>\r\n        <MDBCardBody>\r\n          <MDBDataTable striped responsive bordered small hover data={data} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default WithdrawalLog;\r\n","/* \r\n* List of all users that are also merchants are diplayed here\r\n* When you click to view the transactions. It brings up a list\r\n* having the transactions log by that particular user.\r\n*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBContainer,\r\n  MDBDataTable,\r\n  MDBView,\r\n  MDBBadge,\r\n  MDBIcon,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBBtn,\r\n  MDBInput,\r\n  MDBModal\r\n} from \"mdbreact\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst AllWarehouser = () => {\r\n\r\n  const [users, setUsers] = useState([]);\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [editModal, setEditModal] = useState(false);\r\n  const [feedback, setFeedback] = useState(null);\r\n\r\n  const toggleEdit = (user) => {\r\n    setUser(user);\r\n    setEditModal(!editModal);\r\n  }\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"S/N\",\r\n        field: \"sn\",\r\n      },\r\n      {\r\n        label: \"User ID\",\r\n        field: \"id\"\r\n      },\r\n      {\r\n        label: \"Name\",\r\n        field: \"name\",\r\n      },\r\n      {\r\n        label: \"Phone\",\r\n        field: \"phone\",\r\n      },\r\n      {\r\n        label: \"Email\",\r\n        field: \"email\",\r\n      },\r\n      {\r\n        label: \"Account Status\",\r\n        field: \"accountStatus\"\r\n      },\r\n      {\r\n        label: \"Action\",\r\n        field: \"action\",\r\n      }\r\n    ],\r\n    rows: !loading ? users : [{\r\n      sn: <Skeleton />,\r\n      id: <Skeleton />,\r\n      name: <Skeleton />,\r\n      email: <Skeleton />,\r\n      phone: <Skeleton />,\r\n      accountStatus: <Skeleton />,\r\n      action: <Skeleton />\r\n    }]\r\n  };\r\n\r\n  const loadUsers = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/users`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        let sn = users.length;\r\n        const rows = res.data.data.map(user => {\r\n          if (user.type.name === \"merchant\") {\r\n            const row = {\r\n              sn: sn + 1,\r\n              id: user.id,\r\n              name: `${user.firstName} ${user.lastName}`,\r\n              email: user.email,\r\n              phone: user.phoneNumber,\r\n              accountStatus: user.status === 2 ? <MDBBadge className=\"success-color\">Active</MDBBadge> : <MDBBadge className=\"danger-color\">Banned</MDBBadge>,\r\n              action: (<div>\r\n                <Link to={`/user/${user.id}`}><MDBBadge className=\"teal\"><MDBIcon icon=\"eye\" className=\"white-text\" /></MDBBadge></Link>\r\n                <MDBBadge className=\"primary-color mx-1\" onClick={() => toggleEdit(user)}><MDBIcon icon=\"edit\" className=\"white-text\" /></MDBBadge>\r\n                {user.status === 2 ? <MDBBadge className=\"danger-color\" onClick={() => handleBanUser(user)}><MDBIcon icon=\"ban\" className=\"white-text\" /></MDBBadge> : <MDBBadge className=\"success-color\" onClick={() => handleActivateUser(user)}><MDBIcon icon=\"check\" className=\"white-text\" /></MDBBadge>}\r\n              </div>)\r\n            };\r\n            sn++;\r\n            return row;\r\n          }\r\n          return null;\r\n        })\r\n        setLoading(false);\r\n        setUsers([...rows]);\r\n      })\r\n      .catch(err => {\r\n        return [];\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadUsers();\r\n  }, []);\r\n\r\n\r\n\r\n  const handleBanUser = (user) => {\r\n    if (window.confirm(`Are you sure you want to ban ${user.firstName}`)) {\r\n      axios.put(`${apiUrl}/users/${user.id}`, { status: 1 }, {\r\n        headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n      })\r\n        .then(res => {\r\n          if (res.data.success) {\r\n            window.location.reload();\r\n          }\r\n        })\r\n        .catch(err => {\r\n          return err;\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleActivateUser = (user) => {\r\n    if (window.confirm(`Are you sure you want to Unblock ${user.firstName}`)) {\r\n      axios.put(`${apiUrl}/users/${user.id}`, { status: 2 }, {\r\n        headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n      })\r\n        .then(res => {\r\n          if (res.data.success) {\r\n            window.location.reload();\r\n          }\r\n        })\r\n        .catch(err => {\r\n          return err;\r\n        })\r\n    }\r\n  }\r\n\r\n\r\n  const handleEditInput = (val, data) => {\r\n    user[data] = val.target.value;\r\n    setUser({ ...user });\r\n  }\r\n  const handleEditUser = () => {\r\n    setLoading(true);\r\n    const data = {\r\n      firstName: user.firstName,\r\n      lastName: user.lastName,\r\n      phoneNumber: user.phoneNumber,\r\n      email: user.email\r\n    }\r\n    axios.put(`${apiUrl}/users/${user.id}`, data, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        if (res.data.success) {\r\n          window.location.reload();\r\n          return toggleEdit(user);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        setFeedback(\"Unable to update user!\");\r\n        return err;\r\n      })\r\n  }\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCard>\r\n        <MDBCard narrow className=\"z-depth-0\">\r\n          <MDBView\r\n            cascade\r\n            className=\"teal accent-4 narrower py-2 my-3 d-flex justify-content-between align-items-center\"\r\n          >\r\n            <div className=\"text-left\"></div>\r\n            <span className=\"white-text text-bold mx-3\">All Merchants</span>\r\n            <div className=\"text-right\"></div>\r\n          </MDBView>\r\n        </MDBCard>\r\n        <MDBCardBody>\r\n          <MDBDataTable striped responsive bordered small hover data={data} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n\r\n\r\n      <MDBModal\r\n        isOpen={editModal}\r\n        toggle={() => this.toggleEdit(user)}\r\n        inline={editModal === false}\r\n        backdrop={editModal === false ? false : true}\r\n        cascading\r\n        disableFocusTrap={editModal === false ? true : false}>\r\n        <MDBModalHeader\r\n          toggle={editModal === false ? () => { } : () => toggleEdit(user)}\r\n          className='teal accent-4 white-text'\r\n        >\r\n          <MDBIcon icon=\"add\" className='mr-2' />{' '}\r\n          Edit {user && user.firstName}'s Info\r\n        </MDBModalHeader>\r\n        <div className=\"alert-danger\">{feedback && feedback}</div>\r\n        <MDBModalBody className='mb-0'>\r\n          <MDBInput label='First Name' value={user && user.firstName} onChange={(val) => handleEditInput(val, \"firstName\")} />\r\n          <MDBInput label='Last Name' value={user && user.lastName} onChange={(val) => handleEditInput(val, \"lastName\")} />\r\n          <MDBInput label='Email' type=\"email\" value={user && user.email} onChange={(val) => handleEditInput(val, \"email\")} />\r\n          <MDBInput label='Phone Number' type=\"number\" value={user && user.phoneNumber} onChange={(val) => handleEditInput(val, \"phoneNumber\")} />\r\n          <div className='text-center mb-1-half'>\r\n            <MDBBtn\r\n              className='teal accent-4 mb-2'\r\n              onClick={() => handleEditUser()}\r\n            >{loading && (\r\n              <div className=\"spinner-border spinner-border-sm text-white\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </div>)}\r\n              Update\r\n              <MDBIcon icon=\"plus\" className='ml-1' />\r\n            </MDBBtn>\r\n          </div>\r\n        </MDBModalBody>\r\n      </MDBModal>\r\n\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default AllWarehouser;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBContainer,\r\n  MDBDataTable,\r\n  MDBView,\r\n  MDBIcon,\r\n  MDBModal,\r\n  MDBBadge,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBBtn,\r\n  MDBInput\r\n} from \"mdbreact\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst AllUsers = () => {\r\n\r\n  const [users, setUsers] = useState([]);\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [editModal, setEditModal] = useState(false);\r\n  const [feedback, setFeedback] = useState(null);\r\n\r\n  const toggleEdit = (user) => {\r\n    setUser(user);\r\n    setEditModal(!editModal);\r\n  }\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"S/N\",\r\n        field: \"sn\",\r\n      },\r\n      {\r\n        label: \"User ID\",\r\n        field: \"id\"\r\n      },\r\n      {\r\n        label: \"Name\",\r\n        field: \"name\",\r\n      },\r\n      {\r\n        label: \"Email\",\r\n        field: \"email\",\r\n      },\r\n      {\r\n        label: \"Phone\",\r\n        field: \"phone\",\r\n      },\r\n      {\r\n        label: \"Account Type\",\r\n        field: \"type\",\r\n      },\r\n      {\r\n        label: \"Account Status\",\r\n        field: \"accountStatus\",\r\n      },\r\n      {\r\n        label: \"Action\",\r\n        field: \"action\",\r\n      }\r\n    ],\r\n    rows: !loading ? users : [{\r\n      sn: <Skeleton />,\r\n      id: <Skeleton />,\r\n      name: <Skeleton />,\r\n      email: <Skeleton />,\r\n      phone: <Skeleton />,\r\n      type: <Skeleton />,\r\n      accountStatus: <Skeleton />,\r\n      action: <Skeleton />\r\n    }]\r\n  };\r\n\r\n  const loadUsers = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/users`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        let sn = users.length;\r\n        const rows = res.data.data.map(user => {\r\n          const row = {\r\n            sn: sn + 1,\r\n            id: user.id,\r\n            name: `${user.firstName} ${user.lastName}`,\r\n            email: user.email,\r\n            phone: user.phoneNumber,\r\n            type: user.type.name,\r\n            accountStatus: user.status === 2 ? <MDBBadge className=\"success-color\">Active</MDBBadge> : <MDBBadge className=\"danger-color\">Banned</MDBBadge>,\r\n            action: (<div>\r\n              <Link to={`/user/${user.id}`}><MDBBadge className=\"teal\"><MDBIcon icon=\"eye\" className=\"white-text\" /></MDBBadge></Link>\r\n              <MDBBadge className=\"primary-color mx-1\" onClick={() => toggleEdit(user)}><MDBIcon icon=\"edit\" className=\"white-text\" /></MDBBadge>\r\n              {user.status === 2 ? <MDBBadge className=\"danger-color\" onClick={() => handleBanUser(user)}><MDBIcon icon=\"ban\" className=\"white-text\" /></MDBBadge> : <MDBBadge className=\"success-color\" onClick={() => handleActivateUser(user)}><MDBIcon icon=\"check\" className=\"white-text\" /></MDBBadge>}\r\n            </div>)\r\n          };\r\n          sn++;\r\n          return row;\r\n        })\r\n        setLoading(false);\r\n        setUsers([...rows]);\r\n      })\r\n      .catch(err => {\r\n        return [];\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadUsers();\r\n  }, []);\r\n\r\n  const handleBanUser = (user) => {\r\n    if (window.confirm(`Are you sure you want to ban ${user.firstName}`)) {\r\n      axios.put(`${apiUrl}/users/${user.id}`, { status: 1 }, {\r\n        headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n      })\r\n        .then(res => {\r\n          if (res.data.success) {\r\n            window.location.reload();\r\n          }\r\n        })\r\n        .catch(err => {\r\n          return err;\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleActivateUser = (user) => {\r\n    if (window.confirm(`Are you sure you want to Unblock ${user.firstName}`)) {\r\n      axios.put(`${apiUrl}/users/${user.id}`, { status: 2 }, {\r\n        headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n      })\r\n        .then(res => {\r\n          if (res.data.success) {\r\n            window.location.reload();\r\n          }\r\n        })\r\n        .catch(err => {\r\n          return err;\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleEditInput = (val, data) => {\r\n    user[data] = val.target.value;\r\n    setUser({ ...user });\r\n  }\r\n  const handleEditUser = () => {\r\n    setLoading(true);\r\n    const data = {\r\n      firstName: user.firstName,\r\n      lastName: user.lastName,\r\n      phoneNumber: user.phoneNumber,\r\n      email: user.email\r\n    }\r\n    axios.put(`${apiUrl}/users/${user.id}`, data, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        if (res.data.success) {\r\n          window.location.reload();\r\n          return toggleEdit(user);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        setFeedback(\"Unable to update user!\");\r\n        return err;\r\n      })\r\n  }\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCard>\r\n        <MDBCard narrow className=\"z-depth-0\">\r\n          <MDBView\r\n            cascade\r\n            className=\"teal accent-4 narrower py-2 my-3 d-flex justify-content-between align-items-center\"\r\n          >\r\n            <div className=\"text-left\"></div>\r\n            <span className=\"white-text text-bold mx-3\">All Users</span>\r\n            <div className=\"text-right\"></div>\r\n          </MDBView>\r\n        </MDBCard>\r\n        <MDBCardBody>\r\n          <MDBDataTable striped responsive bordered small hover data={data} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n\r\n      <MDBModal\r\n        isOpen={editModal}\r\n        toggle={() => this.toggleEdit(user)}\r\n        inline={editModal === false}\r\n        backdrop={editModal === false ? false : true}\r\n        cascading\r\n        disableFocusTrap={editModal === false ? true : false}>\r\n        <MDBModalHeader\r\n          toggle={editModal === false ? () => { } : () => toggleEdit(user)}\r\n          className='teal accent-4 white-text'\r\n        >\r\n          <MDBIcon icon=\"add\" className='mr-2' />{' '}\r\n          Edit {user && user.firstName}'s Info\r\n        </MDBModalHeader>\r\n        <div className=\"alert-danger\">{feedback && feedback}</div>\r\n        <MDBModalBody className='mb-0'>\r\n          <MDBInput label='First Name' value={user && user.firstName} onChange={(val) => handleEditInput(val, \"firstName\")} />\r\n          <MDBInput label='Last Name' value={user && user.lastName} onChange={(val) => handleEditInput(val, \"lastName\")} />\r\n          <MDBInput label='Email' type=\"email\" value={user && user.email} onChange={(val) => handleEditInput(val, \"email\")} />\r\n          <MDBInput label='Phone Number' type=\"number\" value={user && user.phoneNumber} onChange={(val) => handleEditInput(val, \"phoneNumber\")} />\r\n          <div className='text-center mb-1-half'>\r\n            <MDBBtn\r\n              className='teal accent-4 mb-2'\r\n              onClick={() => handleEditUser()}\r\n            >{loading && (\r\n              <div className=\"spinner-border spinner-border-sm text-white\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </div>)}\r\n              Update\r\n              <MDBIcon icon=\"plus\" className='ml-1' />\r\n            </MDBBtn>\r\n          </div>\r\n        </MDBModalBody>\r\n      </MDBModal>\r\n\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default AllUsers;\r\n","/* \r\n* List of all users that are also warehousers are diplayed here\r\n* When you click to view the warehouse listings. It brings up a list\r\n* having the listings by that particular user.\r\n*/\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBContainer,\r\n  MDBDataTable,\r\n  MDBView,\r\n  MDBBadge,\r\n  MDBIcon,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBBtn,\r\n  MDBInput,\r\n  MDBModal\r\n} from \"mdbreact\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst AllWarehouser = () => {\r\n\r\n  const [users, setUsers] = useState([]);\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [editModal, setEditModal] = useState(false);\r\n  const [feedback, setFeedback] = useState(null);\r\n\r\n  const toggleEdit = (user) => {\r\n    setUser(user);\r\n    setEditModal(!editModal);\r\n  }\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"S/N\",\r\n        field: \"sn\",\r\n      },\r\n      {\r\n        label: \"User ID\",\r\n        field: \"id\"\r\n      },\r\n      {\r\n        label: \"Name\",\r\n        field: \"name\",\r\n      },\r\n      {\r\n        label: \"Phone\",\r\n        field: \"phone\",\r\n      },\r\n      {\r\n        label: \"Email\",\r\n        field: \"email\",\r\n      },\r\n      {\r\n        label: \"Account Status\",\r\n        field: \"accountStatus\"\r\n      },\r\n      {\r\n        label: \"Action\",\r\n        field: \"action\",\r\n      }\r\n    ],\r\n    rows: !loading ? users : [{\r\n      sn: <Skeleton />,\r\n      id: <Skeleton />,\r\n      name: <Skeleton />,\r\n      email: <Skeleton />,\r\n      phone: <Skeleton />,\r\n      accountStatus: <Skeleton />,\r\n      action: <Skeleton />\r\n    }]\r\n  };\r\n\r\n  const loadUsers = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/users`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        let sn = users.length;\r\n        const rows = res.data.data.map(user => {\r\n          if (user.type.name === \"warehouser\") {\r\n            const row = {\r\n              sn: sn + 1,\r\n              id: user.id,\r\n              name: `${user.firstName} ${user.lastName}`,\r\n              email: user.email,\r\n              phone: user.phoneNumber,\r\n              accountStatus: user.status === 2 ? <MDBBadge className=\"success-color\">Active</MDBBadge> : <MDBBadge className=\"danger-color\">Banned</MDBBadge>,\r\n              action: (<div>\r\n                <Link to={`/user/${user.id}`}><MDBBadge className=\"teal\"><MDBIcon icon=\"eye\" className=\"white-text\" /></MDBBadge></Link>\r\n                <MDBBadge className=\"primary-color mx-1\" onClick={() => toggleEdit(user)}><MDBIcon icon=\"edit\" className=\"white-text\" /></MDBBadge>\r\n                {user.status === 2 ? <MDBBadge className=\"danger-color\" onClick={() => handleBanUser(user)}><MDBIcon icon=\"ban\" className=\"white-text\" /></MDBBadge> : <MDBBadge className=\"success-color\" onClick={() => handleActivateUser(user)}><MDBIcon icon=\"check\" className=\"white-text\" /></MDBBadge>}\r\n              </div>)\r\n            };\r\n            sn++;\r\n            return row;\r\n          }\r\n          return null;\r\n        })\r\n        setLoading(false);\r\n        setUsers([...rows]);\r\n      })\r\n      .catch(err => {\r\n        return [];\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadUsers();\r\n  }, []);\r\n\r\n\r\n\r\n\r\n  const handleBanUser = (user) => {\r\n    if (window.confirm(`Are you sure you want to ban ${user.firstName}`)) {\r\n      axios.put(`${apiUrl}/users/${user.id}`, { status: 1 }, {\r\n        headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n      })\r\n        .then(res => {\r\n          if (res.data.success) {\r\n            window.location.reload();\r\n          }\r\n        })\r\n        .catch(err => {\r\n          return err;\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleActivateUser = (user) => {\r\n    if (window.confirm(`Are you sure you want to Unblock ${user.firstName}`)) {\r\n      axios.put(`${apiUrl}/users/${user.id}`, { status: 2 }, {\r\n        headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n      })\r\n        .then(res => {\r\n          if (res.data.success) {\r\n            window.location.reload();\r\n          }\r\n        })\r\n        .catch(err => {\r\n          return err;\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleEditInput = (val, data) => {\r\n    user[data] = val.target.value;\r\n    setUser({ ...user });\r\n  }\r\n  const handleEditUser = () => {\r\n    setLoading(true);\r\n    const data = {\r\n      firstName: user.firstName,\r\n      lastName: user.lastName,\r\n      phoneNumber: user.phoneNumber,\r\n      email: user.email\r\n    }\r\n    axios.put(`${apiUrl}/users/${user.id}`, data, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        if (res.data.success) {\r\n          window.location.reload();\r\n          return toggleEdit(user);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        setFeedback(\"Unable to update user!\");\r\n        return err;\r\n      })\r\n  }\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCard>\r\n        <MDBCard narrow className=\"z-depth-0\">\r\n          <MDBView\r\n            cascade\r\n            className=\"teal accent-4 narrower py-2 my-3 d-flex justify-content-between align-items-center\"\r\n          >\r\n            <div className=\"text-left\"></div>\r\n            <span className=\"white-text text-bold mx-3\">All Warehousers</span>\r\n            <div className=\"text-right\"></div>\r\n          </MDBView>\r\n        </MDBCard>\r\n        <MDBCardBody>\r\n          <MDBDataTable striped responsive bordered small hover data={data} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n\r\n\r\n\r\n      <MDBModal\r\n        isOpen={editModal}\r\n        toggle={() => this.toggleEdit(user)}\r\n        inline={editModal === false}\r\n        backdrop={editModal === false ? false : true}\r\n        cascading\r\n        disableFocusTrap={editModal === false ? true : false}>\r\n        <MDBModalHeader\r\n          toggle={editModal === false ? () => { } : () => toggleEdit(user)}\r\n          className='teal accent-4 white-text'\r\n        >\r\n          <MDBIcon icon=\"add\" className='mr-2' />{' '}\r\n          Edit {user && user.firstName}'s Info\r\n        </MDBModalHeader>\r\n        <div className=\"alert-danger\">{feedback && feedback}</div>\r\n        <MDBModalBody className='mb-0'>\r\n          <MDBInput label='First Name' value={user && user.firstName} onChange={(val) => handleEditInput(val, \"firstName\")} />\r\n          <MDBInput label='Last Name' value={user && user.lastName} onChange={(val) => handleEditInput(val, \"lastName\")} />\r\n          <MDBInput label='Email' type=\"email\" value={user && user.email} onChange={(val) => handleEditInput(val, \"email\")} />\r\n          <MDBInput label='Phone Number' type=\"number\" value={user && user.phoneNumber} onChange={(val) => handleEditInput(val, \"phoneNumber\")} />\r\n          <div className='text-center mb-1-half'>\r\n            <MDBBtn\r\n              className='teal accent-4 mb-2'\r\n              onClick={() => handleEditUser()}\r\n            >{loading && (\r\n              <div className=\"spinner-border spinner-border-sm text-white\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </div>)}\r\n              Update\r\n              <MDBIcon icon=\"plus\" className='ml-1' />\r\n            </MDBBtn>\r\n          </div>\r\n        </MDBModalBody>\r\n      </MDBModal>\r\n\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default AllWarehouser;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBContainer,\r\n  MDBDataTable,\r\n  MDBView,\r\n  MDBIcon,\r\n  MDBBadge,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBBtn,\r\n  MDBInput,\r\n  MDBModal\r\n} from \"mdbreact\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst BannedUsers = () => {\r\n\r\n  const [users, setUsers] = useState([]);\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [editModal, setEditModal] = useState(false);\r\n  const [feedback, setFeedback] = useState(null);\r\n\r\n  const toggleEdit = (user) => {\r\n    setUser(user);\r\n    setEditModal(!editModal);\r\n  }\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"S/N\",\r\n        field: \"sn\",\r\n      },\r\n      {\r\n        label: \"User ID\",\r\n        field: \"id\"\r\n      },\r\n      {\r\n        label: \"Name\",\r\n        field: \"name\",\r\n      },\r\n      {\r\n        label: \"Email\",\r\n        field: \"email\",\r\n      },\r\n      {\r\n        label: \"Phone\",\r\n        field: \"phone\",\r\n      },\r\n      {\r\n        label: \"Account Status\",\r\n        field: \"accountStatus\",\r\n      },\r\n      {\r\n        label: \"Action\",\r\n        field: \"action\",\r\n      }\r\n    ],\r\n    rows: !loading ? users : [{\r\n      sn: <Skeleton />,\r\n      id: <Skeleton />,\r\n      name: <Skeleton />,\r\n      email: <Skeleton />,\r\n      phone: <Skeleton />,\r\n      accountStatus: <Skeleton />,\r\n      action: <Skeleton />\r\n    }]\r\n  };\r\n\r\n  const loadUsers = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/users`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        const rows = res.data.data.map(user => {\r\n          let sn = users.length;\r\n          if (user.status !== 2) {\r\n            const row = {\r\n              sn: sn + 1,\r\n              id: user.id,\r\n              name: `${user.firstName} ${user.lastName}`,\r\n              email: user.email,\r\n              phone: user.phoneNumber,\r\n              type: user.type.name,\r\n              accountStatus: <MDBBadge className=\"danger-color\">Banned</MDBBadge>,\r\n              action: (<div>\r\n                <Link to={`/user/${user.id}`}><MDBBadge className=\"teal\"><MDBIcon icon=\"eye\" className=\"white-text\" /></MDBBadge></Link>\r\n                <MDBBadge className=\"primary-color mx-1\" onClick={() => toggleEdit(user)}><MDBIcon icon=\"edit\" className=\"white-text\" /></MDBBadge>\r\n                <MDBBadge className=\"success-color\" onClick={() => handleActivateUser(user)}><MDBIcon icon=\"check\" className=\"white-text\" /></MDBBadge>\r\n              </div>)\r\n            };\r\n            return row;\r\n          }\r\n          sn++;\r\n          return null;\r\n        })\r\n        setLoading(false);\r\n        setUsers([...rows]);\r\n      })\r\n      .catch(err => {\r\n        return [];\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadUsers();\r\n  }, []);\r\n\r\n  const handleActivateUser = (user) => {\r\n    if (window.confirm(`Are you sure you want to Unblock ${user.firstName}`)) {\r\n      axios.put(`${apiUrl}/users/${user.id}`, { status: 2 }, {\r\n        headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n      })\r\n        .then(res => {\r\n          if (res.data.success) {\r\n            window.location.reload();\r\n          }\r\n        })\r\n        .catch(err => {\r\n          return err;\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleEditInput = (val, data) => {\r\n    user[data] = val.target.value;\r\n    setUser({ ...user });\r\n  }\r\n  const handleEditUser = () => {\r\n    setLoading(true);\r\n    const data = {\r\n      firstName: user.firstName,\r\n      lastName: user.lastName,\r\n      phoneNumber: user.phoneNumber,\r\n      email: user.email\r\n    }\r\n    axios.put(`${apiUrl}/users/${user.id}`, data, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        if (res.data.success) {\r\n          window.location.reload();\r\n          return toggleEdit(user);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        setFeedback(\"Unable to update user!\");\r\n        return err;\r\n      })\r\n  }\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCard>\r\n        <MDBCard narrow className=\"z-depth-0\">\r\n          <MDBView\r\n            cascade\r\n            className=\"teal accent-4 narrower py-2 my-3 d-flex justify-content-between align-items-center\"\r\n          >\r\n            <div className=\"text-left\"></div>\r\n            <span className=\"white-text text-bold mx-3\">Banned Users</span>\r\n            <div className=\"text-right\"></div>\r\n          </MDBView>\r\n        </MDBCard>\r\n        <MDBCardBody>\r\n          <MDBDataTable striped responsive bordered small hover data={data} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n\r\n\r\n\r\n      <MDBModal\r\n        isOpen={editModal}\r\n        toggle={() => this.toggleEdit(user)}\r\n        inline={editModal === false}\r\n        backdrop={editModal === false ? false : true}\r\n        cascading\r\n        disableFocusTrap={editModal === false ? true : false}>\r\n        <MDBModalHeader\r\n          toggle={editModal === false ? () => { } : () => toggleEdit(user)}\r\n          className='teal accent-4 white-text'\r\n        >\r\n          <MDBIcon icon=\"add\" className='mr-2' />{' '}\r\n          Edit {user && user.firstName}'s Info\r\n        </MDBModalHeader>\r\n        <div className=\"alert-danger\">{feedback && feedback}</div>\r\n        <MDBModalBody className='mb-0'>\r\n          <MDBInput label='First Name' value={user && user.firstName} onChange={(val) => handleEditInput(val, \"firstName\")} />\r\n          <MDBInput label='Last Name' value={user && user.lastName} onChange={(val) => handleEditInput(val, \"lastName\")} />\r\n          <MDBInput label='Email' type=\"email\" value={user && user.email} onChange={(val) => handleEditInput(val, \"email\")} />\r\n          <MDBInput label='Phone Number' type=\"number\" value={user && user.phoneNumber} onChange={(val) => handleEditInput(val, \"phoneNumber\")} />\r\n          <div className='text-center mb-1-half'>\r\n            <MDBBtn\r\n              className='teal accent-4 mb-2'\r\n              onClick={() => handleEditUser()}\r\n            >{loading && (\r\n              <div className=\"spinner-border spinner-border-sm text-white\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </div>)}\r\n              Update\r\n              <MDBIcon icon=\"plus\" className='ml-1' />\r\n            </MDBBtn>\r\n          </div>\r\n        </MDBModalBody>\r\n      </MDBModal>\r\n\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default BannedUsers;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBContainer,\r\n  MDBDataTable,\r\n  MDBView,\r\n  MDBIcon,\r\n  MDBBadge,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBBtn,\r\n  MDBInput\r\n} from \"mdbreact\";\r\n\r\nconst AllListings = () => {\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [listings, setListings] = useState([]);\r\n  const [listing, setListing] = useState(null);\r\n  const [feedback, setFeedback] = useState(null);\r\n  const [editModal, setEditModal] = useState(false);\r\n\r\n  const toggleEdit = (listing) => {\r\n    setListing(listing);\r\n    setEditModal(!editModal);\r\n  }\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"S/N\",\r\n        field: \"sn\",\r\n      },\r\n      {\r\n        label: \"Listin Id\",\r\n        field: \"id\",\r\n      },\r\n      {\r\n        label: \"Name\",\r\n        field: \"name\",\r\n      },\r\n      {\r\n        label: \"Description\",\r\n        field: \"description\",\r\n      },\r\n      {\r\n        label: \"Price\",\r\n        field: \"price\",\r\n      },\r\n      {\r\n        label: \"Discount\",\r\n        field: \"discount\",\r\n      },\r\n      {\r\n        label: \"User\",\r\n        field: \"user\",\r\n      },\r\n      {\r\n        label: \"Availability\",\r\n        field: \"availability\",\r\n      },\r\n      {\r\n        label: \"Status\",\r\n        field: \"status\",\r\n      },\r\n      {\r\n        label: \"Action\",\r\n        field: \"action\",\r\n      },\r\n    ],\r\n    rows: !loading ? listings : [{\r\n      sn: <Skeleton />,\r\n      id: <Skeleton />,\r\n      name: <Skeleton />,\r\n      description: <Skeleton />,\r\n      price: <Skeleton />,\r\n      discount: <Skeleton />,\r\n      user: <Skeleton />,\r\n      availability: <Skeleton />,\r\n      action: <Skeleton />,\r\n      status: <Skeleton />\r\n    }]\r\n  };\r\n\r\n  const loadListings = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/listings`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        let sn = listings.length;\r\n        const rows = res.data.data.map(listing => {\r\n          const row = {\r\n            sn: sn + 1,\r\n            id: listing.id,\r\n            name: listing.name,\r\n            description: listing.description,\r\n            price: listing.price,\r\n            discount: listing.discount,\r\n            user: <Link className=\"teal-text\" to={`/user/${listing.user.id}`}>{listing.user.firstName} {listing.user.lastName}</Link>,\r\n            availability: listing.availability.to > Date.now() ? <MDBBadge color=\"success\">Available</MDBBadge> : <MDBBadge color=\"danger\">Expired</MDBBadge>,\r\n            status: listing.status === 2 ? <MDBBadge color=\"success\">Active</MDBBadge> : <MDBBadge className=\"danger-color\">Blocked</MDBBadge>,\r\n            action: listing.availability.to < Date.now() ? (<div>\r\n              <MDBBadge className=\"primary-color mr-1\" onClick={() => toggleEdit(listing)}><MDBIcon icon=\"edit\" className=\"white-text\" /></MDBBadge>\r\n              <MDBBadge className=\"danger-color\" onClick={() => handleDeleteListing(listing)}><MDBIcon icon=\"trash\" className=\"white-text\" /></MDBBadge>\r\n            </div>) : listing.status !== 2 ? (<div>\r\n              <MDBBadge className=\"primary-color\" onClick={() => toggleEdit(listing)}><MDBIcon icon=\"edit\" className=\"white-text\" /></MDBBadge>\r\n              <MDBBadge className=\"success-color mx-1\" onClick={() => handleActivateListing(listing)}><MDBIcon icon=\"check\" className=\"white-text\" /></MDBBadge>\r\n              <MDBBadge className=\"danger-color\" onClick={() => handleDeleteListing(listing)}><MDBIcon icon=\"trash\" className=\"white-text\" /></MDBBadge>\r\n            </div>) : (<div>\r\n              <MDBBadge className=\"primary-color mr-1\" onClick={() => toggleEdit(listing)}><MDBIcon icon=\"edit\" className=\"white-text\" /></MDBBadge>\r\n              <MDBBadge className=\"danger-color\" onClick={() => handleBlockListing(listing)}><MDBIcon icon=\"ban\" className=\"white-text\" /></MDBBadge>\r\n            </div>)\r\n          };\r\n          sn++;\r\n          return row;\r\n        })\r\n        setLoading(false);\r\n        setListings(rows);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        return [];\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadListings();\r\n  }, []);\r\n\r\n  const handleDeleteListing = (listing) => {\r\n    if (window.confirm(\"Are you sure you want to Delete this listing? \\nNB: This cannot be undone!\")) {\r\n      axios.delete(`${apiUrl}/listings/${listing.id}`, {\r\n        headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n      })\r\n        .then(res => {\r\n          if (res.data.success) {\r\n            window.location.reload();\r\n          }\r\n        })\r\n        .catch(err => {\r\n          return err;\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleActivateListing = (listing) => {\r\n    if (window.confirm(\"Are you sure you want to unblock this listing?\")) {\r\n      axios.put(`${apiUrl}/listings/${listing.id}`, { status: 2 }, {\r\n        headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n      })\r\n        .then(res => {\r\n          if (res.data.success) {\r\n            window.location.reload();\r\n          }\r\n        })\r\n        .catch(err => {\r\n          return err;\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleBlockListing = (listing) => {\r\n    if (window.confirm(\"Are you sure you want to Block this listing?\")) {\r\n      axios.put(`${apiUrl}/listings/${listing.id}`, { status: 1 }, {\r\n        headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n      })\r\n        .then(res => {\r\n          if (res.data.success) {\r\n            window.location.reload();\r\n          }\r\n        })\r\n        .catch(err => {\r\n          return err;\r\n        })\r\n    }\r\n  }\r\n\r\n\r\n  const handleEditInput = (val, data) => {\r\n    listing[data] = val.target.value;\r\n    setListing({ ...listing });\r\n  }\r\n  const handleEditListing = () => {\r\n    setLoading(true);\r\n    const data = {\r\n      name: listing.name,\r\n      proofOfOwnership: listing.proofOfOwnership,\r\n      description: listing.description,\r\n      price: parseInt(listing.price),\r\n      slug: listing.slug,\r\n      currency: listing.currency,\r\n      discount: parseInt(listing.discount),\r\n      windows: parseInt(listing.windows),\r\n    }\r\n    axios.put(`${apiUrl}/listings/${listing.id}`, data, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        if (res.data.success) {\r\n          window.location.reload();\r\n          return toggleEdit(listing);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        setFeedback(\"Unable to update listing!\");\r\n        return err;\r\n      })\r\n  }\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCard>\r\n        <MDBCard narrow className=\"z-depth-0\">\r\n          <MDBView\r\n            cascade\r\n            className=\"teal accent-4 narrower py-2 my-3 d-flex justify-content-between align-items-center\"\r\n          >\r\n            <div className=\"text-left\"></div>\r\n            <span className=\"white-text text-bold mx-3\">\r\n              All Listings\r\n            </span>\r\n            <div className=\"text-right\"></div>\r\n          </MDBView>\r\n        </MDBCard>\r\n        <MDBCardBody>\r\n          <MDBDataTable striped responsive bordered small hover data={data} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n\r\n\r\n      <MDBModal\r\n        isOpen={editModal}\r\n        toggle={() => this.toggleEdit(listing)}\r\n        inline={editModal === false}\r\n        backdrop={editModal === false ? false : true}\r\n        cascading\r\n        disableFocusTrap={editModal === false ? true : false}>\r\n        <MDBModalHeader\r\n          toggle={editModal === false ? () => { } : () => toggleEdit(listing)}\r\n          className='teal accent-4 white-text'\r\n        >\r\n          <MDBIcon icon=\"add\" className='mr-2' />{' '}\r\n          Edit {listing && listing.name}'s Details\r\n        </MDBModalHeader>\r\n        <div className=\"alert-danger\">{feedback && feedback}</div>\r\n        <MDBModalBody className='mb-0'>\r\n          <MDBInput label='Name' value={listing && listing.name} onChange={(val) => handleEditInput(val, \"name\")} />\r\n          <MDBInput label='Proof Of  Ownership' value={listing && listing.proofOfOwnership} onChange={(val) => handleEditInput(val, \"proofOfOwnership\")} />\r\n          <MDBInput label='Description' value={listing && listing.description} onChange={(val) => handleEditInput(val, \"description\")} />\r\n          <MDBInput label='Price' value={listing && listing.price} onChange={(val) => handleEditInput(val, \"price\")} />\r\n          <MDBInput label='Slug' value={listing && listing.slug} onChange={(val) => handleEditInput(val, \"slug\")} />\r\n          <MDBInput label='Currency' value={listing && listing.currency} onChange={(val) => handleEditInput(val, \"currency\")} />\r\n          <MDBInput label='Discount' value={listing && listing.discount} onChange={(val) => handleEditInput(val, \"discount\")} />\r\n          <MDBInput label='Windows' value={listing && listing.windows} onChange={(val) => handleEditInput(val, \"windows\")} />\r\n          <div className='text-center mb-1-half'>\r\n            <MDBBtn\r\n              className='teal accent-4 mb-2'\r\n              onClick={() => handleEditListing()}\r\n            >{loading && (\r\n              <div className=\"spinner-border spinner-border-sm text-white\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </div>)}\r\n              Update\r\n              <MDBIcon icon=\"plus\" className='ml-1' />\r\n            </MDBBtn>\r\n          </div>\r\n        </MDBModalBody>\r\n      </MDBModal>\r\n\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default AllListings;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { Link } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport { money } from \"../../functions\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBContainer,\r\n  MDBDataTable,\r\n  MDBView,\r\n  MDBBadge,\r\n  MDBIcon,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBBtn,\r\n  MDBInput\r\n} from \"mdbreact\";\r\n\r\nconst AvailableListings = () => {\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [listings, setListings] = useState([]);\r\n  const [listing, setListing] = useState(null);\r\n  const [feedback, setFeedback] = useState(null);\r\n  const [editModal, setEditModal] = useState(false);\r\n\r\n  const toggleEdit = (listing) => {\r\n    setListing(listing);\r\n    setEditModal(!editModal);\r\n  }\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"S/N\",\r\n        field: \"sn\",\r\n      },\r\n      {\r\n        label: \"Listin Id\",\r\n        field: \"id\",\r\n      },\r\n      {\r\n        label: \"Name\",\r\n        field: \"name\",\r\n      },\r\n      {\r\n        label: \"Description\",\r\n        field: \"description\",\r\n      },\r\n      {\r\n        label: \"Price\",\r\n        field: \"price\",\r\n      },\r\n      {\r\n        label: \"Discount\",\r\n        field: \"discount\",\r\n      },\r\n      {\r\n        label: \"User\",\r\n        field: \"user\",\r\n      },\r\n      {\r\n        label: \"Status\",\r\n        field: \"status\",\r\n      },\r\n      {\r\n        label: \"Expiry Date\",\r\n        field: \"date\",\r\n      },\r\n      {\r\n        label: \"Action\",\r\n        field: \"action\",\r\n      },\r\n    ],\r\n    rows: !loading ? listings : [{\r\n      sn: <Skeleton />,\r\n      id: <Skeleton />,\r\n      name: <Skeleton />,\r\n      description: <Skeleton />,\r\n      price: <Skeleton />,\r\n      discount: <Skeleton />,\r\n      user: <Skeleton />,\r\n      action: <Skeleton />,\r\n      status: <Skeleton />,\r\n      date: <Skeleton />\r\n    }]\r\n  };\r\n\r\n  const loadListings = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/listings`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        let sn = listings.length;\r\n        const rows = res.data.data.map(listing => {\r\n          if (listing.availability.to > Date.now()) {\r\n            const row = {\r\n              sn: sn + 1,\r\n              id: listing.id,\r\n              name: listing.name,\r\n              description: listing.description,\r\n              price: <>&#8358; {money.format(listing.price)}</>,\r\n              discount: <>&#8358; {money.format(listing.discount)} </>,\r\n              user: <Link className=\"teal-text\" to={`/user/${listing.user.id}`}>{listing.user.firstName} {listing.user.lastName}</Link>,\r\n              status: listing.status === 2 ? <MDBBadge color=\"success\">Active</MDBBadge> : <MDBBadge className=\"danger-color\">Blocked</MDBBadge>,\r\n              date: moment(parseInt(listing.availability.to)).format('L'),\r\n              action: listing.status === 2 ? (<div>\r\n                <MDBBadge className=\"primary-color mr-1\" onClick={() => toggleEdit(listing)}><MDBIcon icon=\"edit\" className=\"white-text\" /></MDBBadge>\r\n                <MDBBadge className=\"danger-color\" onClick={() => handleBlockListing(listing)}><MDBIcon icon=\"ban\" className=\"white-text\" /></MDBBadge>\r\n              </div>) : (<div>\r\n                <MDBBadge className=\"primary-color\" onClick={() => toggleEdit(listing)}><MDBIcon icon=\"edit\" className=\"white-text\" /></MDBBadge>\r\n                <MDBBadge className=\"success-color mx-1\" onClick={() => handleActivateListing(listing)}><MDBIcon icon=\"check\" className=\"white-text\" /></MDBBadge>\r\n                <MDBBadge className=\"danger-color\" onClick={() => handleDeleteListing(listing)}><MDBIcon icon=\"trash\" className=\"white-text\" /></MDBBadge>\r\n              </div>)\r\n            };\r\n            sn++;\r\n            return row;\r\n          }\r\n          return null;\r\n        })\r\n        setLoading(false);\r\n        setListings(rows);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        return [];\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadListings();\r\n  }, []);\r\n\r\n  const handleActivateListing = (listing) => {\r\n    if (window.confirm(\"Are you sure you want to unblock this listing?\")) {\r\n      axios.put(`${apiUrl}/listings/${listing.id}`, { status: 2 }, {\r\n        headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n      })\r\n        .then(res => {\r\n          if (res.data.success) {\r\n            window.location.reload();\r\n          }\r\n        })\r\n        .catch(err => {\r\n          return err;\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleDeleteListing = (listing) => {\r\n    if (window.confirm(\"Are you sure you want to Delete this listing? \\nNB: This cannot be undone!\")) {\r\n      axios.delete(`${apiUrl}/listings/${listing.id}`, {\r\n        headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n      })\r\n        .then(res => {\r\n          if (res.data.success) {\r\n            window.location.reload();\r\n          }\r\n        })\r\n        .catch(err => {\r\n          return err;\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleBlockListing = (listing) => {\r\n    if (window.confirm(\"Are you sure you want to Block this listing?\")) {\r\n      axios.put(`${apiUrl}/listings/${listing.id}`, { status: 1 }, {\r\n        headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n      })\r\n        .then(res => {\r\n          if (res.data.success) {\r\n            window.location.reload();\r\n          }\r\n        })\r\n        .catch(err => {\r\n          return err;\r\n        })\r\n    }\r\n  }\r\n\r\n\r\n  const handleEditInput = (val, data) => {\r\n    listing[data] = val.target.value;\r\n    setListing({ ...listing });\r\n  }\r\n  const handleEditListing = () => {\r\n    setLoading(true);\r\n    const data = {\r\n      name: listing.name,\r\n      proofOfOwnership: listing.proofOfOwnership,\r\n      description: listing.description,\r\n      price: parseInt(listing.price),\r\n      slug: listing.slug,\r\n      currency: listing.currency,\r\n      discount: parseInt(listing.discount),\r\n      windows: parseInt(listing.windows),\r\n    }\r\n    axios.put(`${apiUrl}/listings/${listing.id}`, data, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        if (res.data.success) {\r\n          window.location.reload();\r\n          return toggleEdit(listing);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        setFeedback(\"Unable to update listing!\");\r\n        return err;\r\n      })\r\n  }\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCard>\r\n        <MDBCard narrow className=\"z-depth-0\">\r\n          <MDBView\r\n            cascade\r\n            className=\"teal accent-4 narrower py-2 my-3 d-flex justify-content-between align-items-center\"\r\n          >\r\n            <div className=\"text-left\"></div>\r\n            <span className=\"white-text text-bold mx-3\">\r\n              Available Listings\r\n            </span>\r\n            <div className=\"text-right\"></div>\r\n          </MDBView>\r\n        </MDBCard>\r\n        <MDBCardBody>\r\n          <MDBDataTable striped responsive bordered small hover data={data} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n\r\n\r\n      <MDBModal\r\n        isOpen={editModal}\r\n        toggle={() => this.toggleEdit(listing)}\r\n        inline={editModal === false}\r\n        backdrop={editModal === false ? false : true}\r\n        cascading\r\n        disableFocusTrap={editModal === false ? true : false}>\r\n        <MDBModalHeader\r\n          toggle={editModal === false ? () => { } : () => toggleEdit(listing)}\r\n          className='teal accent-4 white-text'\r\n        >\r\n          <MDBIcon icon=\"add\" className='mr-2' />{' '}\r\n          Edit {listing && listing.name}'s Details\r\n        </MDBModalHeader>\r\n        <div className=\"alert-danger\">{feedback && feedback}</div>\r\n        <MDBModalBody className='mb-0'>\r\n          <MDBInput label='Name' value={listing && listing.name} onChange={(val) => handleEditInput(val, \"name\")} />\r\n          <MDBInput label='Proof Of  Ownership' value={listing && listing.proofOfOwnership} onChange={(val) => handleEditInput(val, \"proofOfOwnership\")} />\r\n          <MDBInput label='Description' value={listing && listing.description} onChange={(val) => handleEditInput(val, \"description\")} />\r\n          <MDBInput label='Price' value={listing && listing.price} onChange={(val) => handleEditInput(val, \"price\")} />\r\n          <MDBInput label='Slug' value={listing && listing.slug} onChange={(val) => handleEditInput(val, \"slug\")} />\r\n          <MDBInput label='Currency' value={listing && listing.currency} onChange={(val) => handleEditInput(val, \"currency\")} />\r\n          <MDBInput label='Discount' value={listing && listing.discount} onChange={(val) => handleEditInput(val, \"discount\")} />\r\n          <MDBInput label='Windows' value={listing && listing.windows} onChange={(val) => handleEditInput(val, \"windows\")} />\r\n          <div className='text-center mb-1-half'>\r\n            <MDBBtn\r\n              className='teal accent-4 mb-2'\r\n              onClick={() => handleEditListing()}\r\n            >{loading && (\r\n              <div className=\"spinner-border spinner-border-sm text-white\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </div>)}\r\n              Update\r\n              <MDBIcon icon=\"plus\" className='ml-1' />\r\n            </MDBBtn>\r\n          </div>\r\n        </MDBModalBody>\r\n      </MDBModal>\r\n\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default AvailableListings;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport moment from \"moment\";\r\nimport { money } from \"../../functions\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBContainer,\r\n  MDBDataTable,\r\n  MDBView,\r\n  MDBBadge\r\n} from \"mdbreact\";\r\n\r\nconst AllRequisitions = () => {\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [requisitions, setRequisitions] = useState([]);\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"S/N\",\r\n        field: \"sn\",\r\n      },\r\n      {\r\n        label: \"Requisition ID\",\r\n        field: \"id\",\r\n      },\r\n      {\r\n        label: \"Listing\",\r\n        field: \"listing\",\r\n      },\r\n      {\r\n        label: \"Products\",\r\n        field: \"products\",\r\n      },\r\n      {\r\n        label: \"Cost\",\r\n        field: \"cost\",\r\n      },\r\n      {\r\n        label: \"Duration\",\r\n        field: \"duration\",\r\n      },\r\n      {\r\n        label: \"Space\",\r\n        field: \"space\",\r\n      },\r\n      {\r\n        label: \"Expires\",\r\n        field: \"expires\",\r\n      },\r\n      {\r\n        label: \"Status\",\r\n        field: \"status\",\r\n      },\r\n    ],\r\n    rows: !loading ? requisitions : [{\r\n      sn: <Skeleton />,\r\n      id: <Skeleton />,\r\n      listing: <Skeleton />,\r\n      products: <Skeleton />,\r\n      cost: <Skeleton />,\r\n      duration: <Skeleton />,\r\n      space: <Skeleton />,\r\n      expires: <Skeleton />,\r\n      status: <Skeleton />\r\n    }]\r\n  };\r\n\r\n  const loadRequisitions = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/requisitions`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        let sn = requisitions.length;\r\n        const rows = res.data.data.map(requisition => {\r\n          const row = {\r\n            sn: sn + 1,\r\n            id: requisition.id,\r\n            listing: requisition.listing.id,\r\n            products: requisition.products.length,\r\n            cost: <>&#8358; {money.format(requisition.cost.baseCost)}</>,\r\n            duration: requisition.duration.name,\r\n            space: requisition.space,\r\n            expires: moment(parseInt(requisition.expires)).format(\"L\"),\r\n            status: requisition.status === 2 ? <MDBBadge color=\"success\">Active</MDBBadge> : <MDBBadge className=\"danger-color\">Canclled</MDBBadge>,\r\n          };\r\n          sn++;\r\n          return row;\r\n        })\r\n        setLoading(false);\r\n        setRequisitions(rows);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        return [];\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadRequisitions();\r\n  }, []);\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCard>\r\n        <MDBCard narrow className=\"z-depth-0\">\r\n          <MDBView\r\n            cascade\r\n            className=\"teal accent-4 narrower py-2 my-3 d-flex justify-content-between align-items-center\"\r\n          >\r\n            <div className=\"text-left\"></div>\r\n            <span className=\"white-text text-bold mx-3\">\r\n              All Requisitions\r\n            </span>\r\n            <div className=\"text-right\"></div>\r\n          </MDBView>\r\n        </MDBCard>\r\n        <MDBCardBody>\r\n          <MDBDataTable striped responsive bordered small hover data={data} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default AllRequisitions;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { money } from \"../../functions\";\r\nimport moment from \"moment\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBContainer,\r\n  MDBDataTable,\r\n  MDBView,\r\n  MDBBadge,\r\n  MDBIcon,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBBtn,\r\n  MDBInput\r\n} from \"mdbreact\";\r\n\r\nconst ExpiredListings = () => {\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [listings, setListings] = useState([]);\r\n  const [listing, setListing] = useState(null);\r\n  const [feedback, setFeedback] = useState(null);\r\n  const [editModal, setEditModal] = useState(false);\r\n\r\n  const toggleEdit = (listing) => {\r\n    setListing(listing);\r\n    setEditModal(!editModal);\r\n  }\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"S/N\",\r\n        field: \"sn\",\r\n      },\r\n      {\r\n        label: \"Listin Id\",\r\n        field: \"id\",\r\n      },\r\n      {\r\n        label: \"Name\",\r\n        field: \"name\",\r\n      },\r\n      {\r\n        label: \"Description\",\r\n        field: \"description\",\r\n      },\r\n      {\r\n        label: \"Price\",\r\n        field: \"price\",\r\n      },\r\n      {\r\n        label: \"Discount\",\r\n        field: \"discount\",\r\n      },\r\n      {\r\n        label: \"User\",\r\n        field: \"user\",\r\n      },\r\n      {\r\n        label: \"Status\",\r\n        field: \"status\",\r\n      },\r\n      {\r\n        label: \"Date Expired\",\r\n        field: \"date\",\r\n      },\r\n      {\r\n        label: \"Action\",\r\n        field: \"action\",\r\n      },\r\n    ],\r\n    rows: !loading ? listings : [{\r\n      sn: <Skeleton />,\r\n      id: <Skeleton />,\r\n      name: <Skeleton />,\r\n      description: <Skeleton />,\r\n      price: <Skeleton />,\r\n      discount: <Skeleton />,\r\n      user: <Skeleton />,\r\n      action: <Skeleton />,\r\n      status: <Skeleton />,\r\n      date: <Skeleton />\r\n    }]\r\n  };\r\n\r\n  const loadListings = async () => {\r\n    setLoading(true);\r\n    axios.get(`${apiUrl}/listings`, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        let sn = listings.length;\r\n        const rows = res.data.data.map(listing => {\r\n          if (listing.availability.to < Date.now()) {\r\n            const row = {\r\n              sn: sn + 1,\r\n              id: listing.id,\r\n              name: listing.name,\r\n              description: listing.description,\r\n              price: listing.price,\r\n              discount: <>&#8358; {money.format(listing.discount)} </>,\r\n              user: <Link className=\"teal-text\" to={`/user/${listing.user.id}`}>{listing.user.firstName} {listing.user.lastName}</Link>,\r\n              status: listing.status === 2 ? <MDBBadge color=\"success\">Active</MDBBadge> : <MDBBadge className=\"danger-color\">Blocked</MDBBadge>,\r\n              date: moment(parseInt(listing.availability.to)).format('L'),\r\n              action: (<div>\r\n                <MDBBadge className=\"primary-color mx-1\" onClick={() => toggleEdit(listing)}><MDBIcon icon=\"edit\" className=\"white-text\" /></MDBBadge>\r\n                <MDBBadge className=\"danger-color\" onClick={() => handleDeleteListing(listing)}><MDBIcon icon=\"trash\" className=\"white-text\" /></MDBBadge>\r\n              </div>)\r\n            };\r\n            sn++;\r\n            return row;\r\n          }\r\n          return null;\r\n        })\r\n        setLoading(false);\r\n        setListings(rows);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        return [];\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadListings();\r\n  }, []);\r\n\r\n\r\n  const handleDeleteListing = (listing) => {\r\n    if (window.confirm(\"Are you sure you want to Delete this listing? \\nNB: This cannot be undone!\")) {\r\n      axios.delete(`${apiUrl}/listings/${listing.id}`, {\r\n        headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n      })\r\n        .then(res => {\r\n          if (res.data.success) {\r\n            window.location.reload();\r\n          }\r\n        })\r\n        .catch(err => {\r\n          return err;\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleEditInput = (val, data) => {\r\n    listing[data] = val.target.value;\r\n    setListing({ ...listing });\r\n  }\r\n  const handleEditListing = () => {\r\n    setLoading(true);\r\n    const data = {\r\n      name: listing.name,\r\n      proofOfOwnership: listing.proofOfOwnership,\r\n      description: listing.description,\r\n      price: parseInt(listing.price),\r\n      slug: listing.slug,\r\n      currency: listing.currency,\r\n      discount: parseInt(listing.discount),\r\n      windows: parseInt(listing.windows),\r\n    }\r\n    axios.put(`${apiUrl}/listings/${listing.id}`, data, {\r\n      headers: { \"x-admin-auth\": localStorage.getItem('token') }\r\n    })\r\n      .then(res => {\r\n        if (res.data.success) {\r\n          window.location.reload();\r\n          return toggleEdit(listing);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        setFeedback(\"Unable to update listing!\");\r\n        return err;\r\n      })\r\n  }\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCard>\r\n        <MDBCard narrow className=\"z-depth-0\">\r\n          <MDBView\r\n            cascade\r\n            className=\"teal accent-4 narrower py-2 my-3 d-flex justify-content-between align-items-center\"\r\n          >\r\n            <div className=\"text-left\"></div>\r\n            <span className=\"white-text text-bold mx-3\">\r\n              Available Listings\r\n            </span>\r\n            <div className=\"text-right\"></div>\r\n          </MDBView>\r\n        </MDBCard>\r\n        <MDBCardBody>\r\n          <MDBDataTable striped responsive bordered small hover data={data} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n\r\n      <MDBModal\r\n        isOpen={editModal}\r\n        toggle={() => this.toggleEdit(listing)}\r\n        inline={editModal === false}\r\n        backdrop={editModal === false ? false : true}\r\n        cascading\r\n        disableFocusTrap={editModal === false ? true : false}>\r\n        <MDBModalHeader\r\n          toggle={editModal === false ? () => { } : () => toggleEdit(listing)}\r\n          className='teal accent-4 white-text'\r\n        >\r\n          <MDBIcon icon=\"add\" className='mr-2' />{' '}\r\n          Edit {listing && listing.name}'s Details\r\n        </MDBModalHeader>\r\n        <div className=\"alert-danger\">{feedback && feedback}</div>\r\n        <MDBModalBody className='mb-0'>\r\n          <MDBInput label='Name' value={listing && listing.name} onChange={(val) => handleEditInput(val, \"name\")} />\r\n          <MDBInput label='Proof Of  Ownership' value={listing && listing.proofOfOwnership} onChange={(val) => handleEditInput(val, \"proofOfOwnership\")} />\r\n          <MDBInput label='Description' value={listing && listing.description} onChange={(val) => handleEditInput(val, \"description\")} />\r\n          <MDBInput label='Price' value={listing && listing.price} onChange={(val) => handleEditInput(val, \"price\")} />\r\n          <MDBInput label='Slug' value={listing && listing.slug} onChange={(val) => handleEditInput(val, \"slug\")} />\r\n          <MDBInput label='Currency' value={listing && listing.currency} onChange={(val) => handleEditInput(val, \"currency\")} />\r\n          <MDBInput label='Discount' value={listing && listing.discount} onChange={(val) => handleEditInput(val, \"discount\")} />\r\n          <MDBInput label='Windows' value={listing && listing.windows} onChange={(val) => handleEditInput(val, \"windows\")} />\r\n          <div className='text-center mb-1-half'>\r\n            <MDBBtn\r\n              className='teal accent-4 mb-2'\r\n              onClick={() => handleEditListing()}\r\n            >{loading && (\r\n              <div className=\"spinner-border spinner-border-sm text-white\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </div>)}\r\n              Update\r\n              <MDBIcon icon=\"plus\" className='ml-1' />\r\n            </MDBBtn>\r\n          </div>\r\n        </MDBModalBody>\r\n      </MDBModal>\r\n\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default ExpiredListings;\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport AuthRoutes from \"./AuthRoutes\";\r\n\r\n// PAGES\r\nimport Dashboard from \"../pages/Dashboard\";\r\nimport EmailNotifications from \"../pages/EmailNotifications\";\r\nimport SingleUser from \"../pages/SingleUser\";\r\n\r\n// INVENTORY LOG\r\nimport DispatchOrderLog from \"../pages/InventoryLog/DispatchOrderLog\";\r\nimport RejectedStockLog from \"../pages/InventoryLog/RejectedStockLog\";\r\nimport StockReceiptLog from \"../pages/InventoryLog/StockReceiptLog\";\r\n\r\n// SETTNIGS\r\nimport EditPassword from \"../pages/Settings/EditPassword\";\r\nimport EmailSettings from \"../pages/Settings/EmailSettings\";\r\nimport SmsSettings from \"../pages/Settings/SmsSettings\";\r\n\r\n// STAFF MANAGEMENT\r\nimport AddNewStaff from \"../pages/StaffManagement/AddNewStaff\";\r\nimport AllStaff from \"../pages/StaffManagement/AllStaff\";\r\nimport RoleManagement from \"../pages/StaffManagement/RoleManagement\";\r\n\r\n// TRANSACTION LOG\r\nimport ExpiredRentLog from \"../pages/TransactionLog/ExpiredRentLog\";\r\nimport MerchantPayoutLog from \"../pages/TransactionLog/MerchantPayoutLog\";\r\nimport ReferralLog from \"../pages/TransactionLog/ReferralLog\";\r\nimport WareHousersPaymentLog from \"../pages/TransactionLog/WareHousersPaymentLog\";\r\nimport WithdrawalLog from \"../pages/TransactionLog/WithdrawalLog\";\r\n\r\n// USER MANAGEMENT\r\nimport AllMerchants from \"../pages/UserManagement/AllMerchants\";\r\nimport AllUsers from \"../pages/UserManagement/AllUsers\";\r\nimport AllWarehouser from \"../pages/UserManagement/AllWarehouser\";\r\nimport BannedUsers from \"../pages/UserManagement/BannedUsers\";\r\n\r\n// LISTING MANAGEMENT\r\nimport AllListings from \"../pages/ListingManagement/AllListings\"\r\nimport AvailableListings from \"../pages/ListingManagement/AvailableListings\"\r\nimport AllRequisitions from \"../pages/ListingManagement/AllRequisitions\"\r\nimport ExpiredListings from \"../pages/ListingManagement/ExpiredListings\"\r\n\r\n\r\n\r\nconst FourToFour = () => <h1 className=\"text-center\">404</h1>;\r\n\r\nconst mapStateToProps = state => ({\r\n  permit: state.permission\r\n})\r\n\r\nclass Routes extends React.Component {\r\n\r\n  isLogged = this.props.isLogged;\r\n\r\n  requiresAuth = (Comp, match = \"\") => {\r\n    if (this.isLogged || localStorage.getItem(\"token\")) {\r\n      return <Comp match={match} />;\r\n    } else {\r\n      return <Redirect to=\"/login\" />\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.isLogged || localStorage.getItem(\"token\")) {\r\n      const { permit } = this.props;\r\n      return (\r\n        <Switch>\r\n          <Route path=\"/\" exact render={({ match }) => this.requiresAuth(Dashboard, match)} />\r\n          <Route\r\n            path=\"/email-notification\"\r\n            exact\r\n            render={({ match }) => this.requiresAuth(EmailNotifications, match)}\r\n          />\r\n          <Route\r\n            path=\"/user/:id\"\r\n            exact\r\n            render={({ match }) => this.requiresAuth(SingleUser, match)}\r\n          />\r\n\r\n          {/* INVENTORY LOG */}\r\n          <Route\r\n            path=\"/logs/dispatch-order-log\"\r\n            exact\r\n            render={({ match }) => this.requiresAuth(DispatchOrderLog, match)}\r\n          />\r\n          <Route\r\n            path=\"/logs/rejected-stock-log\"\r\n            exact\r\n            render={({ match }) => this.requiresAuth(RejectedStockLog)}\r\n          />\r\n          <Route\r\n            path=\"/logs/stock-receipt-log\"\r\n            exact\r\n            render={({ match }) => this.requiresAuth(StockReceiptLog)}\r\n          />\r\n\r\n          {/* SETTINGS */}\r\n          <Route path=\"/settings/edit-password\" exact render={({ match }) => this.requiresAuth(EditPassword)} />\r\n          {/* {(permission === 1 || this.permission === 2) && (<> */}\r\n          <Route\r\n            path=\"/settings/email-settings\"\r\n            exact\r\n            render={({ match }) => this.requiresAuth(EmailSettings)}\r\n          />\r\n          <Route path=\"/settings/sms-settings\" exact render={({ match }) => this.requiresAuth(SmsSettings)} />\r\n          {/* </>)} */}\r\n\r\n          {/* STAFF MANAGEMENT */}\r\n          {permit.management && <Route path=\"/staff/add-staff\" exact render={({ match }) => this.requiresAuth(AddNewStaff, match)} />}\r\n          {permit.management && <Route path=\"/staff/all-staff\" exact render={({ match }) => this.requiresAuth(AllStaff, match)} />}\r\n          {permit.management && <Route path=\"/staff/role-management\" exact render={({ match }) => this.requiresAuth(RoleManagement, match)} />}\r\n\r\n          {/* TRANSACTION LOG */}\r\n          {permit.management && <Route path=\"/logs/expired-rent-log\" exact render={({ match }) => this.requiresAuth(ExpiredRentLog, match)} />}\r\n          {permit.management && <Route\r\n            path=\"/logs/merchant-payout-log\"\r\n            exact\r\n            render={({ match }) => this.requiresAuth(MerchantPayoutLog, match)}\r\n          />}\r\n          {permit.management && <Route path=\"/logs/referral-log\" exact render={({ match }) => this.requiresAuth(ReferralLog, match)} />}\r\n          {permit.management && <Route\r\n            path=\"/logs/warehousers-payment-log\"\r\n            exact\r\n            render={({ match }) => this.requiresAuth(WareHousersPaymentLog, match)}\r\n          />}\r\n          {permit.management && <Route path=\"/logs/withdrawal-log\" exact render={({ match }) => this.requiresAuth(WithdrawalLog, match)} />}\r\n\r\n          {/* USER MANAGEMENT */}\r\n          <Route path=\"/users/merchants\" exact render={({ match }) => this.requiresAuth(AllMerchants, match)} />\r\n          <Route path=\"/users/all-users\" exact render={({ match }) => this.requiresAuth(AllUsers, match)} />\r\n          <Route path=\"/users/warehousers\" exact render={({ match }) => this.requiresAuth(AllWarehouser, match)} />\r\n          <Route path=\"/users/banned-users\" exact render={({ match }) => this.requiresAuth(BannedUsers, match)} />\r\n\r\n          {/* LISTING MANAGEMENT */}\r\n          <Route path=\"/listings\" exact render={({ match }) => this.requiresAuth(AllListings, match)} />\r\n          <Route path=\"/listings/available-listings\" exact render={({ match }) => this.requiresAuth(AvailableListings, match)} />\r\n          <Route path=\"/listings/requisitions\" exact render={({ match }) => this.requiresAuth(AllRequisitions, match)} />\r\n          <Route path=\"/listings/expired-listings\" exact render={({ match }) => this.requiresAuth(ExpiredListings, match)} />\r\n\r\n\r\n          <Route render={({ location }) => {\r\n            if (location.pathname === \"/login\") return <Redirect to=\"/\" />;\r\n            return <FourToFour />\r\n          }} />\r\n        </Switch>\r\n      );\r\n    } else {\r\n      return <AuthRoutes />\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Routes);\r\n","import React, { Component } from \"react\";\r\nimport \"../App.css\";\r\nimport SideNavigation from \"./SideNavigation\";\r\nimport TopNavigation from \"./TopNavigation\";\r\nimport Copyrights from \"./Footer\";\r\nimport Routes from \"./Routes\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      toggle: false,\r\n      windowWidth: 0,\r\n      currentPage: \"\",\r\n      sideNavToggled: false,\r\n      breakWidth: 1400\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps, nextProps, snapshot) {\r\n    if (this.props.location.pathname !== prevProps.location.pathname) {\r\n      this.assessLocation(this.props.location.pathname);\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.handleResize();\r\n    window.addEventListener(\"resize\", this.handleResize);\r\n    this.assessLocation(this.props.location.pathname);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.handleResize);\r\n  }\r\n\r\n  handleResize = () => {\r\n    this.setState({\r\n      windowWidth: window.innerWidth\r\n    });\r\n  };\r\n\r\n  toggleSideNav = () => {\r\n    if (this.state.windowWidth < this.state.breakWidth) {\r\n      this.setState({\r\n        sideNavToggled: !this.state.sideNavToggled\r\n      });\r\n    }\r\n  };\r\n\r\n  assessLocation = location => {\r\n    let locationString;\r\n    switch (location) {\r\n      // Dashboards:\r\n      case \"/\":\r\n        locationString = \"Dashboard\";\r\n        break;\r\n      case \"/email-notifications\":\r\n        locationString = \"Email Notification\";\r\n        break;\r\n      case \"/logs/dispatch-order-log\":\r\n        locationString = \"Dispatch Orders\";\r\n        break;\r\n      case \"/logs/rejected-stock-log\":\r\n        locationString = \"Rejected Stocks\";\r\n        break;\r\n      case \"/logs/stock-receipt-log\":\r\n        locationString = \"Stock Receipts\";\r\n        break;\r\n      case \"/settings/edit-password\":\r\n        locationString = \"Edit Password\";\r\n        break;\r\n      case \"/settings/email-settings\":\r\n        locationString = \"Email Setting\";\r\n        break;\r\n      case \"/settings/sms-settings\":\r\n        locationString = \"SMS Setting\";\r\n        break;\r\n      case \"/staff/add-staff\":\r\n        locationString = \"Add Staff\";\r\n        break;\r\n      case \"/staff/all-staff\":\r\n        locationString = \"All Staff\";\r\n        break;\r\n      case \"/staff/management\":\r\n        locationString = \"Management\";\r\n        break;\r\n      case \"/staff/super-admin\":\r\n        locationString = \"Super Admin\";\r\n        break;\r\n      case \"/staff/support\":\r\n        locationString = \"Support\";\r\n        break;\r\n      case \"/staff/team-lead\":\r\n        locationString = \"Team Lead\";\r\n        break;\r\n      case \"/logs/expired-rent-log\":\r\n        locationString = \"Expired Rents\";\r\n        break;\r\n      case \"/logs/merchant-payout-log\":\r\n        locationString = \"Merchant Payouts\";\r\n        break;\r\n      case \"/logs/referral-log\":\r\n        locationString = \"Referrals\";\r\n        break;\r\n      case \"/logs/warehousers-payment-log\":\r\n        locationString = \"Wayhousers' Payments\";\r\n        break;\r\n      case \"/logs/withdrawal-log\":\r\n        locationString = \"Withdrawals\";\r\n        break;\r\n      case \"/users/merchants\":\r\n        locationString = \"Merchants\";\r\n        break;\r\n      case \"/users/all-users\":\r\n        locationString = \"All Users\";\r\n        break;\r\n      case \"/users/warehousers\":\r\n        locationString = \"WareHousers\";\r\n        break;\r\n      case \"/users/banned-users\":\r\n        locationString = \"Banned Users\";\r\n        break;\r\n      case \"/users/user-rating-history\":\r\n        locationString = \"User Rating History\";\r\n        break;\r\n      case \"/listings\":\r\n        locationString = \"All Listings\";\r\n        break;\r\n      case \"/listings/available-listings\":\r\n        locationString = \"Available Listings\";\r\n        break;\r\n      case \"/listings/expired-listings\":\r\n        locationString = \"Expired Listings\";\r\n        break;\r\n      case \"/listings/requisitions\":\r\n        locationString = \"All Requisitions\";\r\n        break;\r\n      default:\r\n    }\r\n    this.setState({\r\n      currentPage: locationString\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const dynamicLeftPadding = {\r\n      paddingLeft:\r\n        this.state.windowWidth > this.state.breakWidth ? \"240px\" : \"0\"\r\n    };\r\n\r\n    return (\r\n      <div className=\"app\">\r\n        <div className=\"white-skin\">\r\n          <SideNavigation\r\n            breakWidth={this.state.breakWidth}\r\n            style={{ transition: \"all .3s\" }}\r\n            triggerOpening={this.state.sideNavToggled}\r\n            onLinkClick={() => this.toggleSideNav()}\r\n          />\r\n        </div>\r\n        <div className=\"flexible-content white-skin\">\r\n          <TopNavigation\r\n            toggle={this.state.windowWidth < this.state.breakWidth}\r\n            onSideNavToggleClick={this.toggleSideNav}\r\n            routeName={this.state.currentPage}\r\n            className=\"white-skin\"\r\n          />\r\n          <main style={{ ...dynamicLeftPadding, margin: \"8rem 6% 6rem\" }}>\r\n            <Routes onChange={() => this.assessLocation()} />\r\n          </main>\r\n          <Copyrights\r\n            style={{ ...dynamicLeftPadding, position: \"fixed\", width: \"100%\" }}\r\n            className=\"d-none d-lg-block\"\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { Switch } from 'react-router-dom';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport RoutesWithNavigation from './components/RoutesWithNavigation';\r\nimport AuthRoutes from \"./components/AuthRoutes\";\r\n\r\n\r\nconst App = () => {\r\n  const isLogged = useSelector(state => state.isLogged);\r\n\r\n  return (\r\n    <Switch>\r\n      {(!localStorage.getItem('email')) && <AuthRoutes />}\r\n      {(isLogged || localStorage.getItem('email')) && <RoutesWithNavigation />}\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const isLoggedReducer = (state = false, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN\":\r\n      const { email, token, roleId } = action.payload;\r\n      if (!token) return state = false;\r\n      localStorage.setItem(\"token\", token);\r\n      localStorage.setItem(\"email\", email);\r\n      localStorage.setItem(\"roleId\", roleId);\r\n      return state = true;\r\n    case \"LOGOUT\":\r\n      return state = false;\r\n    default:\r\n      return state = false;\r\n  }\r\n}\r\n\r\nexport default isLoggedReducer;","const permissionReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case \"GET_PERMISSION\":\r\n      const permit = {\r\n        superAdmin: localStorage.getItem(\"roleId\") == 1,\r\n        management: localStorage.getItem(\"roleId\") <= 2,\r\n        teamLead: localStorage.getItem(\"roleId\") <= 3,\r\n        support: localStorage.getItem(\"roleId\") <= 4,\r\n      };\r\n      return state = permit;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default permissionReducer;","const userReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"ALL_USERS\":\r\n      return state = action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default userReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport isLoggedReducer from \"./isLoggedReducer\";\r\nimport permissionReducer from \"./permissionReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\n\r\nconst allReducers = combineReducers({\r\n  isLogged: isLoggedReducer,\r\n  permission: permissionReducer,\r\n  users: usersReducer\r\n});\r\n\r\nexport default allReducers;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Router } from 'react-router-dom';\r\nimport { createBrowserHistory } from 'history';\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\"\r\nimport allReducers from \"./Redux/reducers\";\r\n\r\nlet store = createStore(allReducers);\r\n\r\nconst customHistory = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router history={customHistory}>\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}